{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/nls.js", "../../monaco-editor/esm/vs/base/common/platform.js", "../../monaco-editor/esm/vs/base/common/functional.js", "../../monaco-editor/esm/vs/base/common/iterator.js", "../../monaco-editor/esm/vs/base/common/lifecycle.js", "../../monaco-editor/esm/vs/base/common/cache.js", "../../monaco-editor/esm/vs/base/common/lazy.js", "../../monaco-editor/esm/vs/base/common/strings.js", "../../monaco-editor/esm/vs/base/common/errors.js", "../../monaco-editor/esm/vs/base/common/linkedList.js", "../../monaco-editor/esm/vs/base/common/stopwatch.js", "../../monaco-editor/esm/vs/base/common/event.js", "../../monaco-editor/esm/vs/base/common/cancellation.js", "../../monaco-editor/esm/vs/base/common/async.js", "../../monaco-editor/esm/vs/platform/instantiation/common/instantiation.js", "../../monaco-editor/esm/vs/platform/contextkey/common/contextkey.js", "../../monaco-editor/esm/vs/base/common/codicons.js", "../../monaco-editor/esm/vs/base/common/assert.js", "../../monaco-editor/esm/vs/base/common/types.js", "../../monaco-editor/esm/vs/platform/registry/common/platform.js", "../../monaco-editor/esm/vs/platform/theme/common/theme.js", "../../monaco-editor/esm/vs/platform/theme/common/themeService.js", "../../monaco-editor/esm/vs/base/common/actions.js", "../../monaco-editor/esm/vs/platform/commands/common/commands.js", "../../monaco-editor/esm/vs/platform/actions/common/actions.js", "../../monaco-editor/esm/vs/base/common/process.js", "../../monaco-editor/esm/vs/base/common/path.js", "../../monaco-editor/esm/vs/base/common/uri.js", "../../monaco-editor/esm/vs/editor/browser/services/codeEditorService.js", "../../monaco-editor/esm/vs/editor/common/core/position.js", "../../monaco-editor/esm/vs/editor/common/services/model.js", "../../monaco-editor/esm/vs/editor/common/services/resolverService.js", "../../monaco-editor/esm/vs/base/common/keybindings.js", "../../monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js", "../../monaco-editor/esm/vs/platform/telemetry/common/telemetry.js", "../../monaco-editor/esm/vs/platform/log/common/log.js", "../../monaco-editor/esm/vs/editor/browser/editorExtensions.js", "../../monaco-editor/esm/vs/editor/common/editorContextKeys.js", "../../monaco-editor/esm/vs/base/common/severity.js", "../../monaco-editor/esm/vs/platform/notification/common/notification.js", "../../monaco-editor/esm/vs/platform/contextview/browser/contextView.js", "../../monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js", "../../monaco-editor/esm/vs/platform/keybinding/common/keybinding.js", "../../monaco-editor/esm/vs/base/parts/storage/common/storage.js", "../../monaco-editor/esm/vs/platform/storage/common/storage.js", "../../monaco-editor/esm/vs/editor/common/core/wordHelper.js", "../../monaco-editor/esm/vs/base/common/arrays.js", "../../monaco-editor/esm/vs/base/common/objects.js", "../../monaco-editor/esm/vs/editor/common/core/textModelDefaults.js", "../../monaco-editor/esm/vs/base/common/keyCodes.js", "../../monaco-editor/esm/vs/editor/common/core/range.js", "../../monaco-editor/esm/vs/editor/common/core/selection.js", "../../monaco-editor/esm/vs/editor/common/tokenizationRegistry.js", "../../monaco-editor/esm/vs/editor/common/languages.js", "../../monaco-editor/esm/vs/editor/common/model.js", "../../monaco-editor/esm/vs/editor/common/languages/language.js", "../../monaco-editor/esm/vs/editor/common/languages/languageConfiguration.js", "../../monaco-editor/esm/vs/editor/common/languages/supports.js", "../../monaco-editor/esm/vs/editor/common/languages/supports/characterPair.js", "../../monaco-editor/esm/vs/base/common/buffer.js", "../../monaco-editor/esm/vs/editor/common/core/stringBuilder.js", "../../monaco-editor/esm/vs/editor/common/languages/supports/richEditBrackets.js", "../../monaco-editor/esm/vs/editor/common/languages/supports/electricCharacter.js", "../../monaco-editor/esm/vs/editor/common/languages/supports/indentRules.js", "../../monaco-editor/esm/vs/editor/common/languages/supports/onEnter.js", "../../monaco-editor/esm/vs/platform/configuration/common/configuration.js", "../../monaco-editor/esm/vs/platform/instantiation/common/descriptors.js", "../../monaco-editor/esm/vs/platform/instantiation/common/extensions.js", "../../monaco-editor/esm/vs/editor/common/languages/languageConfigurationRegistry.js", "../../monaco-editor/esm/vs/editor/common/languages/nullTokenize.js", "../../monaco-editor/esm/vs/base/common/uint.js", "../../monaco-editor/esm/vs/editor/common/core/characterClassifier.js", "../../monaco-editor/esm/vs/editor/common/core/wordCharacterClassifier.js", "../../monaco-editor/esm/vs/editor/common/model/textModelSearch.js", "../../monaco-editor/esm/vs/base/browser/browser.js", "../../monaco-editor/esm/vs/base/browser/canIUse.js", "../../monaco-editor/esm/vs/base/browser/keyboardEvent.js", "../../monaco-editor/esm/vs/base/browser/iframe.js", "../../monaco-editor/esm/vs/base/browser/mouseEvent.js", "../../monaco-editor/esm/vs/base/common/network.js", "../../monaco-editor/esm/vs/base/browser/dom.js", "../../monaco-editor/esm/vs/base/browser/ui/aria/aria.js", "../../monaco-editor/esm/vs/base/common/color.js", "../../monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js", "../../monaco-editor/esm/vs/platform/theme/common/colorRegistry.js", "../../monaco-editor/esm/vs/editor/common/commands/replaceCommand.js", "../../monaco-editor/esm/vs/base/common/decorators.js", "../../monaco-editor/esm/vs/base/browser/touch.js", "../../monaco-editor/esm/vs/base/browser/ui/widget.js", "../../monaco-editor/esm/vs/base/browser/event.js", "../../monaco-editor/esm/vs/base/browser/ui/sash/sash.js", "../../monaco-editor/esm/vs/platform/theme/common/iconRegistry.js", "../../monaco-editor/esm/vs/editor/common/tokens/lineTokens.js", "../../monaco-editor/esm/vs/base/common/mime.js", "../../monaco-editor/esm/vs/editor/common/textModelBracketPairs.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/length.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/beforeEditPositionMapper.js", "../../monaco-editor/esm/vs/editor/common/core/cursorColumns.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/smallImmutableSet.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/ast.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/tokenizer.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/brackets.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/concat23Trees.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/nodeReader.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/parser.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/bracketPairsTree.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/bracketPairsImpl.js", "../../monaco-editor/esm/vs/editor/common/core/editorColorRegistry.js", "../../monaco-editor/esm/vs/editor/common/model/bracketPairsTextModelPart/colorizedBracketPairsDecorationProvider.js", "../../monaco-editor/esm/vs/editor/common/core/textChange.js", "../../monaco-editor/esm/vs/base/common/extpath.js", "../../monaco-editor/esm/vs/base/common/resources.js", "../../monaco-editor/esm/vs/editor/common/model/editStack.js", "../../monaco-editor/esm/vs/editor/common/model/textModelPart.js", "../../monaco-editor/esm/vs/editor/common/model/utils.js", "../../monaco-editor/esm/vs/editor/common/textModelGuides.js", "../../monaco-editor/esm/vs/editor/common/model/guidesTextModelPart.js", "../../monaco-editor/esm/vs/editor/common/model/indentationGuesser.js", "../../monaco-editor/esm/vs/editor/common/model/intervalTree.js", "../../monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase.js", "../../monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase.js", "../../monaco-editor/esm/vs/editor/common/core/eolCounter.js", "../../monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer.js", "../../monaco-editor/esm/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js", "../../monaco-editor/esm/vs/editor/common/textModelEvents.js", "../../monaco-editor/esm/vs/editor/common/tokens/contiguousMultilineTokens.js", "../../monaco-editor/esm/vs/editor/common/tokens/contiguousMultilineTokensBuilder.js", "../../monaco-editor/esm/vs/editor/common/model/textModelTokens.js", "../../monaco-editor/esm/vs/editor/common/tokens/contiguousTokensEditing.js", "../../monaco-editor/esm/vs/editor/common/tokens/contiguousTokensStore.js", "../../monaco-editor/esm/vs/editor/common/tokens/sparseTokensStore.js", "../../monaco-editor/esm/vs/platform/undoRedo/common/undoRedo.js", "../../monaco-editor/esm/vs/editor/common/core/indentation.js", "../../monaco-editor/esm/vs/editor/common/model/textModel.js", "../../monaco-editor/esm/vs/base/browser/fastDomNode.js", "../../monaco-editor/esm/vs/base/browser/formattedTextRenderer.js", "../../monaco-editor/esm/vs/base/browser/dnd.js", "../../monaco-editor/esm/vs/base/browser/ui/actionbar/actionViewItems.js", "../../monaco-editor/esm/vs/base/browser/ui/actionbar/actionbar.js", "../../monaco-editor/esm/vs/base/browser/globalMouseMoveMonitor.js", "../../monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarArrow.js", "../../monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarVisibilityController.js", "../../monaco-editor/esm/vs/base/browser/ui/scrollbar/abstractScrollbar.js", "../../monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarState.js", "../../monaco-editor/esm/vs/base/browser/ui/scrollbar/horizontalScrollbar.js", "../../monaco-editor/esm/vs/base/browser/ui/scrollbar/verticalScrollbar.js", "../../monaco-editor/esm/vs/base/common/scrollable.js", "../../monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollableElement.js", "../../monaco-editor/esm/vs/base/common/navigator.js", "../../monaco-editor/esm/vs/base/common/history.js", "../../monaco-editor/esm/vs/base/browser/ui/inputbox/inputBox.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n            const index = rest[0];\n            return typeof args[index] !== 'undefined' ? args[index] : match;\n        });\n    }\n    return result;\n}\nexport function localize(data, message, ...args) {\n    return _format(message, args);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string';\nconst isElectronRenderer = isElectronProcess && (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.type) === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\nexport const userAgent = _userAgent;\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n    if (typeof globals.postMessage === 'function' && !globals.importScripts) {\n        let pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function* concatNested(iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concatNested = concatNested;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    /**\n     * Returns whether the iterables are the same length and all items are\n     * equal using the comparator function.\n     */\n    function equals(a, b, comparator = (at, bt) => at === bt) {\n        const ai = a[Symbol.iterator]();\n        const bi = b[Symbol.iterator]();\n        while (true) {\n            const an = ai.next();\n            const bn = bi.next();\n            if (an.done !== bn.done) {\n                return false;\n            }\n            else if (an.done) {\n                return true;\n            }\n            else if (!comparator(an.value, bn.value)) {\n                return false;\n            }\n        }\n    }\n    Iterable.equals = equals;\n})(Iterable || (Iterable = {}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { once } from './functional.js';\nimport { Iterable } from './iterator.js';\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nfunction trackDisposable(x) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n    return singleton;\n}\nexport class MultiDisposeError extends Error {\n    constructor(errors) {\n        super(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n        this.errors = errors;\n    }\n}\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        let errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new MultiDisposeError(errors);\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: once(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\nexport class DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * Returns `true` if this object has been disposed\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        try {\n            dispose(this._toDispose.values());\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\nexport class Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\nDisposable.None = Object.freeze({ dispose() { } });\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markAsDisposed(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n    /**\n     * Clears the value, but does not dispose it.\n     * The old value is returned.\n    */\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\n/**\n * A safe disposable can be `unset` so that a leaked reference (listener)\n * can be cut-off.\n */\nexport class SafeDisposable {\n    constructor() {\n        this.dispose = () => { };\n        this.unset = () => { };\n        this.isset = () => false;\n        trackDisposable(this);\n    }\n    set(fn) {\n        let callback = fn;\n        this.unset = () => callback = undefined;\n        this.isset = () => callback !== undefined;\n        this.dispose = () => {\n            if (callback) {\n                callback();\n                callback = undefined;\n                markAsDisposed(this);\n            }\n        };\n        return this;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n", "/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last value.\n * The key must be JSON serializable.\n*/\nexport class LRUCachedComputed {\n    constructor(computeFn) {\n        this.computeFn = computeFn;\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n    }\n    get(arg) {\n        const key = JSON.stringify(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this.computeFn(arg);\n        }\n        return this.lastCache;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    getValue() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { LRUCachedComputed } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp /* standalone editor compilation */.unicode ? 'u' : '');\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    get offset() {\n        return this._offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    get offset() {\n        return this._iterator.offset;\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* Z */ - 65 /* A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* a */ + n);\n    }\n    return String.fromCharCode(65 /* A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* Extend */ && breakTypeB !== 7 /* SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* CR */) {\n        if (breakTypeB === 3 /* LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* Control */ || breakTypeA === 2 /* CR */ || breakTypeA === 3 /* LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* Control */ || breakTypeB === 2 /* CR */ || breakTypeB === 3 /* LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* L */) {\n        if (breakTypeB === 8 /* L */ || breakTypeB === 9 /* V */ || breakTypeB === 11 /* LV */ || breakTypeB === 12 /* LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* LV */ || breakTypeA === 9 /* V */) {\n        if (breakTypeB === 9 /* V */ || breakTypeB === 10 /* T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* LVT */ || breakTypeA === 10 /* T */) {\n        if (breakTypeB === 10 /* T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* Extend */ || breakTypeB === 13 /* ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* ZWJ */ && breakTypeB === 14 /* Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* Regional_Indicator */ && breakTypeB === 6 /* Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* LineFeed */) {\n                return 3 /* LF */;\n            }\n            if (codePoint === 13 /* CarriageReturn */) {\n                return 2 /* CR */;\n            }\n            return 4 /* Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* emojiVariantSelector */ || codePoint === 8419 /* enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static getLocales() {\n        return AmbiguousCharacters._locales.getValue();\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\n_a = AmbiguousCharacters;\nAmbiguousCharacters.ambiguousCharacterData = new Lazy(() => {\n    // Generated using https://github.com/hediet/vscode-unicode-data\n    // Stored as key1, value1, key2, value2, ...\n    return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n});\nAmbiguousCharacters.cache = new LRUCachedComputed((locales) => {\n    function arrayToMap(arr) {\n        const result = new Map();\n        for (let i = 0; i < arr.length; i += 2) {\n            result.set(arr[i], arr[i + 1]);\n        }\n        return result;\n    }\n    function mergeMaps(map1, map2) {\n        const result = new Map(map1);\n        for (const [key, value] of map2) {\n            result.set(key, value);\n        }\n        return result;\n    }\n    function intersectMaps(map1, map2) {\n        if (!map1) {\n            return map2;\n        }\n        const result = new Map();\n        for (const [key, value] of map1) {\n            if (map2.has(key)) {\n                result.set(key, value);\n            }\n        }\n        return result;\n    }\n    const data = _a.ambiguousCharacterData.getValue();\n    let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n    if (filteredLocales.length === 0) {\n        filteredLocales = ['_default'];\n    }\n    let languageSpecificMap = undefined;\n    for (const locale of filteredLocales) {\n        const map = arrayToMap(data[locale]);\n        languageSpecificMap = intersectMaps(languageSpecificMap, map);\n    }\n    const commonMap = arrayToMap(data['_common']);\n    const map = mergeMaps(commonMap, languageSpecificMap);\n    return new AmbiguousCharacters(map);\n});\nAmbiguousCharacters._locales = new Lazy(() => Object.keys(AmbiguousCharacters.ambiguousCharacterData.getValue()).filter((k) => !k.startsWith('_')));\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nInvisibleCharacters._data = undefined;\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        let { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\nexport class StopWatch {\n    constructor(highResolution) {\n        this._highResolution = hasPerformanceNow && highResolution;\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    static create(highResolution = true) {\n        return new StopWatch(highResolution);\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n    _now() {\n        return this._highResolution ? globals.performance.now() : Date.now();\n    }\n}\n", "import { onUnexpectedError } from './errors.js';\nimport { combinedDisposable, Disposable, DisposableStore, SafeDisposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nlet _enableDisposeWithListenerWarning = false;\n// _enableDisposeWithListenerWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nlet _enableSnapshotPotentialLeakWarning = false;\nexport var Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    function _addLeakageTraceLogic(options) {\n        if (_enableSnapshotPotentialLeakWarning) {\n            const { onListenerDidAdd: origListenerDidAdd } = options;\n            const stack = Stacktrace.create();\n            let count = 0;\n            options.onListenerDidAdd = () => {\n                if (++count === 2) {\n                    console.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n                    stack.print();\n                }\n                origListenerDidAdd === null || origListenerDidAdd === void 0 ? void 0 : origListenerDidAdd();\n            };\n        }\n    }\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n    }\n    Event.map = map;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n    }\n    Event.any = any;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable);\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onFirstListenerAdd() {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove() {\n                listener.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    function debounce(event, merge, delay = 100, leading = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        const options = {\n            leakWarningThreshold,\n            onFirstListenerAdd() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(() => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove() {\n                subscription.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function buffer(event, flushAfterTimeout = false, _buffer = []) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        const flush = () => {\n            if (buffer) {\n                buffer.forEach(e => emitter.fire(e));\n            }\n            buffer = null;\n        };\n        const emitter = new Emitter({\n            onFirstListenerAdd() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                }\n            },\n            onFirstListenerDidAdd() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    class ChainableEvent {\n        constructor(event) {\n            this.event = event;\n        }\n        map(fn) {\n            return new ChainableEvent(map(this.event, fn));\n        }\n        forEach(fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        }\n        filter(fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        }\n        reduce(merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        }\n        latch() {\n            return new ChainableEvent(latch(this.event));\n        }\n        debounce(merge, delay = 100, leading = false, leakWarningThreshold) {\n            return new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n        }\n        on(listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        }\n        once(listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        }\n    }\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    function toPromise(event) {\n        return new Promise(resolve => once(event)(resolve));\n    }\n    Event.toPromise = toPromise;\n    function runAndSubscribe(event, handler) {\n        handler(undefined);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    function runAndSubscribeWithStore(event, handler) {\n        let store = null;\n        function run(e) {\n            store === null || store === void 0 ? void 0 : store.dispose();\n            store = new DisposableStore();\n            handler(e, store);\n        }\n        run(undefined);\n        const disposable = event(e => run(e));\n        return toDisposable(() => {\n            disposable.dispose();\n            store === null || store === void 0 ? void 0 : store.dispose();\n        });\n    }\n    Event.runAndSubscribeWithStore = runAndSubscribeWithStore;\n})(Event || (Event = {}));\nclass EventProfiling {\n    constructor(name) {\n        this._listenerCount = 0;\n        this._invocationCount = 0;\n        this._elapsedOverall = 0;\n        this._name = `${name}_${EventProfiling._idPool++}`;\n    }\n    start(listenerCount) {\n        this._stopWatch = new StopWatch(true);\n        this._listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this._elapsedOverall += elapsed;\n            this._invocationCount += 1;\n            console.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n            this._stopWatch = undefined;\n        }\n    }\n}\nEventProfiling._idPool = 0;\nlet _globalLeakWarningThreshold = -1;\nclass LeakageMonitor {\n    constructor(customThreshold, name = Math.random().toString(18).slice(2, 5)) {\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    }\n    check(stack, listenerCount) {\n        let threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            let topStack;\n            let topCount = 0;\n            for (const [stack, count] of this._stacks) {\n                if (!topStack || topCount < count) {\n                    topStack = stack;\n                    topCount = count;\n                }\n            }\n            console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n            console.warn(topStack);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n}\nclass Stacktrace {\n    constructor(value) {\n        this.value = value;\n    }\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\nclass Listener {\n    constructor(callback, callbackThis, stack) {\n        this.callback = callback;\n        this.callbackThis = callbackThis;\n        this.stack = stack;\n        this.subscription = new SafeDisposable();\n    }\n    invoke(e) {\n        this.callback.call(this.callbackThis, e);\n    }\n}\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n    constructor(options) {\n        var _a;\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n        this._perfMon = ((_a = this._options) === null || _a === void 0 ? void 0 : _a._profName) ? new EventProfiling(this._options._profName) : undefined;\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        if (!this._disposed) {\n            this._disposed = true;\n            // It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n            // alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n            // unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n            // the following programming pattern is very popular:\n            //\n            // const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n            // this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n            // ...later...\n            // this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n            if (this._listeners) {\n                if (_enableDisposeWithListenerWarning) {\n                    const listeners = Array.from(this._listeners);\n                    queueMicrotask(() => {\n                        var _a;\n                        for (const listener of listeners) {\n                            if (listener.subscription.isset()) {\n                                listener.subscription.unset();\n                                (_a = listener.stack) === null || _a === void 0 ? void 0 : _a.print();\n                            }\n                        }\n                    });\n                }\n                this._listeners.clear();\n            }\n            (_a = this._deliveryQueue) === null || _a === void 0 ? void 0 : _a.clear();\n            (_c = (_b = this._options) === null || _b === void 0 ? void 0 : _b.onLastListenerRemove) === null || _c === void 0 ? void 0 : _c.call(_b);\n            (_d = this._leakageMon) === null || _d === void 0 ? void 0 : _d.dispose();\n        }\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (callback, thisArgs, disposables) => {\n                var _a, _b, _c;\n                if (!this._listeners) {\n                    this._listeners = new LinkedList();\n                }\n                const firstListener = this._listeners.isEmpty();\n                if (firstListener && ((_a = this._options) === null || _a === void 0 ? void 0 : _a.onFirstListenerAdd)) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                let removeMonitor;\n                let stack;\n                if (this._leakageMon && this._listeners.size >= 30) {\n                    // check and record this emitter for potential leakage\n                    stack = Stacktrace.create();\n                    removeMonitor = this._leakageMon.check(stack, this._listeners.size + 1);\n                }\n                if (_enableDisposeWithListenerWarning) {\n                    stack = stack !== null && stack !== void 0 ? stack : Stacktrace.create();\n                }\n                const listener = new Listener(callback, thisArgs, stack);\n                const removeListener = this._listeners.push(listener);\n                if (firstListener && ((_b = this._options) === null || _b === void 0 ? void 0 : _b.onFirstListenerDidAdd)) {\n                    this._options.onFirstListenerDidAdd(this);\n                }\n                if ((_c = this._options) === null || _c === void 0 ? void 0 : _c.onListenerDidAdd) {\n                    this._options.onListenerDidAdd(this, callback, thisArgs);\n                }\n                const result = listener.subscription.set(() => {\n                    if (removeMonitor) {\n                        removeMonitor();\n                    }\n                    if (!this._disposed) {\n                        removeListener();\n                        if (this._options && this._options.onLastListenerRemove) {\n                            const hasListeners = (this._listeners && !this._listeners.isEmpty());\n                            if (!hasListeners) {\n                                this._options.onLastListenerRemove(this);\n                            }\n                        }\n                    }\n                });\n                if (disposables instanceof DisposableStore) {\n                    disposables.add(result);\n                }\n                else if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        var _a, _b;\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = new LinkedList();\n            }\n            for (let listener of this._listeners) {\n                this._deliveryQueue.push([listener, event]);\n            }\n            // start/stop performance insight collection\n            (_a = this._perfMon) === null || _a === void 0 ? void 0 : _a.start(this._deliveryQueue.size);\n            while (this._deliveryQueue.size > 0) {\n                const [listener, event] = this._deliveryQueue.shift();\n                try {\n                    listener.invoke(event);\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n            (_b = this._perfMon) === null || _b === void 0 ? void 0 : _b.stop();\n        }\n    }\n}\nexport class PauseableEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = new LinkedList();\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                const events = Array.from(this._eventQueue);\n                this._eventQueue.clear();\n                super.fire(this._mergeFn(events));\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._listeners) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nexport class DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        var _a;\n        super(options);\n        this._delay = (_a = options.delay) !== null && _a !== void 0 ? _a : 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n    constructor() {\n        this.buffers = [];\n    }\n    wrapEvent(event) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const buffer = this.buffers[this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(() => listener.call(thisArgs, i));\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const buffer = [];\n        this.buffers.push(buffer);\n        const r = fn();\n        this.buffers.pop();\n        buffer.forEach(flush => flush());\n        return r;\n    }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onLastListenerRemove: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nexport class CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        if (this._parentListener) {\n            this._parentListener.dispose();\n        }\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { CancellationTokenSource } from './cancellation.js';\nimport { CancellationError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { toDisposable } from './lifecycle.js';\nimport { setTimeout0 } from './platform.js';\nexport function isThenable(obj) {\n    return !!obj && typeof obj.then === 'function';\n}\nexport function createCancelablePromise(callback) {\n    const source = new CancellationTokenSource();\n    const thenable = callback(source.token);\n    const promise = new Promise((resolve, reject) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            source.dispose();\n            reject(new CancellationError());\n        });\n        Promise.resolve(thenable).then(value => {\n            subscription.dispose();\n            source.dispose();\n            resolve(value);\n        }, err => {\n            subscription.dispose();\n            source.dispose();\n            reject(err);\n        });\n    });\n    return new class {\n        cancel() {\n            source.cancel();\n        }\n        then(resolve, reject) {\n            return promise.then(resolve, reject);\n        }\n        catch(reject) {\n            return this.then(undefined, reject);\n        }\n        finally(onfinally) {\n            return promise.finally(onfinally);\n        }\n    };\n}\nexport function raceCancellation(promise, token, defaultValue) {\n    return new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            resolve(defaultValue);\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n    constructor() {\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    queue(promiseFactory) {\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                const onComplete = () => {\n                    this.queuedPromise = null;\n                    const result = this.queue(this.queuedPromiseFactory);\n                    this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = new Promise(resolve => {\n                    this.activePromise.then(onComplete, onComplete).then(resolve);\n                });\n            }\n            return new Promise((resolve, reject) => {\n                this.queuedPromise.then(resolve, reject);\n            });\n        }\n        this.activePromise = promiseFactory();\n        return new Promise((resolve, reject) => {\n            this.activePromise.then((result) => {\n                this.activePromise = null;\n                resolve(result);\n            }, (err) => {\n                this.activePromise = null;\n                reject(err);\n            });\n        });\n    }\n}\nconst timeoutDeferred = (timeout, fn) => {\n    let scheduled = true;\n    const handle = setTimeout(() => {\n        scheduled = false;\n        fn();\n    }, timeout);\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => {\n            clearTimeout(handle);\n            scheduled = false;\n        },\n    };\n};\nconst microtaskDeferred = (fn) => {\n    let scheduled = true;\n    queueMicrotask(() => {\n        if (scheduled) {\n            scheduled = false;\n            fn();\n        }\n    });\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => { scheduled = false; },\n    };\n};\n/** Can be passed into the Delayed to defer using a microtask */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.deferred = null;\n        this.completionPromise = null;\n        this.doResolve = null;\n        this.doReject = null;\n        this.task = null;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise((resolve, reject) => {\n                this.doResolve = resolve;\n                this.doReject = reject;\n            }).then(() => {\n                this.completionPromise = null;\n                this.doResolve = null;\n                if (this.task) {\n                    const task = this.task;\n                    this.task = null;\n                    return task();\n                }\n                return undefined;\n            });\n        }\n        const fn = () => {\n            var _a;\n            this.deferred = null;\n            (_a = this.doResolve) === null || _a === void 0 ? void 0 : _a.call(this, null);\n        };\n        this.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n        return this.completionPromise;\n    }\n    isTriggered() {\n        var _a;\n        return !!((_a = this.deferred) === null || _a === void 0 ? void 0 : _a.isTriggered());\n    }\n    cancel() {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            if (this.doReject) {\n                this.doReject(new CancellationError());\n            }\n            this.completionPromise = null;\n        }\n    }\n    cancelTimeout() {\n        var _a;\n        (_a = this.deferred) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.deferred = null;\n    }\n    dispose() {\n        this.cancel();\n    }\n}\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer {\n    constructor(defaultDelay) {\n        this.delayer = new Delayer(defaultDelay);\n        this.throttler = new Throttler();\n    }\n    trigger(promiseFactory, delay) {\n        return this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay);\n    }\n    dispose() {\n        this.delayer.dispose();\n    }\n}\nexport function timeout(millis, token) {\n    if (!token) {\n        return createCancelablePromise(token => timeout(millis, token));\n    }\n    return new Promise((resolve, reject) => {\n        const handle = setTimeout(() => {\n            disposable.dispose();\n            resolve();\n        }, millis);\n        const disposable = token.onCancellationRequested(() => {\n            clearTimeout(handle);\n            disposable.dispose();\n            reject(new CancellationError());\n        });\n    });\n}\nexport function disposableTimeout(handler, timeout = 0) {\n    const timer = setTimeout(handler, timeout);\n    return toDisposable(() => clearTimeout(timer));\n}\nexport function first(promiseFactories, shouldStop = t => !!t, defaultValue = null) {\n    let index = 0;\n    const len = promiseFactories.length;\n    const loop = () => {\n        if (index >= len) {\n            return Promise.resolve(defaultValue);\n        }\n        const factory = promiseFactories[index++];\n        const promise = Promise.resolve(factory());\n        return promise.then(result => {\n            if (shouldStop(result)) {\n                return Promise.resolve(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nexport class TimeoutTimer {\n    constructor(runner, timeout) {\n        this._token = -1;\n        if (typeof runner === 'function' && typeof timeout === 'number') {\n            this.setIfNotSet(runner, timeout);\n        }\n    }\n    dispose() {\n        this.cancel();\n    }\n    cancel() {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    }\n    cancelAndSet(runner, timeout) {\n        this.cancel();\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n    setIfNotSet(runner, timeout) {\n        if (this._token !== -1) {\n            // timer is already set\n            return;\n        }\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n}\nexport class IntervalTimer {\n    constructor() {\n        this._token = -1;\n    }\n    dispose() {\n        this.cancel();\n    }\n    cancel() {\n        if (this._token !== -1) {\n            clearInterval(this._token);\n            this._token = -1;\n        }\n    }\n    cancelAndSet(runner, interval) {\n        this.cancel();\n        this._token = setInterval(() => {\n            runner();\n        }, interval);\n    }\n}\nexport class RunOnceScheduler {\n    constructor(runner, delay) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = delay;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    /**\n     * Dispose RunOnceScheduler\n     */\n    dispose() {\n        this.cancel();\n        this.runner = null;\n    }\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n    cancel() {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    }\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n    schedule(delay = this.timeout) {\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    }\n    get delay() {\n        return this.timeout;\n    }\n    set delay(value) {\n        this.timeout = value;\n    }\n    /**\n     * Returns true if scheduled.\n     */\n    isScheduled() {\n        return this.timeoutToken !== -1;\n    }\n    onTimeout() {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.doRun();\n        }\n    }\n    doRun() {\n        if (this.runner) {\n            this.runner();\n        }\n    }\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle;\n(function () {\n    if (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n        runWhenIdle = (runner) => {\n            setTimeout0(() => {\n                if (disposed) {\n                    return;\n                }\n                const end = Date.now() + 15; // one frame at 64fps\n                runner(Object.freeze({\n                    didTimeout: true,\n                    timeRemaining() {\n                        return Math.max(0, end - Date.now());\n                    }\n                }));\n            });\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                }\n            };\n        };\n    }\n    else {\n        runWhenIdle = (runner, timeout) => {\n            const handle = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                    cancelIdleCallback(handle);\n                }\n            };\n        };\n    }\n})();\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue {\n    constructor(executor) {\n        this._didRun = false;\n        this._executor = () => {\n            try {\n                this._value = executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        };\n        this._handle = runWhenIdle(() => this._executor());\n    }\n    dispose() {\n        this._handle.dispose();\n    }\n    get value() {\n        if (!this._didRun) {\n            this._handle.dispose();\n            this._executor();\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get isInitialized() {\n        return this._didRun;\n    }\n}\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise {\n    constructor() {\n        this.rejected = false;\n        this.resolved = false;\n        this.p = new Promise((c, e) => {\n            this.completeCallback = c;\n            this.errorCallback = e;\n        });\n    }\n    get isRejected() {\n        return this.rejected;\n    }\n    get isSettled() {\n        return this.rejected || this.resolved;\n    }\n    complete(value) {\n        return new Promise(resolve => {\n            this.completeCallback(value);\n            this.resolved = true;\n            resolve();\n        });\n    }\n    cancel() {\n        new Promise(resolve => {\n            this.errorCallback(new CancellationError());\n            this.rejected = true;\n            resolve();\n        });\n    }\n}\n//#endregion\n//#region Promises\nexport var Promises;\n(function (Promises) {\n    /**\n     * A drop-in replacement for `Promise.all` with the only difference\n     * that the method awaits every promise to either fulfill or reject.\n     *\n     * Similar to `Promise.all`, only the first error will be returned\n     * if any.\n     */\n    function settled(promises) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let firstError = undefined;\n            const result = yield Promise.all(promises.map(promise => promise.then(value => value, error => {\n                if (!firstError) {\n                    firstError = error;\n                }\n                return undefined; // do not rethrow so that other promises can settle\n            })));\n            if (typeof firstError !== 'undefined') {\n                throw firstError;\n            }\n            return result; // cast is needed and protected by the `throw` above\n        });\n    }\n    Promises.settled = settled;\n    /**\n     * A helper to create a new `Promise<T>` with a body that is a promise\n     * itself. By default, an error that raises from the async body will\n     * end up as a unhandled rejection, so this utility properly awaits the\n     * body and rejects the promise as a normal promise does without async\n     * body.\n     *\n     * This method should only be used in rare cases where otherwise `async`\n     * cannot be used (e.g. when callbacks are involved that require this).\n     */\n    function withAsyncBody(bodyFn) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield bodyFn(resolve, reject);\n            }\n            catch (error) {\n                reject(error);\n            }\n        }));\n    }\n    Promises.withAsyncBody = withAsyncBody;\n})(Promises || (Promises = {}));\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject {\n    constructor(executor) {\n        this._state = 0 /* Initial */;\n        this._results = [];\n        this._error = null;\n        this._onStateChanged = new Emitter();\n        queueMicrotask(() => __awaiter(this, void 0, void 0, function* () {\n            const writer = {\n                emitOne: (item) => this.emitOne(item),\n                emitMany: (items) => this.emitMany(items),\n                reject: (error) => this.reject(error)\n            };\n            try {\n                yield Promise.resolve(executor(writer));\n                this.resolve();\n            }\n            catch (err) {\n                this.reject(err);\n            }\n            finally {\n                writer.emitOne = undefined;\n                writer.emitMany = undefined;\n                writer.reject = undefined;\n            }\n        }));\n    }\n    static fromArray(items) {\n        return new AsyncIterableObject((writer) => {\n            writer.emitMany(items);\n        });\n    }\n    static fromPromise(promise) {\n        return new AsyncIterableObject((emitter) => __awaiter(this, void 0, void 0, function* () {\n            emitter.emitMany(yield promise);\n        }));\n    }\n    static fromPromises(promises) {\n        return new AsyncIterableObject((emitter) => __awaiter(this, void 0, void 0, function* () {\n            yield Promise.all(promises.map((p) => __awaiter(this, void 0, void 0, function* () { return emitter.emitOne(yield p); })));\n        }));\n    }\n    static merge(iterables) {\n        return new AsyncIterableObject((emitter) => __awaiter(this, void 0, void 0, function* () {\n            yield Promise.all(iterables.map((iterable) => { var iterable_1, iterable_1_1; return __awaiter(this, void 0, void 0, function* () {\n                var e_1, _a;\n                try {\n                    for (iterable_1 = __asyncValues(iterable); iterable_1_1 = yield iterable_1.next(), !iterable_1_1.done;) {\n                        const item = iterable_1_1.value;\n                        emitter.emitOne(item);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) yield _a.call(iterable_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }); }));\n        }));\n    }\n    [Symbol.asyncIterator]() {\n        let i = 0;\n        return {\n            next: () => __awaiter(this, void 0, void 0, function* () {\n                do {\n                    if (this._state === 2 /* DoneError */) {\n                        throw this._error;\n                    }\n                    if (i < this._results.length) {\n                        return { done: false, value: this._results[i++] };\n                    }\n                    if (this._state === 1 /* DoneOK */) {\n                        return { done: true, value: undefined };\n                    }\n                    yield Event.toPromise(this._onStateChanged.event);\n                } while (true);\n            })\n        };\n    }\n    static map(iterable, mapFn) {\n        return new AsyncIterableObject((emitter) => __awaiter(this, void 0, void 0, function* () {\n            var e_2, _a;\n            try {\n                for (var iterable_2 = __asyncValues(iterable), iterable_2_1; iterable_2_1 = yield iterable_2.next(), !iterable_2_1.done;) {\n                    const item = iterable_2_1.value;\n                    emitter.emitOne(mapFn(item));\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (iterable_2_1 && !iterable_2_1.done && (_a = iterable_2.return)) yield _a.call(iterable_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }));\n    }\n    map(mapFn) {\n        return AsyncIterableObject.map(this, mapFn);\n    }\n    static filter(iterable, filterFn) {\n        return new AsyncIterableObject((emitter) => __awaiter(this, void 0, void 0, function* () {\n            var e_3, _a;\n            try {\n                for (var iterable_3 = __asyncValues(iterable), iterable_3_1; iterable_3_1 = yield iterable_3.next(), !iterable_3_1.done;) {\n                    const item = iterable_3_1.value;\n                    if (filterFn(item)) {\n                        emitter.emitOne(item);\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (iterable_3_1 && !iterable_3_1.done && (_a = iterable_3.return)) yield _a.call(iterable_3);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }));\n    }\n    filter(filterFn) {\n        return AsyncIterableObject.filter(this, filterFn);\n    }\n    static coalesce(iterable) {\n        return AsyncIterableObject.filter(iterable, item => !!item);\n    }\n    coalesce() {\n        return AsyncIterableObject.coalesce(this);\n    }\n    static toPromise(iterable) {\n        var iterable_4, iterable_4_1;\n        var e_4, _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = [];\n            try {\n                for (iterable_4 = __asyncValues(iterable); iterable_4_1 = yield iterable_4.next(), !iterable_4_1.done;) {\n                    const item = iterable_4_1.value;\n                    result.push(item);\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (iterable_4_1 && !iterable_4_1.done && (_a = iterable_4.return)) yield _a.call(iterable_4);\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n            return result;\n        });\n    }\n    toPromise() {\n        return AsyncIterableObject.toPromise(this);\n    }\n    /**\n     * The value will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitOne(value) {\n        if (this._state !== 0 /* Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results.push(value);\n        this._onStateChanged.fire();\n    }\n    /**\n     * The values will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitMany(values) {\n        if (this._state !== 0 /* Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results = this._results.concat(values);\n        this._onStateChanged.fire();\n    }\n    /**\n     * Calling `resolve()` will mark the result array as complete.\n     *\n     * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    resolve() {\n        if (this._state !== 0 /* Initial */) {\n            return;\n        }\n        this._state = 1 /* DoneOK */;\n        this._onStateChanged.fire();\n    }\n    /**\n     * Writing an error will permanently invalidate this iterable.\n     * The current users will receive an error thrown, as will all future users.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    reject(error) {\n        if (this._state !== 0 /* Initial */) {\n            return;\n        }\n        this._state = 2 /* DoneError */;\n        this._error = error;\n        this._onStateChanged.fire();\n    }\n}\nAsyncIterableObject.EMPTY = AsyncIterableObject.fromArray([]);\nexport class CancelableAsyncIterableObject extends AsyncIterableObject {\n    constructor(_source, executor) {\n        super(executor);\n        this._source = _source;\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nexport function createCancelableAsyncIterable(callback) {\n    const source = new CancellationTokenSource();\n    const innerIterable = callback(source.token);\n    return new CancelableAsyncIterableObject(source, (emitter) => __awaiter(this, void 0, void 0, function* () {\n        var e_5, _a;\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(new CancellationError());\n        });\n        try {\n            try {\n                for (var innerIterable_1 = __asyncValues(innerIterable), innerIterable_1_1; innerIterable_1_1 = yield innerIterable_1.next(), !innerIterable_1_1.done;) {\n                    const item = innerIterable_1_1.value;\n                    if (source.token.isCancellationRequested) {\n                        // canceled in the meantime\n                        return;\n                    }\n                    emitter.emitOne(item);\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (innerIterable_1_1 && !innerIterable_1_1.done && (_a = innerIterable_1.return)) yield _a.call(innerIterable_1);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n            subscription.dispose();\n            source.dispose();\n        }\n        catch (err) {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(err);\n        }\n    }));\n}\n//#endregion\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nconst CONSTANT_VALUES = new Map();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nexport class ContextKeyExpr {\n    static has(key) {\n        return ContextKeyDefinedExpr.create(key);\n    }\n    static equals(key, value) {\n        return ContextKeyEqualsExpr.create(key, value);\n    }\n    static regex(key, value) {\n        return ContextKeyRegexExpr.create(key, value);\n    }\n    static not(key) {\n        return ContextKeyNotExpr.create(key);\n    }\n    static and(...expr) {\n        return ContextKeyAndExpr.create(expr, null);\n    }\n    static or(...expr) {\n        return ContextKeyOrExpr.create(expr, null, true);\n    }\n    static deserialize(serialized, strict = false) {\n        if (!serialized) {\n            return undefined;\n        }\n        return this._deserializeOrExpression(serialized, strict);\n    }\n    static _deserializeOrExpression(serialized, strict) {\n        let pieces = serialized.split('||');\n        return ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)), null, true);\n    }\n    static _deserializeAndExpression(serialized, strict) {\n        let pieces = serialized.split('&&');\n        return ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)), null);\n    }\n    static _deserializeOne(serializedOne, strict) {\n        serializedOne = serializedOne.trim();\n        if (serializedOne.indexOf('!=') >= 0) {\n            let pieces = serializedOne.split('!=');\n            return ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n        }\n        if (serializedOne.indexOf('==') >= 0) {\n            let pieces = serializedOne.split('==');\n            return ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n        }\n        if (serializedOne.indexOf('=~') >= 0) {\n            let pieces = serializedOne.split('=~');\n            return ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n        }\n        if (serializedOne.indexOf(' in ') >= 0) {\n            let pieces = serializedOne.split(' in ');\n            return ContextKeyInExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+>=[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('>=');\n            return ContextKeyGreaterEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+>[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('>');\n            return ContextKeyGreaterExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+<=[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('<=');\n            return ContextKeySmallerEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+<[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('<');\n            return ContextKeySmallerExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^\\!\\s*/.test(serializedOne)) {\n            return ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n        }\n        return ContextKeyDefinedExpr.create(serializedOne);\n    }\n    static _deserializeValue(serializedValue, strict) {\n        serializedValue = serializedValue.trim();\n        if (serializedValue === 'true') {\n            return true;\n        }\n        if (serializedValue === 'false') {\n            return false;\n        }\n        let m = /^'([^']*)'$/.exec(serializedValue);\n        if (m) {\n            return m[1].trim();\n        }\n        return serializedValue;\n    }\n    static _deserializeRegexValue(serializedValue, strict) {\n        if (isFalsyOrWhitespace(serializedValue)) {\n            if (strict) {\n                throw new Error('missing regexp-value for =~-expression');\n            }\n            else {\n                console.warn('missing regexp-value for =~-expression');\n            }\n            return null;\n        }\n        let start = serializedValue.indexOf('/');\n        let end = serializedValue.lastIndexOf('/');\n        if (start === end || start < 0 /* || to < 0 */) {\n            if (strict) {\n                throw new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n            }\n            else {\n                console.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n            }\n            return null;\n        }\n        let value = serializedValue.slice(start + 1, end);\n        let caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n        try {\n            return new RegExp(value, caseIgnoreFlag);\n        }\n        catch (e) {\n            if (strict) {\n                throw new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n            }\n            else {\n                console.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n            }\n            return null;\n        }\n    }\n}\nexport function expressionsAreEqualWithConstantSubstitution(a, b) {\n    const aExpr = a ? a.substituteConstants() : undefined;\n    const bExpr = b ? b.substituteConstants() : undefined;\n    if (!aExpr && !bExpr) {\n        return true;\n    }\n    if (!aExpr || !bExpr) {\n        return false;\n    }\n    return aExpr.equals(bExpr);\n}\nfunction cmp(a, b) {\n    return a.cmp(b);\n}\nexport class ContextKeyFalseExpr {\n    constructor() {\n        this.type = 0 /* False */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return false;\n    }\n    serialize() {\n        return 'false';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n}\nContextKeyFalseExpr.INSTANCE = new ContextKeyFalseExpr();\nexport class ContextKeyTrueExpr {\n    constructor() {\n        this.type = 1 /* True */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return true;\n    }\n    serialize() {\n        return 'true';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n}\nContextKeyTrueExpr.INSTANCE = new ContextKeyTrueExpr();\nexport class ContextKeyDefinedExpr {\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 2 /* Defined */;\n    }\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return new ContextKeyDefinedExpr(key, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!!context.getValue(this.key));\n    }\n    serialize() {\n        return this.key;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 4 /* Equals */;\n    }\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            return (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return new ContextKeyEqualsExpr(key, value, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional ==\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) == this.value);\n    }\n    serialize() {\n        return `${this.key} == '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyInExpr {\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 10 /* In */;\n        this.negated = null;\n    }\n    static create(key, valueKey) {\n        return new ContextKeyInExpr(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.valueKey === other.valueKey);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const source = context.getValue(this.valueKey);\n        const item = context.getValue(this.key);\n        if (Array.isArray(source)) {\n            return (source.indexOf(item) >= 0);\n        }\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n            return hasOwnProperty.call(source, item);\n        }\n        return false;\n    }\n    serialize() {\n        return `${this.key} in '${this.valueKey}'`;\n    }\n    keys() {\n        return [this.key, this.valueKey];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotInExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotInExpr {\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 11 /* NotIn */;\n        //\n    }\n    static create(actual) {\n        return new ContextKeyNotInExpr(actual);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        throw new Error('Method not implemented.');\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\nexport class ContextKeyNotEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 5 /* NotEquals */;\n    }\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return ContextKeyNotExpr.create(key, negated);\n            }\n            return ContextKeyDefinedExpr.create(key, negated);\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotEqualsExpr(key, value, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional !=\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) != this.value);\n    }\n    serialize() {\n        return `${this.key} != '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotExpr {\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 3 /* Not */;\n    }\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotExpr(key, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!context.getValue(this.key));\n    }\n    serialize() {\n        return `!${this.key}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyDefinedExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nfunction withFloatOrStr(value, callback) {\n    if (typeof value === 'string') {\n        const n = parseFloat(value);\n        if (!isNaN(n)) {\n            value = n;\n        }\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n        return callback(value);\n    }\n    return ContextKeyFalseExpr.INSTANCE;\n}\nexport class ContextKeyGreaterExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 12 /* Greater */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) > this.value);\n    }\n    serialize() {\n        return `${this.key} > ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyGreaterEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 13 /* GreaterEquals */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) >= this.value);\n    }\n    serialize() {\n        return `${this.key} >= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 14 /* Smaller */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) < this.value);\n    }\n    serialize() {\n        return `${this.key} < ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 15 /* SmallerEquals */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) <= this.value);\n    }\n    serialize() {\n        return `${this.key} <= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyRegexExpr {\n    constructor(key, regexp) {\n        this.key = key;\n        this.regexp = regexp;\n        this.type = 7 /* Regex */;\n        this.negated = null;\n        //\n    }\n    static create(key, regexp) {\n        return new ContextKeyRegexExpr(key, regexp);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.key < other.key) {\n            return -1;\n        }\n        if (this.key > other.key) {\n            return 1;\n        }\n        const thisSource = this.regexp ? this.regexp.source : '';\n        const otherSource = other.regexp ? other.regexp.source : '';\n        if (thisSource < otherSource) {\n            return -1;\n        }\n        if (thisSource > otherSource) {\n            return 1;\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            const thisSource = this.regexp ? this.regexp.source : '';\n            const otherSource = other.regexp ? other.regexp.source : '';\n            return (this.key === other.key && thisSource === otherSource);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        let value = context.getValue(this.key);\n        return this.regexp ? this.regexp.test(value) : false;\n    }\n    serialize() {\n        const value = this.regexp\n            ? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n            : '/invalid/';\n        return `${this.key} =~ ${value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotRegexExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotRegexExpr {\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 8 /* NotRegex */;\n        //\n    }\n    static create(actual) {\n        return new ContextKeyNotRegexExpr(actual);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        throw new Error('Method not implemented.');\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr) {\n    // Allocate array only if there is a difference\n    let newArr = null;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const newExpr = arr[i].substituteConstants();\n        if (arr[i] !== newExpr) {\n            // something has changed!\n            // allocate array on first difference\n            if (newArr === null) {\n                newArr = [];\n                for (let j = 0; j < i; j++) {\n                    newArr[j] = arr[j];\n                }\n            }\n        }\n        if (newArr !== null) {\n            newArr[i] = newExpr;\n        }\n    }\n    if (newArr === null) {\n        return arr;\n    }\n    return newArr;\n}\nclass ContextKeyAndExpr {\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 6 /* And */;\n    }\n    static create(_expr, negated) {\n        return ContextKeyAndExpr._normalizeArr(_expr, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyAndExpr.create(exprArr, this.negated);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (!this.expr[i].evaluate(context)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _normalizeArr(arr, negated) {\n        const expr = [];\n        let hasTrue = false;\n        for (const e of arr) {\n            if (!e) {\n                continue;\n            }\n            if (e.type === 1 /* True */) {\n                // anything && true ==> anything\n                hasTrue = true;\n                continue;\n            }\n            if (e.type === 0 /* False */) {\n                // anything && false ==> false\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            if (e.type === 6 /* And */) {\n                expr.push(...e.expr);\n                continue;\n            }\n            expr.push(e);\n        }\n        if (expr.length === 0 && hasTrue) {\n            return ContextKeyTrueExpr.INSTANCE;\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        expr.sort(cmp);\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // We must distribute any OR expression because we don't support parens\n        // OR extensions will be at the end (due to sorting rules)\n        while (expr.length > 1) {\n            const lastElement = expr[expr.length - 1];\n            if (lastElement.type !== 9 /* Or */) {\n                break;\n            }\n            // pop the last element\n            expr.pop();\n            // pop the second to last element\n            const secondToLastElement = expr.pop();\n            const isFinished = (expr.length === 0);\n            // distribute `lastElement` over `secondToLastElement`\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null)), null, isFinished);\n            if (resultElement) {\n                expr.push(resultElement);\n                expr.sort(cmp);\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        return new ContextKeyAndExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' && ');\n    }\n    keys() {\n        const result = [];\n        for (let expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (let expr of this.expr) {\n                result.push(expr.negate());\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nclass ContextKeyOrExpr {\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 9 /* Or */;\n    }\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyOrExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (this.expr[i].evaluate(context)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        let expr = [];\n        let hasFalse = false;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                const e = arr[i];\n                if (!e) {\n                    continue;\n                }\n                if (e.type === 0 /* False */) {\n                    // anything || false ==> anything\n                    hasFalse = true;\n                    continue;\n                }\n                if (e.type === 1 /* True */) {\n                    // anything || true ==> true\n                    return ContextKeyTrueExpr.INSTANCE;\n                }\n                if (e.type === 9 /* Or */) {\n                    expr = expr.concat(e.expr);\n                    continue;\n                }\n                expr.push(e);\n            }\n            if (expr.length === 0 && hasFalse) {\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            expr.sort(cmp);\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate redundant terms\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (implies(expr[i], expr[j])) {\n                        expr.splice(j, 1);\n                        j--;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyOrExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' || ');\n    }\n    keys() {\n        const result = [];\n        for (let expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            let result = [];\n            for (let expr of this.expr) {\n                result.push(expr.negate());\n            }\n            // We don't support parens, so here we distribute the AND over the OR terminals\n            // We always take the first 2 AND pairs and distribute them\n            while (result.length > 1) {\n                const LEFT = result.shift();\n                const RIGHT = result.shift();\n                const all = [];\n                for (const left of getTerminals(LEFT)) {\n                    for (const right of getTerminals(RIGHT)) {\n                        all.push(ContextKeyAndExpr.create([left, right], null));\n                    }\n                }\n                const isFinished = (result.length === 0);\n                result.unshift(ContextKeyOrExpr.create(all, null, isFinished));\n            }\n            this.negated = result[0];\n        }\n        return this.negated;\n    }\n}\nexport class RawContextKey extends ContextKeyDefinedExpr {\n    constructor(key, defaultValue, metaOrHide) {\n        super(key, null);\n        this._defaultValue = defaultValue;\n        // collect all context keys into a central place\n        if (typeof metaOrHide === 'object') {\n            RawContextKey._info.push(Object.assign(Object.assign({}, metaOrHide), { key }));\n        }\n        else if (metaOrHide !== true) {\n            RawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n        }\n    }\n    static all() {\n        return RawContextKey._info.values();\n    }\n    bindTo(target) {\n        return target.createKey(this.key, this._defaultValue);\n    }\n    getValue(target) {\n        return target.getContextKeyValue(this.key);\n    }\n    toNegated() {\n        return this.negate();\n    }\n    isEqualTo(value) {\n        return ContextKeyEqualsExpr.create(this.key, value);\n    }\n}\nRawContextKey._info = [];\nexport const IContextKeyService = createDecorator('contextKeyService');\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\nfunction cmp1(key1, key2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    return 0;\n}\nfunction cmp2(key1, value1, key2, value2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    if (value1 < value2) {\n        return -1;\n    }\n    if (value1 > value2) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p, q) {\n    if (q.type === 6 /* And */ && (p.type !== 9 /* Or */ && p.type !== 6 /* And */)) {\n        // covers the case: A implies A && B\n        for (const qTerm of q.expr) {\n            if (p.equals(qTerm)) {\n                return true;\n            }\n        }\n    }\n    const notP = p.negate();\n    const expr = getTerminals(notP).concat(getTerminals(q));\n    expr.sort(cmp);\n    for (let i = 0; i < expr.length; i++) {\n        const a = expr[i];\n        const notA = a.negate();\n        for (let j = i + 1; j < expr.length; j++) {\n            const b = expr[j];\n            if (notA.equals(b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction getTerminals(node) {\n    if (node.type === 9 /* Or */) {\n        return node.expr;\n    }\n    return [node];\n}\n", "// Selects all codicon names encapsulated in the `$()` syntax and wraps the\n// results with spaces so that screen readers can read the text better.\nexport function getCodiconAriaLabel(text) {\n    if (!text) {\n        return '';\n    }\n    return text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport class Codicon {\n    constructor(id, definition, description) {\n        this.id = id;\n        this.definition = definition;\n        this.description = description;\n        Codicon._allCodicons.push(this);\n    }\n    get classNames() { return 'codicon codicon-' + this.id; }\n    // classNamesArray is useful for migrating to ES6 classlist\n    get classNamesArray() { return ['codicon', 'codicon-' + this.id]; }\n    get cssSelector() { return '.codicon.codicon-' + this.id; }\n    /**\n     * @returns Returns all default icons covered by the codicon font. Only to be used by the icon registry in platform.\n     */\n    static getAll() {\n        return Codicon._allCodicons;\n    }\n}\n// registry\nCodicon._allCodicons = [];\n// built-in icons, with image name\nCodicon.add = new Codicon('add', { fontCharacter: '\\\\ea60' });\nCodicon.plus = new Codicon('plus', Codicon.add.definition);\nCodicon.gistNew = new Codicon('gist-new', Codicon.add.definition);\nCodicon.repoCreate = new Codicon('repo-create', Codicon.add.definition);\nCodicon.lightbulb = new Codicon('lightbulb', { fontCharacter: '\\\\ea61' });\nCodicon.lightBulb = new Codicon('light-bulb', { fontCharacter: '\\\\ea61' });\nCodicon.repo = new Codicon('repo', { fontCharacter: '\\\\ea62' });\nCodicon.repoDelete = new Codicon('repo-delete', { fontCharacter: '\\\\ea62' });\nCodicon.gistFork = new Codicon('gist-fork', { fontCharacter: '\\\\ea63' });\nCodicon.repoForked = new Codicon('repo-forked', { fontCharacter: '\\\\ea63' });\nCodicon.gitPullRequest = new Codicon('git-pull-request', { fontCharacter: '\\\\ea64' });\nCodicon.gitPullRequestAbandoned = new Codicon('git-pull-request-abandoned', { fontCharacter: '\\\\ea64' });\nCodicon.recordKeys = new Codicon('record-keys', { fontCharacter: '\\\\ea65' });\nCodicon.keyboard = new Codicon('keyboard', { fontCharacter: '\\\\ea65' });\nCodicon.tag = new Codicon('tag', { fontCharacter: '\\\\ea66' });\nCodicon.tagAdd = new Codicon('tag-add', { fontCharacter: '\\\\ea66' });\nCodicon.tagRemove = new Codicon('tag-remove', { fontCharacter: '\\\\ea66' });\nCodicon.person = new Codicon('person', { fontCharacter: '\\\\ea67' });\nCodicon.personFollow = new Codicon('person-follow', { fontCharacter: '\\\\ea67' });\nCodicon.personOutline = new Codicon('person-outline', { fontCharacter: '\\\\ea67' });\nCodicon.personFilled = new Codicon('person-filled', { fontCharacter: '\\\\ea67' });\nCodicon.gitBranch = new Codicon('git-branch', { fontCharacter: '\\\\ea68' });\nCodicon.gitBranchCreate = new Codicon('git-branch-create', { fontCharacter: '\\\\ea68' });\nCodicon.gitBranchDelete = new Codicon('git-branch-delete', { fontCharacter: '\\\\ea68' });\nCodicon.sourceControl = new Codicon('source-control', { fontCharacter: '\\\\ea68' });\nCodicon.mirror = new Codicon('mirror', { fontCharacter: '\\\\ea69' });\nCodicon.mirrorPublic = new Codicon('mirror-public', { fontCharacter: '\\\\ea69' });\nCodicon.star = new Codicon('star', { fontCharacter: '\\\\ea6a' });\nCodicon.starAdd = new Codicon('star-add', { fontCharacter: '\\\\ea6a' });\nCodicon.starDelete = new Codicon('star-delete', { fontCharacter: '\\\\ea6a' });\nCodicon.starEmpty = new Codicon('star-empty', { fontCharacter: '\\\\ea6a' });\nCodicon.comment = new Codicon('comment', { fontCharacter: '\\\\ea6b' });\nCodicon.commentAdd = new Codicon('comment-add', { fontCharacter: '\\\\ea6b' });\nCodicon.alert = new Codicon('alert', { fontCharacter: '\\\\ea6c' });\nCodicon.warning = new Codicon('warning', { fontCharacter: '\\\\ea6c' });\nCodicon.search = new Codicon('search', { fontCharacter: '\\\\ea6d' });\nCodicon.searchSave = new Codicon('search-save', { fontCharacter: '\\\\ea6d' });\nCodicon.logOut = new Codicon('log-out', { fontCharacter: '\\\\ea6e' });\nCodicon.signOut = new Codicon('sign-out', { fontCharacter: '\\\\ea6e' });\nCodicon.logIn = new Codicon('log-in', { fontCharacter: '\\\\ea6f' });\nCodicon.signIn = new Codicon('sign-in', { fontCharacter: '\\\\ea6f' });\nCodicon.eye = new Codicon('eye', { fontCharacter: '\\\\ea70' });\nCodicon.eyeUnwatch = new Codicon('eye-unwatch', { fontCharacter: '\\\\ea70' });\nCodicon.eyeWatch = new Codicon('eye-watch', { fontCharacter: '\\\\ea70' });\nCodicon.circleFilled = new Codicon('circle-filled', { fontCharacter: '\\\\ea71' });\nCodicon.primitiveDot = new Codicon('primitive-dot', { fontCharacter: '\\\\ea71' });\nCodicon.closeDirty = new Codicon('close-dirty', { fontCharacter: '\\\\ea71' });\nCodicon.debugBreakpoint = new Codicon('debug-breakpoint', { fontCharacter: '\\\\ea71' });\nCodicon.debugBreakpointDisabled = new Codicon('debug-breakpoint-disabled', { fontCharacter: '\\\\ea71' });\nCodicon.debugHint = new Codicon('debug-hint', { fontCharacter: '\\\\ea71' });\nCodicon.primitiveSquare = new Codicon('primitive-square', { fontCharacter: '\\\\ea72' });\nCodicon.edit = new Codicon('edit', { fontCharacter: '\\\\ea73' });\nCodicon.pencil = new Codicon('pencil', { fontCharacter: '\\\\ea73' });\nCodicon.info = new Codicon('info', { fontCharacter: '\\\\ea74' });\nCodicon.issueOpened = new Codicon('issue-opened', { fontCharacter: '\\\\ea74' });\nCodicon.gistPrivate = new Codicon('gist-private', { fontCharacter: '\\\\ea75' });\nCodicon.gitForkPrivate = new Codicon('git-fork-private', { fontCharacter: '\\\\ea75' });\nCodicon.lock = new Codicon('lock', { fontCharacter: '\\\\ea75' });\nCodicon.mirrorPrivate = new Codicon('mirror-private', { fontCharacter: '\\\\ea75' });\nCodicon.close = new Codicon('close', { fontCharacter: '\\\\ea76' });\nCodicon.removeClose = new Codicon('remove-close', { fontCharacter: '\\\\ea76' });\nCodicon.x = new Codicon('x', { fontCharacter: '\\\\ea76' });\nCodicon.repoSync = new Codicon('repo-sync', { fontCharacter: '\\\\ea77' });\nCodicon.sync = new Codicon('sync', { fontCharacter: '\\\\ea77' });\nCodicon.clone = new Codicon('clone', { fontCharacter: '\\\\ea78' });\nCodicon.desktopDownload = new Codicon('desktop-download', { fontCharacter: '\\\\ea78' });\nCodicon.beaker = new Codicon('beaker', { fontCharacter: '\\\\ea79' });\nCodicon.microscope = new Codicon('microscope', { fontCharacter: '\\\\ea79' });\nCodicon.vm = new Codicon('vm', { fontCharacter: '\\\\ea7a' });\nCodicon.deviceDesktop = new Codicon('device-desktop', { fontCharacter: '\\\\ea7a' });\nCodicon.file = new Codicon('file', { fontCharacter: '\\\\ea7b' });\nCodicon.fileText = new Codicon('file-text', { fontCharacter: '\\\\ea7b' });\nCodicon.more = new Codicon('more', { fontCharacter: '\\\\ea7c' });\nCodicon.ellipsis = new Codicon('ellipsis', { fontCharacter: '\\\\ea7c' });\nCodicon.kebabHorizontal = new Codicon('kebab-horizontal', { fontCharacter: '\\\\ea7c' });\nCodicon.mailReply = new Codicon('mail-reply', { fontCharacter: '\\\\ea7d' });\nCodicon.reply = new Codicon('reply', { fontCharacter: '\\\\ea7d' });\nCodicon.organization = new Codicon('organization', { fontCharacter: '\\\\ea7e' });\nCodicon.organizationFilled = new Codicon('organization-filled', { fontCharacter: '\\\\ea7e' });\nCodicon.organizationOutline = new Codicon('organization-outline', { fontCharacter: '\\\\ea7e' });\nCodicon.newFile = new Codicon('new-file', { fontCharacter: '\\\\ea7f' });\nCodicon.fileAdd = new Codicon('file-add', { fontCharacter: '\\\\ea7f' });\nCodicon.newFolder = new Codicon('new-folder', { fontCharacter: '\\\\ea80' });\nCodicon.fileDirectoryCreate = new Codicon('file-directory-create', { fontCharacter: '\\\\ea80' });\nCodicon.trash = new Codicon('trash', { fontCharacter: '\\\\ea81' });\nCodicon.trashcan = new Codicon('trashcan', { fontCharacter: '\\\\ea81' });\nCodicon.history = new Codicon('history', { fontCharacter: '\\\\ea82' });\nCodicon.clock = new Codicon('clock', { fontCharacter: '\\\\ea82' });\nCodicon.folder = new Codicon('folder', { fontCharacter: '\\\\ea83' });\nCodicon.fileDirectory = new Codicon('file-directory', { fontCharacter: '\\\\ea83' });\nCodicon.symbolFolder = new Codicon('symbol-folder', { fontCharacter: '\\\\ea83' });\nCodicon.logoGithub = new Codicon('logo-github', { fontCharacter: '\\\\ea84' });\nCodicon.markGithub = new Codicon('mark-github', { fontCharacter: '\\\\ea84' });\nCodicon.github = new Codicon('github', { fontCharacter: '\\\\ea84' });\nCodicon.terminal = new Codicon('terminal', { fontCharacter: '\\\\ea85' });\nCodicon.console = new Codicon('console', { fontCharacter: '\\\\ea85' });\nCodicon.repl = new Codicon('repl', { fontCharacter: '\\\\ea85' });\nCodicon.zap = new Codicon('zap', { fontCharacter: '\\\\ea86' });\nCodicon.symbolEvent = new Codicon('symbol-event', { fontCharacter: '\\\\ea86' });\nCodicon.error = new Codicon('error', { fontCharacter: '\\\\ea87' });\nCodicon.stop = new Codicon('stop', { fontCharacter: '\\\\ea87' });\nCodicon.variable = new Codicon('variable', { fontCharacter: '\\\\ea88' });\nCodicon.symbolVariable = new Codicon('symbol-variable', { fontCharacter: '\\\\ea88' });\nCodicon.array = new Codicon('array', { fontCharacter: '\\\\ea8a' });\nCodicon.symbolArray = new Codicon('symbol-array', { fontCharacter: '\\\\ea8a' });\nCodicon.symbolModule = new Codicon('symbol-module', { fontCharacter: '\\\\ea8b' });\nCodicon.symbolPackage = new Codicon('symbol-package', { fontCharacter: '\\\\ea8b' });\nCodicon.symbolNamespace = new Codicon('symbol-namespace', { fontCharacter: '\\\\ea8b' });\nCodicon.symbolObject = new Codicon('symbol-object', { fontCharacter: '\\\\ea8b' });\nCodicon.symbolMethod = new Codicon('symbol-method', { fontCharacter: '\\\\ea8c' });\nCodicon.symbolFunction = new Codicon('symbol-function', { fontCharacter: '\\\\ea8c' });\nCodicon.symbolConstructor = new Codicon('symbol-constructor', { fontCharacter: '\\\\ea8c' });\nCodicon.symbolBoolean = new Codicon('symbol-boolean', { fontCharacter: '\\\\ea8f' });\nCodicon.symbolNull = new Codicon('symbol-null', { fontCharacter: '\\\\ea8f' });\nCodicon.symbolNumeric = new Codicon('symbol-numeric', { fontCharacter: '\\\\ea90' });\nCodicon.symbolNumber = new Codicon('symbol-number', { fontCharacter: '\\\\ea90' });\nCodicon.symbolStructure = new Codicon('symbol-structure', { fontCharacter: '\\\\ea91' });\nCodicon.symbolStruct = new Codicon('symbol-struct', { fontCharacter: '\\\\ea91' });\nCodicon.symbolParameter = new Codicon('symbol-parameter', { fontCharacter: '\\\\ea92' });\nCodicon.symbolTypeParameter = new Codicon('symbol-type-parameter', { fontCharacter: '\\\\ea92' });\nCodicon.symbolKey = new Codicon('symbol-key', { fontCharacter: '\\\\ea93' });\nCodicon.symbolText = new Codicon('symbol-text', { fontCharacter: '\\\\ea93' });\nCodicon.symbolReference = new Codicon('symbol-reference', { fontCharacter: '\\\\ea94' });\nCodicon.goToFile = new Codicon('go-to-file', { fontCharacter: '\\\\ea94' });\nCodicon.symbolEnum = new Codicon('symbol-enum', { fontCharacter: '\\\\ea95' });\nCodicon.symbolValue = new Codicon('symbol-value', { fontCharacter: '\\\\ea95' });\nCodicon.symbolRuler = new Codicon('symbol-ruler', { fontCharacter: '\\\\ea96' });\nCodicon.symbolUnit = new Codicon('symbol-unit', { fontCharacter: '\\\\ea96' });\nCodicon.activateBreakpoints = new Codicon('activate-breakpoints', { fontCharacter: '\\\\ea97' });\nCodicon.archive = new Codicon('archive', { fontCharacter: '\\\\ea98' });\nCodicon.arrowBoth = new Codicon('arrow-both', { fontCharacter: '\\\\ea99' });\nCodicon.arrowDown = new Codicon('arrow-down', { fontCharacter: '\\\\ea9a' });\nCodicon.arrowLeft = new Codicon('arrow-left', { fontCharacter: '\\\\ea9b' });\nCodicon.arrowRight = new Codicon('arrow-right', { fontCharacter: '\\\\ea9c' });\nCodicon.arrowSmallDown = new Codicon('arrow-small-down', { fontCharacter: '\\\\ea9d' });\nCodicon.arrowSmallLeft = new Codicon('arrow-small-left', { fontCharacter: '\\\\ea9e' });\nCodicon.arrowSmallRight = new Codicon('arrow-small-right', { fontCharacter: '\\\\ea9f' });\nCodicon.arrowSmallUp = new Codicon('arrow-small-up', { fontCharacter: '\\\\eaa0' });\nCodicon.arrowUp = new Codicon('arrow-up', { fontCharacter: '\\\\eaa1' });\nCodicon.bell = new Codicon('bell', { fontCharacter: '\\\\eaa2' });\nCodicon.bold = new Codicon('bold', { fontCharacter: '\\\\eaa3' });\nCodicon.book = new Codicon('book', { fontCharacter: '\\\\eaa4' });\nCodicon.bookmark = new Codicon('bookmark', { fontCharacter: '\\\\eaa5' });\nCodicon.debugBreakpointConditionalUnverified = new Codicon('debug-breakpoint-conditional-unverified', { fontCharacter: '\\\\eaa6' });\nCodicon.debugBreakpointConditional = new Codicon('debug-breakpoint-conditional', { fontCharacter: '\\\\eaa7' });\nCodicon.debugBreakpointConditionalDisabled = new Codicon('debug-breakpoint-conditional-disabled', { fontCharacter: '\\\\eaa7' });\nCodicon.debugBreakpointDataUnverified = new Codicon('debug-breakpoint-data-unverified', { fontCharacter: '\\\\eaa8' });\nCodicon.debugBreakpointData = new Codicon('debug-breakpoint-data', { fontCharacter: '\\\\eaa9' });\nCodicon.debugBreakpointDataDisabled = new Codicon('debug-breakpoint-data-disabled', { fontCharacter: '\\\\eaa9' });\nCodicon.debugBreakpointLogUnverified = new Codicon('debug-breakpoint-log-unverified', { fontCharacter: '\\\\eaaa' });\nCodicon.debugBreakpointLog = new Codicon('debug-breakpoint-log', { fontCharacter: '\\\\eaab' });\nCodicon.debugBreakpointLogDisabled = new Codicon('debug-breakpoint-log-disabled', { fontCharacter: '\\\\eaab' });\nCodicon.briefcase = new Codicon('briefcase', { fontCharacter: '\\\\eaac' });\nCodicon.broadcast = new Codicon('broadcast', { fontCharacter: '\\\\eaad' });\nCodicon.browser = new Codicon('browser', { fontCharacter: '\\\\eaae' });\nCodicon.bug = new Codicon('bug', { fontCharacter: '\\\\eaaf' });\nCodicon.calendar = new Codicon('calendar', { fontCharacter: '\\\\eab0' });\nCodicon.caseSensitive = new Codicon('case-sensitive', { fontCharacter: '\\\\eab1' });\nCodicon.check = new Codicon('check', { fontCharacter: '\\\\eab2' });\nCodicon.checklist = new Codicon('checklist', { fontCharacter: '\\\\eab3' });\nCodicon.chevronDown = new Codicon('chevron-down', { fontCharacter: '\\\\eab4' });\nCodicon.dropDownButton = new Codicon('drop-down-button', Codicon.chevronDown.definition);\nCodicon.chevronLeft = new Codicon('chevron-left', { fontCharacter: '\\\\eab5' });\nCodicon.chevronRight = new Codicon('chevron-right', { fontCharacter: '\\\\eab6' });\nCodicon.chevronUp = new Codicon('chevron-up', { fontCharacter: '\\\\eab7' });\nCodicon.chromeClose = new Codicon('chrome-close', { fontCharacter: '\\\\eab8' });\nCodicon.chromeMaximize = new Codicon('chrome-maximize', { fontCharacter: '\\\\eab9' });\nCodicon.chromeMinimize = new Codicon('chrome-minimize', { fontCharacter: '\\\\eaba' });\nCodicon.chromeRestore = new Codicon('chrome-restore', { fontCharacter: '\\\\eabb' });\nCodicon.circleOutline = new Codicon('circle-outline', { fontCharacter: '\\\\eabc' });\nCodicon.debugBreakpointUnverified = new Codicon('debug-breakpoint-unverified', { fontCharacter: '\\\\eabc' });\nCodicon.circleSlash = new Codicon('circle-slash', { fontCharacter: '\\\\eabd' });\nCodicon.circuitBoard = new Codicon('circuit-board', { fontCharacter: '\\\\eabe' });\nCodicon.clearAll = new Codicon('clear-all', { fontCharacter: '\\\\eabf' });\nCodicon.clippy = new Codicon('clippy', { fontCharacter: '\\\\eac0' });\nCodicon.closeAll = new Codicon('close-all', { fontCharacter: '\\\\eac1' });\nCodicon.cloudDownload = new Codicon('cloud-download', { fontCharacter: '\\\\eac2' });\nCodicon.cloudUpload = new Codicon('cloud-upload', { fontCharacter: '\\\\eac3' });\nCodicon.code = new Codicon('code', { fontCharacter: '\\\\eac4' });\nCodicon.collapseAll = new Codicon('collapse-all', { fontCharacter: '\\\\eac5' });\nCodicon.colorMode = new Codicon('color-mode', { fontCharacter: '\\\\eac6' });\nCodicon.commentDiscussion = new Codicon('comment-discussion', { fontCharacter: '\\\\eac7' });\nCodicon.compareChanges = new Codicon('compare-changes', { fontCharacter: '\\\\eafd' });\nCodicon.creditCard = new Codicon('credit-card', { fontCharacter: '\\\\eac9' });\nCodicon.dash = new Codicon('dash', { fontCharacter: '\\\\eacc' });\nCodicon.dashboard = new Codicon('dashboard', { fontCharacter: '\\\\eacd' });\nCodicon.database = new Codicon('database', { fontCharacter: '\\\\eace' });\nCodicon.debugContinue = new Codicon('debug-continue', { fontCharacter: '\\\\eacf' });\nCodicon.debugDisconnect = new Codicon('debug-disconnect', { fontCharacter: '\\\\ead0' });\nCodicon.debugPause = new Codicon('debug-pause', { fontCharacter: '\\\\ead1' });\nCodicon.debugRestart = new Codicon('debug-restart', { fontCharacter: '\\\\ead2' });\nCodicon.debugStart = new Codicon('debug-start', { fontCharacter: '\\\\ead3' });\nCodicon.debugStepInto = new Codicon('debug-step-into', { fontCharacter: '\\\\ead4' });\nCodicon.debugStepOut = new Codicon('debug-step-out', { fontCharacter: '\\\\ead5' });\nCodicon.debugStepOver = new Codicon('debug-step-over', { fontCharacter: '\\\\ead6' });\nCodicon.debugStop = new Codicon('debug-stop', { fontCharacter: '\\\\ead7' });\nCodicon.debug = new Codicon('debug', { fontCharacter: '\\\\ead8' });\nCodicon.deviceCameraVideo = new Codicon('device-camera-video', { fontCharacter: '\\\\ead9' });\nCodicon.deviceCamera = new Codicon('device-camera', { fontCharacter: '\\\\eada' });\nCodicon.deviceMobile = new Codicon('device-mobile', { fontCharacter: '\\\\eadb' });\nCodicon.diffAdded = new Codicon('diff-added', { fontCharacter: '\\\\eadc' });\nCodicon.diffIgnored = new Codicon('diff-ignored', { fontCharacter: '\\\\eadd' });\nCodicon.diffModified = new Codicon('diff-modified', { fontCharacter: '\\\\eade' });\nCodicon.diffRemoved = new Codicon('diff-removed', { fontCharacter: '\\\\eadf' });\nCodicon.diffRenamed = new Codicon('diff-renamed', { fontCharacter: '\\\\eae0' });\nCodicon.diff = new Codicon('diff', { fontCharacter: '\\\\eae1' });\nCodicon.discard = new Codicon('discard', { fontCharacter: '\\\\eae2' });\nCodicon.editorLayout = new Codicon('editor-layout', { fontCharacter: '\\\\eae3' });\nCodicon.emptyWindow = new Codicon('empty-window', { fontCharacter: '\\\\eae4' });\nCodicon.exclude = new Codicon('exclude', { fontCharacter: '\\\\eae5' });\nCodicon.extensions = new Codicon('extensions', { fontCharacter: '\\\\eae6' });\nCodicon.eyeClosed = new Codicon('eye-closed', { fontCharacter: '\\\\eae7' });\nCodicon.fileBinary = new Codicon('file-binary', { fontCharacter: '\\\\eae8' });\nCodicon.fileCode = new Codicon('file-code', { fontCharacter: '\\\\eae9' });\nCodicon.fileMedia = new Codicon('file-media', { fontCharacter: '\\\\eaea' });\nCodicon.filePdf = new Codicon('file-pdf', { fontCharacter: '\\\\eaeb' });\nCodicon.fileSubmodule = new Codicon('file-submodule', { fontCharacter: '\\\\eaec' });\nCodicon.fileSymlinkDirectory = new Codicon('file-symlink-directory', { fontCharacter: '\\\\eaed' });\nCodicon.fileSymlinkFile = new Codicon('file-symlink-file', { fontCharacter: '\\\\eaee' });\nCodicon.fileZip = new Codicon('file-zip', { fontCharacter: '\\\\eaef' });\nCodicon.files = new Codicon('files', { fontCharacter: '\\\\eaf0' });\nCodicon.filter = new Codicon('filter', { fontCharacter: '\\\\eaf1' });\nCodicon.flame = new Codicon('flame', { fontCharacter: '\\\\eaf2' });\nCodicon.foldDown = new Codicon('fold-down', { fontCharacter: '\\\\eaf3' });\nCodicon.foldUp = new Codicon('fold-up', { fontCharacter: '\\\\eaf4' });\nCodicon.fold = new Codicon('fold', { fontCharacter: '\\\\eaf5' });\nCodicon.folderActive = new Codicon('folder-active', { fontCharacter: '\\\\eaf6' });\nCodicon.folderOpened = new Codicon('folder-opened', { fontCharacter: '\\\\eaf7' });\nCodicon.gear = new Codicon('gear', { fontCharacter: '\\\\eaf8' });\nCodicon.gift = new Codicon('gift', { fontCharacter: '\\\\eaf9' });\nCodicon.gistSecret = new Codicon('gist-secret', { fontCharacter: '\\\\eafa' });\nCodicon.gist = new Codicon('gist', { fontCharacter: '\\\\eafb' });\nCodicon.gitCommit = new Codicon('git-commit', { fontCharacter: '\\\\eafc' });\nCodicon.gitCompare = new Codicon('git-compare', { fontCharacter: '\\\\eafd' });\nCodicon.gitMerge = new Codicon('git-merge', { fontCharacter: '\\\\eafe' });\nCodicon.githubAction = new Codicon('github-action', { fontCharacter: '\\\\eaff' });\nCodicon.githubAlt = new Codicon('github-alt', { fontCharacter: '\\\\eb00' });\nCodicon.globe = new Codicon('globe', { fontCharacter: '\\\\eb01' });\nCodicon.grabber = new Codicon('grabber', { fontCharacter: '\\\\eb02' });\nCodicon.graph = new Codicon('graph', { fontCharacter: '\\\\eb03' });\nCodicon.gripper = new Codicon('gripper', { fontCharacter: '\\\\eb04' });\nCodicon.heart = new Codicon('heart', { fontCharacter: '\\\\eb05' });\nCodicon.home = new Codicon('home', { fontCharacter: '\\\\eb06' });\nCodicon.horizontalRule = new Codicon('horizontal-rule', { fontCharacter: '\\\\eb07' });\nCodicon.hubot = new Codicon('hubot', { fontCharacter: '\\\\eb08' });\nCodicon.inbox = new Codicon('inbox', { fontCharacter: '\\\\eb09' });\nCodicon.issueClosed = new Codicon('issue-closed', { fontCharacter: '\\\\eba4' });\nCodicon.issueReopened = new Codicon('issue-reopened', { fontCharacter: '\\\\eb0b' });\nCodicon.issues = new Codicon('issues', { fontCharacter: '\\\\eb0c' });\nCodicon.italic = new Codicon('italic', { fontCharacter: '\\\\eb0d' });\nCodicon.jersey = new Codicon('jersey', { fontCharacter: '\\\\eb0e' });\nCodicon.json = new Codicon('json', { fontCharacter: '\\\\eb0f' });\nCodicon.kebabVertical = new Codicon('kebab-vertical', { fontCharacter: '\\\\eb10' });\nCodicon.key = new Codicon('key', { fontCharacter: '\\\\eb11' });\nCodicon.law = new Codicon('law', { fontCharacter: '\\\\eb12' });\nCodicon.lightbulbAutofix = new Codicon('lightbulb-autofix', { fontCharacter: '\\\\eb13' });\nCodicon.linkExternal = new Codicon('link-external', { fontCharacter: '\\\\eb14' });\nCodicon.link = new Codicon('link', { fontCharacter: '\\\\eb15' });\nCodicon.listOrdered = new Codicon('list-ordered', { fontCharacter: '\\\\eb16' });\nCodicon.listUnordered = new Codicon('list-unordered', { fontCharacter: '\\\\eb17' });\nCodicon.liveShare = new Codicon('live-share', { fontCharacter: '\\\\eb18' });\nCodicon.loading = new Codicon('loading', { fontCharacter: '\\\\eb19' });\nCodicon.location = new Codicon('location', { fontCharacter: '\\\\eb1a' });\nCodicon.mailRead = new Codicon('mail-read', { fontCharacter: '\\\\eb1b' });\nCodicon.mail = new Codicon('mail', { fontCharacter: '\\\\eb1c' });\nCodicon.markdown = new Codicon('markdown', { fontCharacter: '\\\\eb1d' });\nCodicon.megaphone = new Codicon('megaphone', { fontCharacter: '\\\\eb1e' });\nCodicon.mention = new Codicon('mention', { fontCharacter: '\\\\eb1f' });\nCodicon.milestone = new Codicon('milestone', { fontCharacter: '\\\\eb20' });\nCodicon.mortarBoard = new Codicon('mortar-board', { fontCharacter: '\\\\eb21' });\nCodicon.move = new Codicon('move', { fontCharacter: '\\\\eb22' });\nCodicon.multipleWindows = new Codicon('multiple-windows', { fontCharacter: '\\\\eb23' });\nCodicon.mute = new Codicon('mute', { fontCharacter: '\\\\eb24' });\nCodicon.noNewline = new Codicon('no-newline', { fontCharacter: '\\\\eb25' });\nCodicon.note = new Codicon('note', { fontCharacter: '\\\\eb26' });\nCodicon.octoface = new Codicon('octoface', { fontCharacter: '\\\\eb27' });\nCodicon.openPreview = new Codicon('open-preview', { fontCharacter: '\\\\eb28' });\nCodicon.package_ = new Codicon('package', { fontCharacter: '\\\\eb29' });\nCodicon.paintcan = new Codicon('paintcan', { fontCharacter: '\\\\eb2a' });\nCodicon.pin = new Codicon('pin', { fontCharacter: '\\\\eb2b' });\nCodicon.play = new Codicon('play', { fontCharacter: '\\\\eb2c' });\nCodicon.run = new Codicon('run', { fontCharacter: '\\\\eb2c' });\nCodicon.plug = new Codicon('plug', { fontCharacter: '\\\\eb2d' });\nCodicon.preserveCase = new Codicon('preserve-case', { fontCharacter: '\\\\eb2e' });\nCodicon.preview = new Codicon('preview', { fontCharacter: '\\\\eb2f' });\nCodicon.project = new Codicon('project', { fontCharacter: '\\\\eb30' });\nCodicon.pulse = new Codicon('pulse', { fontCharacter: '\\\\eb31' });\nCodicon.question = new Codicon('question', { fontCharacter: '\\\\eb32' });\nCodicon.quote = new Codicon('quote', { fontCharacter: '\\\\eb33' });\nCodicon.radioTower = new Codicon('radio-tower', { fontCharacter: '\\\\eb34' });\nCodicon.reactions = new Codicon('reactions', { fontCharacter: '\\\\eb35' });\nCodicon.references = new Codicon('references', { fontCharacter: '\\\\eb36' });\nCodicon.refresh = new Codicon('refresh', { fontCharacter: '\\\\eb37' });\nCodicon.regex = new Codicon('regex', { fontCharacter: '\\\\eb38' });\nCodicon.remoteExplorer = new Codicon('remote-explorer', { fontCharacter: '\\\\eb39' });\nCodicon.remote = new Codicon('remote', { fontCharacter: '\\\\eb3a' });\nCodicon.remove = new Codicon('remove', { fontCharacter: '\\\\eb3b' });\nCodicon.replaceAll = new Codicon('replace-all', { fontCharacter: '\\\\eb3c' });\nCodicon.replace = new Codicon('replace', { fontCharacter: '\\\\eb3d' });\nCodicon.repoClone = new Codicon('repo-clone', { fontCharacter: '\\\\eb3e' });\nCodicon.repoForcePush = new Codicon('repo-force-push', { fontCharacter: '\\\\eb3f' });\nCodicon.repoPull = new Codicon('repo-pull', { fontCharacter: '\\\\eb40' });\nCodicon.repoPush = new Codicon('repo-push', { fontCharacter: '\\\\eb41' });\nCodicon.report = new Codicon('report', { fontCharacter: '\\\\eb42' });\nCodicon.requestChanges = new Codicon('request-changes', { fontCharacter: '\\\\eb43' });\nCodicon.rocket = new Codicon('rocket', { fontCharacter: '\\\\eb44' });\nCodicon.rootFolderOpened = new Codicon('root-folder-opened', { fontCharacter: '\\\\eb45' });\nCodicon.rootFolder = new Codicon('root-folder', { fontCharacter: '\\\\eb46' });\nCodicon.rss = new Codicon('rss', { fontCharacter: '\\\\eb47' });\nCodicon.ruby = new Codicon('ruby', { fontCharacter: '\\\\eb48' });\nCodicon.saveAll = new Codicon('save-all', { fontCharacter: '\\\\eb49' });\nCodicon.saveAs = new Codicon('save-as', { fontCharacter: '\\\\eb4a' });\nCodicon.save = new Codicon('save', { fontCharacter: '\\\\eb4b' });\nCodicon.screenFull = new Codicon('screen-full', { fontCharacter: '\\\\eb4c' });\nCodicon.screenNormal = new Codicon('screen-normal', { fontCharacter: '\\\\eb4d' });\nCodicon.searchStop = new Codicon('search-stop', { fontCharacter: '\\\\eb4e' });\nCodicon.server = new Codicon('server', { fontCharacter: '\\\\eb50' });\nCodicon.settingsGear = new Codicon('settings-gear', { fontCharacter: '\\\\eb51' });\nCodicon.settings = new Codicon('settings', { fontCharacter: '\\\\eb52' });\nCodicon.shield = new Codicon('shield', { fontCharacter: '\\\\eb53' });\nCodicon.smiley = new Codicon('smiley', { fontCharacter: '\\\\eb54' });\nCodicon.sortPrecedence = new Codicon('sort-precedence', { fontCharacter: '\\\\eb55' });\nCodicon.splitHorizontal = new Codicon('split-horizontal', { fontCharacter: '\\\\eb56' });\nCodicon.splitVertical = new Codicon('split-vertical', { fontCharacter: '\\\\eb57' });\nCodicon.squirrel = new Codicon('squirrel', { fontCharacter: '\\\\eb58' });\nCodicon.starFull = new Codicon('star-full', { fontCharacter: '\\\\eb59' });\nCodicon.starHalf = new Codicon('star-half', { fontCharacter: '\\\\eb5a' });\nCodicon.symbolClass = new Codicon('symbol-class', { fontCharacter: '\\\\eb5b' });\nCodicon.symbolColor = new Codicon('symbol-color', { fontCharacter: '\\\\eb5c' });\nCodicon.symbolCustomColor = new Codicon('symbol-customcolor', { fontCharacter: '\\\\eb5c' });\nCodicon.symbolConstant = new Codicon('symbol-constant', { fontCharacter: '\\\\eb5d' });\nCodicon.symbolEnumMember = new Codicon('symbol-enum-member', { fontCharacter: '\\\\eb5e' });\nCodicon.symbolField = new Codicon('symbol-field', { fontCharacter: '\\\\eb5f' });\nCodicon.symbolFile = new Codicon('symbol-file', { fontCharacter: '\\\\eb60' });\nCodicon.symbolInterface = new Codicon('symbol-interface', { fontCharacter: '\\\\eb61' });\nCodicon.symbolKeyword = new Codicon('symbol-keyword', { fontCharacter: '\\\\eb62' });\nCodicon.symbolMisc = new Codicon('symbol-misc', { fontCharacter: '\\\\eb63' });\nCodicon.symbolOperator = new Codicon('symbol-operator', { fontCharacter: '\\\\eb64' });\nCodicon.symbolProperty = new Codicon('symbol-property', { fontCharacter: '\\\\eb65' });\nCodicon.wrench = new Codicon('wrench', { fontCharacter: '\\\\eb65' });\nCodicon.wrenchSubaction = new Codicon('wrench-subaction', { fontCharacter: '\\\\eb65' });\nCodicon.symbolSnippet = new Codicon('symbol-snippet', { fontCharacter: '\\\\eb66' });\nCodicon.tasklist = new Codicon('tasklist', { fontCharacter: '\\\\eb67' });\nCodicon.telescope = new Codicon('telescope', { fontCharacter: '\\\\eb68' });\nCodicon.textSize = new Codicon('text-size', { fontCharacter: '\\\\eb69' });\nCodicon.threeBars = new Codicon('three-bars', { fontCharacter: '\\\\eb6a' });\nCodicon.thumbsdown = new Codicon('thumbsdown', { fontCharacter: '\\\\eb6b' });\nCodicon.thumbsup = new Codicon('thumbsup', { fontCharacter: '\\\\eb6c' });\nCodicon.tools = new Codicon('tools', { fontCharacter: '\\\\eb6d' });\nCodicon.triangleDown = new Codicon('triangle-down', { fontCharacter: '\\\\eb6e' });\nCodicon.triangleLeft = new Codicon('triangle-left', { fontCharacter: '\\\\eb6f' });\nCodicon.triangleRight = new Codicon('triangle-right', { fontCharacter: '\\\\eb70' });\nCodicon.triangleUp = new Codicon('triangle-up', { fontCharacter: '\\\\eb71' });\nCodicon.twitter = new Codicon('twitter', { fontCharacter: '\\\\eb72' });\nCodicon.unfold = new Codicon('unfold', { fontCharacter: '\\\\eb73' });\nCodicon.unlock = new Codicon('unlock', { fontCharacter: '\\\\eb74' });\nCodicon.unmute = new Codicon('unmute', { fontCharacter: '\\\\eb75' });\nCodicon.unverified = new Codicon('unverified', { fontCharacter: '\\\\eb76' });\nCodicon.verified = new Codicon('verified', { fontCharacter: '\\\\eb77' });\nCodicon.versions = new Codicon('versions', { fontCharacter: '\\\\eb78' });\nCodicon.vmActive = new Codicon('vm-active', { fontCharacter: '\\\\eb79' });\nCodicon.vmOutline = new Codicon('vm-outline', { fontCharacter: '\\\\eb7a' });\nCodicon.vmRunning = new Codicon('vm-running', { fontCharacter: '\\\\eb7b' });\nCodicon.watch = new Codicon('watch', { fontCharacter: '\\\\eb7c' });\nCodicon.whitespace = new Codicon('whitespace', { fontCharacter: '\\\\eb7d' });\nCodicon.wholeWord = new Codicon('whole-word', { fontCharacter: '\\\\eb7e' });\nCodicon.window = new Codicon('window', { fontCharacter: '\\\\eb7f' });\nCodicon.wordWrap = new Codicon('word-wrap', { fontCharacter: '\\\\eb80' });\nCodicon.zoomIn = new Codicon('zoom-in', { fontCharacter: '\\\\eb81' });\nCodicon.zoomOut = new Codicon('zoom-out', { fontCharacter: '\\\\eb82' });\nCodicon.listFilter = new Codicon('list-filter', { fontCharacter: '\\\\eb83' });\nCodicon.listFlat = new Codicon('list-flat', { fontCharacter: '\\\\eb84' });\nCodicon.listSelection = new Codicon('list-selection', { fontCharacter: '\\\\eb85' });\nCodicon.selection = new Codicon('selection', { fontCharacter: '\\\\eb85' });\nCodicon.listTree = new Codicon('list-tree', { fontCharacter: '\\\\eb86' });\nCodicon.debugBreakpointFunctionUnverified = new Codicon('debug-breakpoint-function-unverified', { fontCharacter: '\\\\eb87' });\nCodicon.debugBreakpointFunction = new Codicon('debug-breakpoint-function', { fontCharacter: '\\\\eb88' });\nCodicon.debugBreakpointFunctionDisabled = new Codicon('debug-breakpoint-function-disabled', { fontCharacter: '\\\\eb88' });\nCodicon.debugStackframeActive = new Codicon('debug-stackframe-active', { fontCharacter: '\\\\eb89' });\nCodicon.debugStackframeDot = new Codicon('debug-stackframe-dot', { fontCharacter: '\\\\eb8a' });\nCodicon.debugStackframe = new Codicon('debug-stackframe', { fontCharacter: '\\\\eb8b' });\nCodicon.debugStackframeFocused = new Codicon('debug-stackframe-focused', { fontCharacter: '\\\\eb8b' });\nCodicon.debugBreakpointUnsupported = new Codicon('debug-breakpoint-unsupported', { fontCharacter: '\\\\eb8c' });\nCodicon.symbolString = new Codicon('symbol-string', { fontCharacter: '\\\\eb8d' });\nCodicon.debugReverseContinue = new Codicon('debug-reverse-continue', { fontCharacter: '\\\\eb8e' });\nCodicon.debugStepBack = new Codicon('debug-step-back', { fontCharacter: '\\\\eb8f' });\nCodicon.debugRestartFrame = new Codicon('debug-restart-frame', { fontCharacter: '\\\\eb90' });\nCodicon.callIncoming = new Codicon('call-incoming', { fontCharacter: '\\\\eb92' });\nCodicon.callOutgoing = new Codicon('call-outgoing', { fontCharacter: '\\\\eb93' });\nCodicon.menu = new Codicon('menu', { fontCharacter: '\\\\eb94' });\nCodicon.expandAll = new Codicon('expand-all', { fontCharacter: '\\\\eb95' });\nCodicon.feedback = new Codicon('feedback', { fontCharacter: '\\\\eb96' });\nCodicon.groupByRefType = new Codicon('group-by-ref-type', { fontCharacter: '\\\\eb97' });\nCodicon.ungroupByRefType = new Codicon('ungroup-by-ref-type', { fontCharacter: '\\\\eb98' });\nCodicon.account = new Codicon('account', { fontCharacter: '\\\\eb99' });\nCodicon.bellDot = new Codicon('bell-dot', { fontCharacter: '\\\\eb9a' });\nCodicon.debugConsole = new Codicon('debug-console', { fontCharacter: '\\\\eb9b' });\nCodicon.library = new Codicon('library', { fontCharacter: '\\\\eb9c' });\nCodicon.output = new Codicon('output', { fontCharacter: '\\\\eb9d' });\nCodicon.runAll = new Codicon('run-all', { fontCharacter: '\\\\eb9e' });\nCodicon.syncIgnored = new Codicon('sync-ignored', { fontCharacter: '\\\\eb9f' });\nCodicon.pinned = new Codicon('pinned', { fontCharacter: '\\\\eba0' });\nCodicon.githubInverted = new Codicon('github-inverted', { fontCharacter: '\\\\eba1' });\nCodicon.debugAlt = new Codicon('debug-alt', { fontCharacter: '\\\\eb91' });\nCodicon.serverProcess = new Codicon('server-process', { fontCharacter: '\\\\eba2' });\nCodicon.serverEnvironment = new Codicon('server-environment', { fontCharacter: '\\\\eba3' });\nCodicon.pass = new Codicon('pass', { fontCharacter: '\\\\eba4' });\nCodicon.stopCircle = new Codicon('stop-circle', { fontCharacter: '\\\\eba5' });\nCodicon.playCircle = new Codicon('play-circle', { fontCharacter: '\\\\eba6' });\nCodicon.record = new Codicon('record', { fontCharacter: '\\\\eba7' });\nCodicon.debugAltSmall = new Codicon('debug-alt-small', { fontCharacter: '\\\\eba8' });\nCodicon.vmConnect = new Codicon('vm-connect', { fontCharacter: '\\\\eba9' });\nCodicon.cloud = new Codicon('cloud', { fontCharacter: '\\\\ebaa' });\nCodicon.merge = new Codicon('merge', { fontCharacter: '\\\\ebab' });\nCodicon.exportIcon = new Codicon('export', { fontCharacter: '\\\\ebac' });\nCodicon.graphLeft = new Codicon('graph-left', { fontCharacter: '\\\\ebad' });\nCodicon.magnet = new Codicon('magnet', { fontCharacter: '\\\\ebae' });\nCodicon.notebook = new Codicon('notebook', { fontCharacter: '\\\\ebaf' });\nCodicon.redo = new Codicon('redo', { fontCharacter: '\\\\ebb0' });\nCodicon.checkAll = new Codicon('check-all', { fontCharacter: '\\\\ebb1' });\nCodicon.pinnedDirty = new Codicon('pinned-dirty', { fontCharacter: '\\\\ebb2' });\nCodicon.passFilled = new Codicon('pass-filled', { fontCharacter: '\\\\ebb3' });\nCodicon.circleLargeFilled = new Codicon('circle-large-filled', { fontCharacter: '\\\\ebb4' });\nCodicon.circleLargeOutline = new Codicon('circle-large-outline', { fontCharacter: '\\\\ebb5' });\nCodicon.combine = new Codicon('combine', { fontCharacter: '\\\\ebb6' });\nCodicon.gather = new Codicon('gather', { fontCharacter: '\\\\ebb6' });\nCodicon.table = new Codicon('table', { fontCharacter: '\\\\ebb7' });\nCodicon.variableGroup = new Codicon('variable-group', { fontCharacter: '\\\\ebb8' });\nCodicon.typeHierarchy = new Codicon('type-hierarchy', { fontCharacter: '\\\\ebb9' });\nCodicon.typeHierarchySub = new Codicon('type-hierarchy-sub', { fontCharacter: '\\\\ebba' });\nCodicon.typeHierarchySuper = new Codicon('type-hierarchy-super', { fontCharacter: '\\\\ebbb' });\nCodicon.gitPullRequestCreate = new Codicon('git-pull-request-create', { fontCharacter: '\\\\ebbc' });\nCodicon.runAbove = new Codicon('run-above', { fontCharacter: '\\\\ebbd' });\nCodicon.runBelow = new Codicon('run-below', { fontCharacter: '\\\\ebbe' });\nCodicon.notebookTemplate = new Codicon('notebook-template', { fontCharacter: '\\\\ebbf' });\nCodicon.debugRerun = new Codicon('debug-rerun', { fontCharacter: '\\\\ebc0' });\nCodicon.workspaceTrusted = new Codicon('workspace-trusted', { fontCharacter: '\\\\ebc1' });\nCodicon.workspaceUntrusted = new Codicon('workspace-untrusted', { fontCharacter: '\\\\ebc2' });\nCodicon.workspaceUnspecified = new Codicon('workspace-unspecified', { fontCharacter: '\\\\ebc3' });\nCodicon.terminalCmd = new Codicon('terminal-cmd', { fontCharacter: '\\\\ebc4' });\nCodicon.terminalDebian = new Codicon('terminal-debian', { fontCharacter: '\\\\ebc5' });\nCodicon.terminalLinux = new Codicon('terminal-linux', { fontCharacter: '\\\\ebc6' });\nCodicon.terminalPowershell = new Codicon('terminal-powershell', { fontCharacter: '\\\\ebc7' });\nCodicon.terminalTmux = new Codicon('terminal-tmux', { fontCharacter: '\\\\ebc8' });\nCodicon.terminalUbuntu = new Codicon('terminal-ubuntu', { fontCharacter: '\\\\ebc9' });\nCodicon.terminalBash = new Codicon('terminal-bash', { fontCharacter: '\\\\ebca' });\nCodicon.arrowSwap = new Codicon('arrow-swap', { fontCharacter: '\\\\ebcb' });\nCodicon.copy = new Codicon('copy', { fontCharacter: '\\\\ebcc' });\nCodicon.personAdd = new Codicon('person-add', { fontCharacter: '\\\\ebcd' });\nCodicon.filterFilled = new Codicon('filter-filled', { fontCharacter: '\\\\ebce' });\nCodicon.wand = new Codicon('wand', { fontCharacter: '\\\\ebcf' });\nCodicon.debugLineByLine = new Codicon('debug-line-by-line', { fontCharacter: '\\\\ebd0' });\nCodicon.inspect = new Codicon('inspect', { fontCharacter: '\\\\ebd1' });\nCodicon.layers = new Codicon('layers', { fontCharacter: '\\\\ebd2' });\nCodicon.layersDot = new Codicon('layers-dot', { fontCharacter: '\\\\ebd3' });\nCodicon.layersActive = new Codicon('layers-active', { fontCharacter: '\\\\ebd4' });\nCodicon.compass = new Codicon('compass', { fontCharacter: '\\\\ebd5' });\nCodicon.compassDot = new Codicon('compass-dot', { fontCharacter: '\\\\ebd6' });\nCodicon.compassActive = new Codicon('compass-active', { fontCharacter: '\\\\ebd7' });\nCodicon.azure = new Codicon('azure', { fontCharacter: '\\\\ebd8' });\nCodicon.issueDraft = new Codicon('issue-draft', { fontCharacter: '\\\\ebd9' });\nCodicon.gitPullRequestClosed = new Codicon('git-pull-request-closed', { fontCharacter: '\\\\ebda' });\nCodicon.gitPullRequestDraft = new Codicon('git-pull-request-draft', { fontCharacter: '\\\\ebdb' });\nCodicon.debugAll = new Codicon('debug-all', { fontCharacter: '\\\\ebdc' });\nCodicon.debugCoverage = new Codicon('debug-coverage', { fontCharacter: '\\\\ebdd' });\nCodicon.runErrors = new Codicon('run-errors', { fontCharacter: '\\\\ebde' });\nCodicon.folderLibrary = new Codicon('folder-library', { fontCharacter: '\\\\ebdf' });\nCodicon.debugContinueSmall = new Codicon('debug-continue-small', { fontCharacter: '\\\\ebe0' });\nCodicon.beakerStop = new Codicon('beaker-stop', { fontCharacter: '\\\\ebe1' });\nCodicon.graphLine = new Codicon('graph-line', { fontCharacter: '\\\\ebe2' });\nCodicon.graphScatter = new Codicon('graph-scatter', { fontCharacter: '\\\\ebe3' });\nCodicon.pieChart = new Codicon('pie-chart', { fontCharacter: '\\\\ebe4' });\nCodicon.bracket = new Codicon('bracket', Codicon.json.definition);\nCodicon.bracketDot = new Codicon('bracket-dot', { fontCharacter: '\\\\ebe5' });\nCodicon.bracketError = new Codicon('bracket-error', { fontCharacter: '\\\\ebe6' });\nCodicon.lockSmall = new Codicon('lock-small', { fontCharacter: '\\\\ebe7' });\nCodicon.azureDevops = new Codicon('azure-devops', { fontCharacter: '\\\\ebe8' });\nCodicon.verifiedFilled = new Codicon('verified-filled', { fontCharacter: '\\\\ebe9' });\nCodicon.newLine = new Codicon('newline', { fontCharacter: '\\\\ebea' });\nCodicon.layout = new Codicon('layout', { fontCharacter: '\\\\ebeb' });\nCodicon.layoutActivitybarLeft = new Codicon('layout-activitybar-left', { fontCharacter: '\\\\ebec' });\nCodicon.layoutActivitybarRight = new Codicon('layout-activitybar-right', { fontCharacter: '\\\\ebed' });\nCodicon.layoutPanelLeft = new Codicon('layout-panel-left', { fontCharacter: '\\\\ebee' });\nCodicon.layoutPanelCenter = new Codicon('layout-panel-center', { fontCharacter: '\\\\ebef' });\nCodicon.layoutPanelJustify = new Codicon('layout-panel-justify', { fontCharacter: '\\\\ebf0' });\nCodicon.layoutPanelRight = new Codicon('layout-panel-right', { fontCharacter: '\\\\ebf1' });\nCodicon.layoutPanel = new Codicon('layout-panel', { fontCharacter: '\\\\ebf2' });\nCodicon.layoutSidebarLeft = new Codicon('layout-sidebar-left', { fontCharacter: '\\\\ebf3' });\nCodicon.layoutSidebarRight = new Codicon('layout-sidebar-right', { fontCharacter: '\\\\ebf4' });\nCodicon.layoutStatusbar = new Codicon('layout-statusbar', { fontCharacter: '\\\\ebf5' });\nCodicon.layoutMenubar = new Codicon('layout-menubar', { fontCharacter: '\\\\ebf6' });\nCodicon.layoutCentered = new Codicon('layout-centered', { fontCharacter: '\\\\ebf7' });\nCodicon.target = new Codicon('target', { fontCharacter: '\\\\ebf8' });\nCodicon.indent = new Codicon('indent', { fontCharacter: '\\\\ebf9' });\nCodicon.recordSmall = new Codicon('record-small', { fontCharacter: '\\\\ebfa' });\nCodicon.errorSmall = new Codicon('error-small', { fontCharacter: '\\\\ebfb' });\nCodicon.arrowCircleDown = new Codicon('arrow-circle-down', { fontCharacter: '\\\\ebfc' });\nCodicon.arrowCircleLeft = new Codicon('arrow-circle-left', { fontCharacter: '\\\\ebfd' });\nCodicon.arrowCircleRight = new Codicon('arrow-circle-right', { fontCharacter: '\\\\ebfe' });\nCodicon.arrowCircleUp = new Codicon('arrow-circle-up', { fontCharacter: '\\\\ebff' });\n// derived icons, that could become separate icons\nCodicon.dialogError = new Codicon('dialog-error', Codicon.error.definition);\nCodicon.dialogWarning = new Codicon('dialog-warning', Codicon.warning.definition);\nCodicon.dialogInfo = new Codicon('dialog-info', Codicon.info.definition);\nCodicon.dialogClose = new Codicon('dialog-close', Codicon.close.definition);\nCodicon.treeItemExpanded = new Codicon('tree-item-expanded', Codicon.chevronDown.definition); // collapsed is done with rotation\nCodicon.treeFilterOnTypeOn = new Codicon('tree-filter-on-type-on', Codicon.listFilter.definition);\nCodicon.treeFilterOnTypeOff = new Codicon('tree-filter-on-type-off', Codicon.listSelection.definition);\nCodicon.treeFilterClear = new Codicon('tree-filter-clear', Codicon.close.definition);\nCodicon.treeItemLoading = new Codicon('tree-item-loading', Codicon.loading.definition);\nCodicon.menuSelection = new Codicon('menu-selection', Codicon.check.definition);\nCodicon.menuSubmenu = new Codicon('menu-submenu', Codicon.chevronRight.definition);\nCodicon.menuBarMore = new Codicon('menubar-more', Codicon.more.definition);\nCodicon.scrollbarButtonLeft = new Codicon('scrollbar-button-left', Codicon.triangleLeft.definition);\nCodicon.scrollbarButtonRight = new Codicon('scrollbar-button-right', Codicon.triangleRight.definition);\nCodicon.scrollbarButtonUp = new Codicon('scrollbar-button-up', Codicon.triangleUp.definition);\nCodicon.scrollbarButtonDown = new Codicon('scrollbar-button-down', Codicon.triangleDown.definition);\nCodicon.toolBarMore = new Codicon('toolbar-more', Codicon.more.definition);\nCodicon.quickInputBack = new Codicon('quick-input-back', Codicon.arrowLeft.definition);\nexport var CSSIcon;\n(function (CSSIcon) {\n    CSSIcon.iconNameSegment = '[A-Za-z0-9]+';\n    CSSIcon.iconNameExpression = '[A-Za-z0-9-]+';\n    CSSIcon.iconModifierExpression = '~[A-Za-z]+';\n    CSSIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n    const cssIconIdRegex = new RegExp(`^(${CSSIcon.iconNameExpression})(${CSSIcon.iconModifierExpression})?$`);\n    function asClassNameArray(icon) {\n        if (icon instanceof Codicon) {\n            return ['codicon', 'codicon-' + icon.id];\n        }\n        const match = cssIconIdRegex.exec(icon.id);\n        if (!match) {\n            return asClassNameArray(Codicon.error);\n        }\n        let [, id, modifier] = match;\n        const classNames = ['codicon', 'codicon-' + id];\n        if (modifier) {\n            classNames.push('codicon-modifier-' + modifier.substr(1));\n        }\n        return classNames;\n    }\n    CSSIcon.asClassNameArray = asClassNameArray;\n    function asClassName(icon) {\n        return asClassNameArray(icon).join(' ');\n    }\n    CSSIcon.asClassName = asClassName;\n    function asCSSSelector(icon) {\n        return '.' + asClassNameArray(icon).join('.');\n    }\n    CSSIcon.asCSSSelector = asCSSSelector;\n})(CSSIcon || (CSSIcon = {}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value, message) {\n    if (!value) {\n        throw new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n    }\n}\n", "/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    return Array.isArray(array);\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    let result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST\"] = \"hc\";\n})(ColorScheme || (ColorScheme = {}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        let [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        var _a, _b;\n        return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n    }\n    ThemeIcon.isEqual = isEqual;\n    function asThemeIcon(codicon, color) {\n        return { id: codicon.id, color: color ? themeColorFromId(color) : undefined };\n    }\n    ThemeIcon.asThemeIcon = asThemeIcon;\n    ThemeIcon.asClassNameArray = CSSIcon.asClassNameArray;\n    ThemeIcon.asClassName = CSSIcon.asClassName;\n    ThemeIcon.asCSSSelector = CSSIcon.asCSSSelector;\n})(ThemeIcon || (ThemeIcon = {}));\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST: return 'hc-black';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nlet themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from './event.js';\nimport { Disposable } from './lifecycle.js';\nimport * as nls from '../../nls.js';\nexport class Action extends Disposable {\n    constructor(id, label = '', cssClass = '', enabled = true, actionCallback) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._enabled = true;\n        this._id = id;\n        this._label = label;\n        this._cssClass = cssClass;\n        this._enabled = enabled;\n        this._actionCallback = actionCallback;\n    }\n    get id() {\n        return this._id;\n    }\n    get label() {\n        return this._label;\n    }\n    set label(value) {\n        this._setLabel(value);\n    }\n    _setLabel(value) {\n        if (this._label !== value) {\n            this._label = value;\n            this._onDidChange.fire({ label: value });\n        }\n    }\n    get tooltip() {\n        return this._tooltip || '';\n    }\n    set tooltip(value) {\n        this._setTooltip(value);\n    }\n    _setTooltip(value) {\n        if (this._tooltip !== value) {\n            this._tooltip = value;\n            this._onDidChange.fire({ tooltip: value });\n        }\n    }\n    get class() {\n        return this._cssClass;\n    }\n    set class(value) {\n        this._setClass(value);\n    }\n    _setClass(value) {\n        if (this._cssClass !== value) {\n            this._cssClass = value;\n            this._onDidChange.fire({ class: value });\n        }\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._setEnabled(value);\n    }\n    _setEnabled(value) {\n        if (this._enabled !== value) {\n            this._enabled = value;\n            this._onDidChange.fire({ enabled: value });\n        }\n    }\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        this._setChecked(value);\n    }\n    _setChecked(value) {\n        if (this._checked !== value) {\n            this._checked = value;\n            this._onDidChange.fire({ checked: value });\n        }\n    }\n    run(event, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._actionCallback) {\n                yield this._actionCallback(event);\n            }\n        });\n    }\n}\nexport class ActionRunner extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._onBeforeRun = this._register(new Emitter());\n        this.onBeforeRun = this._onBeforeRun.event;\n        this._onDidRun = this._register(new Emitter());\n        this.onDidRun = this._onDidRun.event;\n    }\n    run(action, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!action.enabled) {\n                return;\n            }\n            this._onBeforeRun.fire({ action });\n            let error = undefined;\n            try {\n                yield this.runAction(action, context);\n            }\n            catch (e) {\n                error = e;\n            }\n            this._onDidRun.fire({ action, error });\n        });\n    }\n    runAction(action, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield action.run(context);\n        });\n    }\n}\nexport class Separator extends Action {\n    constructor(label) {\n        super(Separator.ID, label, label ? 'separator text' : 'separator');\n        this.checked = false;\n        this.enabled = false;\n    }\n}\nSeparator.ID = 'vs.actions.separator';\nexport class SubmenuAction {\n    constructor(id, label, actions, cssClass) {\n        this.tooltip = '';\n        this.enabled = true;\n        this.checked = undefined;\n        this.id = id;\n        this.label = label;\n        this.class = cssClass;\n        this._actions = actions;\n    }\n    get actions() { return this._actions; }\n    dispose() {\n        // there is NOTHING to dispose and the SubmenuAction should\n        // never have anything to dispose as it is a convenience type\n        // to bridge into the rendering world.\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () { });\n    }\n}\nexport class EmptySubmenuAction extends Action {\n    constructor() {\n        super(EmptySubmenuAction.ID, nls.localize('submenu.empty', '(empty)'), undefined, false);\n    }\n}\nEmptySubmenuAction.ID = 'vs.actions.empty';\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { validateConstraints } from '../../../base/common/types.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ICommandService = createDecorator('commandService');\nexport const CommandsRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._onDidRegisterCommand = new Emitter();\n        this.onDidRegisterCommand = this._onDidRegisterCommand.event;\n    }\n    registerCommand(idOrCommand, handler) {\n        if (!idOrCommand) {\n            throw new Error(`invalid command`);\n        }\n        if (typeof idOrCommand === 'string') {\n            if (!handler) {\n                throw new Error(`invalid command`);\n            }\n            return this.registerCommand({ id: idOrCommand, handler });\n        }\n        // add argument validation if rich command metadata is provided\n        if (idOrCommand.description) {\n            const constraints = [];\n            for (let arg of idOrCommand.description.args) {\n                constraints.push(arg.constraint);\n            }\n            const actualHandler = idOrCommand.handler;\n            idOrCommand.handler = function (accessor, ...args) {\n                validateConstraints(args, constraints);\n                return actualHandler(accessor, ...args);\n            };\n        }\n        // find a place to store the command\n        const { id } = idOrCommand;\n        let commands = this._commands.get(id);\n        if (!commands) {\n            commands = new LinkedList();\n            this._commands.set(id, commands);\n        }\n        let removeFn = commands.unshift(idOrCommand);\n        let ret = toDisposable(() => {\n            removeFn();\n            const command = this._commands.get(id);\n            if (command === null || command === void 0 ? void 0 : command.isEmpty()) {\n                this._commands.delete(id);\n            }\n        });\n        // tell the world about this command\n        this._onDidRegisterCommand.fire(id);\n        return ret;\n    }\n    registerCommandAlias(oldId, newId) {\n        return CommandsRegistry.registerCommand(oldId, (accessor, ...args) => accessor.get(ICommandService).executeCommand(newId, ...args));\n    }\n    getCommand(id) {\n        const list = this._commands.get(id);\n        if (!list || list.isEmpty()) {\n            return undefined;\n        }\n        return Iterable.first(list);\n    }\n    getCommands() {\n        const result = new Map();\n        for (const key of this._commands.keys()) {\n            const command = this.getCommand(key);\n            if (command) {\n                result.set(key, command);\n            }\n        }\n        return result;\n    }\n};\nexport const NullCommandService = {\n    _serviceBrand: undefined,\n    onWillExecuteCommand: () => Disposable.None,\n    onDidExecuteCommand: () => Disposable.None,\n    executeCommand() {\n        return Promise.resolve(undefined);\n    }\n};\nCommandsRegistry.registerCommand('noop', () => { });\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { ThemeIcon } from '../../theme/common/themeService.js';\nexport function isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexport class MenuId {\n    constructor(debugName) {\n        this.id = MenuId._idPool++;\n        this._debugName = debugName;\n    }\n}\nMenuId._idPool = 0;\nMenuId.CommandPalette = new MenuId('CommandPalette');\nMenuId.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\nMenuId.DebugCallStackContext = new MenuId('DebugCallStackContext');\nMenuId.DebugConsoleContext = new MenuId('DebugConsoleContext');\nMenuId.DebugVariablesContext = new MenuId('DebugVariablesContext');\nMenuId.DebugWatchContext = new MenuId('DebugWatchContext');\nMenuId.DebugToolBar = new MenuId('DebugToolBar');\nMenuId.EditorContext = new MenuId('EditorContext');\nMenuId.SimpleEditorContext = new MenuId('SimpleEditorContext');\nMenuId.EditorContextCopy = new MenuId('EditorContextCopy');\nMenuId.EditorContextPeek = new MenuId('EditorContextPeek');\nMenuId.EditorTitle = new MenuId('EditorTitle');\nMenuId.EditorTitleRun = new MenuId('EditorTitleRun');\nMenuId.EditorTitleContext = new MenuId('EditorTitleContext');\nMenuId.EmptyEditorGroup = new MenuId('EmptyEditorGroup');\nMenuId.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\nMenuId.ExplorerContext = new MenuId('ExplorerContext');\nMenuId.ExtensionContext = new MenuId('ExtensionContext');\nMenuId.GlobalActivity = new MenuId('GlobalActivity');\nMenuId.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\nMenuId.LayoutControlMenu = new MenuId('LayoutControlMenu');\nMenuId.MenubarMainMenu = new MenuId('MenubarMainMenu');\nMenuId.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\nMenuId.MenubarDebugMenu = new MenuId('MenubarDebugMenu');\nMenuId.MenubarEditMenu = new MenuId('MenubarEditMenu');\nMenuId.MenubarCopy = new MenuId('MenubarCopy');\nMenuId.MenubarFileMenu = new MenuId('MenubarFileMenu');\nMenuId.MenubarGoMenu = new MenuId('MenubarGoMenu');\nMenuId.MenubarHelpMenu = new MenuId('MenubarHelpMenu');\nMenuId.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\nMenuId.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\nMenuId.MenubarPanelAlignmentMenu = new MenuId('MenubarPanelAlignmentMenu');\nMenuId.MenubarPanelPositionMenu = new MenuId('MenubarPanelPositionMenu');\nMenuId.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\nMenuId.MenubarRecentMenu = new MenuId('MenubarRecentMenu');\nMenuId.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\nMenuId.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\nMenuId.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\nMenuId.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\nMenuId.MenubarViewMenu = new MenuId('MenubarViewMenu');\nMenuId.MenubarHomeMenu = new MenuId('MenubarHomeMenu');\nMenuId.OpenEditorsContext = new MenuId('OpenEditorsContext');\nMenuId.ProblemsPanelContext = new MenuId('ProblemsPanelContext');\nMenuId.SCMChangeContext = new MenuId('SCMChangeContext');\nMenuId.SCMResourceContext = new MenuId('SCMResourceContext');\nMenuId.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\nMenuId.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\nMenuId.SCMSourceControl = new MenuId('SCMSourceControl');\nMenuId.SCMTitle = new MenuId('SCMTitle');\nMenuId.SearchContext = new MenuId('SearchContext');\nMenuId.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\nMenuId.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\nMenuId.TestItem = new MenuId('TestItem');\nMenuId.TestItemGutter = new MenuId('TestItemGutter');\nMenuId.TestPeekElement = new MenuId('TestPeekElement');\nMenuId.TestPeekTitle = new MenuId('TestPeekTitle');\nMenuId.TouchBarContext = new MenuId('TouchBarContext');\nMenuId.TitleBarContext = new MenuId('TitleBarContext');\nMenuId.TunnelContext = new MenuId('TunnelContext');\nMenuId.TunnelPrivacy = new MenuId('TunnelPrivacy');\nMenuId.TunnelProtocol = new MenuId('TunnelProtocol');\nMenuId.TunnelPortInline = new MenuId('TunnelInline');\nMenuId.TunnelTitle = new MenuId('TunnelTitle');\nMenuId.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\nMenuId.TunnelOriginInline = new MenuId('TunnelOriginInline');\nMenuId.ViewItemContext = new MenuId('ViewItemContext');\nMenuId.ViewContainerTitle = new MenuId('ViewContainerTitle');\nMenuId.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\nMenuId.ViewTitle = new MenuId('ViewTitle');\nMenuId.ViewTitleContext = new MenuId('ViewTitleContext');\nMenuId.CommentThreadTitle = new MenuId('CommentThreadTitle');\nMenuId.CommentThreadActions = new MenuId('CommentThreadActions');\nMenuId.CommentTitle = new MenuId('CommentTitle');\nMenuId.CommentActions = new MenuId('CommentActions');\nMenuId.InteractiveToolbar = new MenuId('InteractiveToolbar');\nMenuId.InteractiveCellTitle = new MenuId('InteractiveCellTitle');\nMenuId.InteractiveCellExecute = new MenuId('InteractiveCellExecute');\nMenuId.InteractiveInputExecute = new MenuId('InteractiveInputExecute');\nMenuId.NotebookToolbar = new MenuId('NotebookToolbar');\nMenuId.NotebookCellTitle = new MenuId('NotebookCellTitle');\nMenuId.NotebookCellInsert = new MenuId('NotebookCellInsert');\nMenuId.NotebookCellBetween = new MenuId('NotebookCellBetween');\nMenuId.NotebookCellListTop = new MenuId('NotebookCellTop');\nMenuId.NotebookCellExecute = new MenuId('NotebookCellExecute');\nMenuId.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\nMenuId.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\nMenuId.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\nMenuId.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\nMenuId.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\nMenuId.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\nMenuId.BulkEditTitle = new MenuId('BulkEditTitle');\nMenuId.BulkEditContext = new MenuId('BulkEditContext');\nMenuId.TimelineItemContext = new MenuId('TimelineItemContext');\nMenuId.TimelineTitle = new MenuId('TimelineTitle');\nMenuId.TimelineTitleContext = new MenuId('TimelineTitleContext');\nMenuId.AccountsContext = new MenuId('AccountsContext');\nMenuId.PanelTitle = new MenuId('PanelTitle');\nMenuId.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\nMenuId.TerminalInstanceContext = new MenuId('TerminalInstanceContext');\nMenuId.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\nMenuId.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\nMenuId.TerminalTabContext = new MenuId('TerminalTabContext');\nMenuId.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\nMenuId.TerminalInlineTabContext = new MenuId('TerminalInlineTabContext');\nMenuId.WebviewContext = new MenuId('WebviewContext');\nMenuId.InlineCompletionsActions = new MenuId('InlineCompletionsActions');\nMenuId.NewFile = new MenuId('NewFile');\nexport const IMenuService = createDecorator('menuService');\nexport const MenuRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._menuItems = new Map();\n        this._onDidChangeMenu = new Emitter();\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n        this._commandPaletteChangeEvent = {\n            has: id => id === MenuId.CommandPalette\n        };\n    }\n    addCommand(command) {\n        return this.addCommands(Iterable.single(command));\n    }\n    addCommands(commands) {\n        for (const command of commands) {\n            this._commands.set(command.id, command);\n        }\n        this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n        return toDisposable(() => {\n            let didChange = false;\n            for (const command of commands) {\n                didChange = this._commands.delete(command.id) || didChange;\n            }\n            if (didChange) {\n                this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n            }\n        });\n    }\n    getCommand(id) {\n        return this._commands.get(id);\n    }\n    getCommands() {\n        const map = new Map();\n        this._commands.forEach((value, key) => map.set(key, value));\n        return map;\n    }\n    appendMenuItem(id, item) {\n        return this.appendMenuItems(Iterable.single({ id, item }));\n    }\n    appendMenuItems(items) {\n        const changedIds = new Set();\n        const toRemove = new LinkedList();\n        for (const { id, item } of items) {\n            let list = this._menuItems.get(id);\n            if (!list) {\n                list = new LinkedList();\n                this._menuItems.set(id, list);\n            }\n            toRemove.push(list.push(item));\n            changedIds.add(id);\n        }\n        this._onDidChangeMenu.fire(changedIds);\n        return toDisposable(() => {\n            if (toRemove.size > 0) {\n                for (let fn of toRemove) {\n                    fn();\n                }\n                this._onDidChangeMenu.fire(changedIds);\n                toRemove.clear();\n            }\n        });\n    }\n    getMenuItems(id) {\n        let result;\n        if (this._menuItems.has(id)) {\n            result = [...this._menuItems.get(id)];\n        }\n        else {\n            result = [];\n        }\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    }\n    _appendImplicitItems(result) {\n        const set = new Set();\n        for (const item of result) {\n            if (isIMenuItem(item)) {\n                set.add(item.command.id);\n                if (item.alt) {\n                    set.add(item.alt.id);\n                }\n            }\n        }\n        this._commands.forEach((command, id) => {\n            if (!set.has(id)) {\n                result.push({ command });\n            }\n        });\n    }\n};\nexport class SubmenuItemAction extends SubmenuAction {\n    constructor(item, _menuService, _contextKeyService, _options) {\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, [], 'submenu');\n        this.item = item;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._options = _options;\n    }\n    get actions() {\n        const result = [];\n        const menu = this._menuService.createMenu(this.item.submenu, this._contextKeyService);\n        const groups = menu.getActions(this._options);\n        menu.dispose();\n        for (const [, actions] of groups) {\n            if (actions.length > 0) {\n                result.push(...actions);\n                result.push(new Separator());\n            }\n        }\n        if (result.length) {\n            result.pop(); // remove last separator\n        }\n        return result;\n    }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = class MenuItemAction {\n    constructor(item, alt, options, contextKeyService, _commandService) {\n        var _a, _b;\n        this._commandService = _commandService;\n        this.id = item.id;\n        this.label = (options === null || options === void 0 ? void 0 : options.renderShortTitle) && item.shortTitle\n            ? (typeof item.shortTitle === 'string' ? item.shortTitle : item.shortTitle.value)\n            : (typeof item.title === 'string' ? item.title : item.title.value);\n        this.tooltip = (_b = (typeof item.tooltip === 'string' ? item.tooltip : (_a = item.tooltip) === null || _a === void 0 ? void 0 : _a.value)) !== null && _b !== void 0 ? _b : '';\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        this.checked = undefined;\n        if (item.toggled) {\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n            if (this.checked && toggled.tooltip) {\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n            }\n            if (toggled.title) {\n                this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n            }\n        }\n        this.item = item;\n        this.alt = alt ? new MenuItemAction(alt, undefined, options, contextKeyService, _commandService) : undefined;\n        this._options = options;\n        if (ThemeIcon.isThemeIcon(item.icon)) {\n            this.class = CSSIcon.asClassName(item.icon);\n        }\n    }\n    dispose() {\n        // there is NOTHING to dispose and the MenuItemAction should\n        // never have anything to dispose as it is a convenience type\n        // to bridge into the rendering world.\n    }\n    run(...args) {\n        var _a, _b;\n        let runArgs = [];\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.arg) {\n            runArgs = [...runArgs, this._options.arg];\n        }\n        if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.shouldForwardArgs) {\n            runArgs = [...runArgs, ...args];\n        }\n        return this._commandService.executeCommand(this.id, ...runArgs);\n    }\n};\nMenuItemAction = __decorate([\n    __param(3, IContextKeyService),\n    __param(4, ICommandService)\n], MenuItemAction);\nexport { MenuItemAction };\n//#endregion\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n    }\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string') {\n            return path;\n        }\n        if (path.length === 0) {\n            return '';\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : process.cwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    static from(components) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment);\n        _validateUri(result, true);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* Colon */]: '%3A',\n    [47 /* Slash */]: '%2F',\n    [63 /* QuestionMark */]: '%3F',\n    [35 /* Hash */]: '%23',\n    [91 /* OpenSquareBracket */]: '%5B',\n    [93 /* CloseSquareBracket */]: '%5D',\n    [64 /* AtSign */]: '%40',\n    [33 /* ExclamationMark */]: '%21',\n    [36 /* DollarSign */]: '%24',\n    [38 /* Ampersand */]: '%26',\n    [39 /* SingleQuote */]: '%27',\n    [40 /* OpenParen */]: '%28',\n    [41 /* CloseParen */]: '%29',\n    [42 /* Asterisk */]: '%2A',\n    [43 /* Plus */]: '%2B',\n    [44 /* Comma */]: '%2C',\n    [59 /* Semicolon */]: '%3B',\n    [61 /* Equals */]: '%3D',\n    [32 /* Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ICodeEditorService = createDecorator('codeEditorService');\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new position from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    }\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    /**\n     * Test if this position equals other position\n     */\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    /**\n     * Test if position `a` equals position `b`\n     */\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    static compare(a, b) {\n        const aLineNumber = a.lineNumber | 0;\n        const bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            const aColumn = a.column | 0;\n            const bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    /**\n     * Clone this position.\n     */\n    clone() {\n        return new Position(this.lineNumber, this.column);\n    }\n    /**\n     * Convert to a human-readable representation.\n     */\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    static lift(pos) {\n        return new Position(pos.lineNumber, pos.column);\n    }\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const IModelService = createDecorator('modelService');\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ITextModelService = createDecorator('textModelService');\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    const firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    const chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    const ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    const winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    const ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    const shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    const altKey = (keybinding & 512 /* Alt */ ? true : false);\n    const metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    const keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nexport class SimpleKeybinding {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    equals(other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    }\n    isModifierKey() {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    }\n    toChord() {\n        return new ChordKeybinding([this]);\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    }\n}\nexport class ChordKeybinding {\n    constructor(parts) {\n        if (parts.length === 0) {\n            throw illegalArgument(`parts`);\n        }\n        this.parts = parts;\n    }\n}\nexport class ScanCodeBinding {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, scanCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.scanCode = scanCode;\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && (this.scanCode === 157 /* ControlLeft */ || this.scanCode === 161 /* ControlRight */))\n            || (this.shiftKey && (this.scanCode === 158 /* ShiftLeft */ || this.scanCode === 162 /* ShiftRight */))\n            || (this.altKey && (this.scanCode === 159 /* AltLeft */ || this.scanCode === 163 /* AltRight */))\n            || (this.metaKey && (this.scanCode === 160 /* MetaLeft */ || this.scanCode === 164 /* MetaRight */)));\n    }\n}\nexport class ResolvedKeybindingPart {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n}\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport class ResolvedKeybinding {\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createKeybinding } from '../../../base/common/keybindings.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { Registry } from '../../registry/common/platform.js';\nclass KeybindingsRegistryImpl {\n    constructor() {\n        this._coreKeybindings = [];\n        this._extensionKeybindings = [];\n        this._cachedMergedKeybindings = null;\n    }\n    /**\n     * Take current platform into account and reduce to primary & secondary.\n     */\n    static bindToCurrentPlatform(kb) {\n        if (OS === 1 /* Windows */) {\n            if (kb && kb.win) {\n                return kb.win;\n            }\n        }\n        else if (OS === 2 /* Macintosh */) {\n            if (kb && kb.mac) {\n                return kb.mac;\n            }\n        }\n        else {\n            if (kb && kb.linux) {\n                return kb.linux;\n            }\n        }\n        return kb;\n    }\n    registerKeybindingRule(rule) {\n        const actualKb = KeybindingsRegistryImpl.bindToCurrentPlatform(rule);\n        if (actualKb && actualKb.primary) {\n            const kk = createKeybinding(actualKb.primary, OS);\n            if (kk) {\n                this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, 0, rule.when);\n            }\n        }\n        if (actualKb && Array.isArray(actualKb.secondary)) {\n            for (let i = 0, len = actualKb.secondary.length; i < len; i++) {\n                const k = actualKb.secondary[i];\n                const kk = createKeybinding(k, OS);\n                if (kk) {\n                    this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, -i - 1, rule.when);\n                }\n            }\n        }\n    }\n    registerCommandAndKeybindingRule(desc) {\n        this.registerKeybindingRule(desc);\n        CommandsRegistry.registerCommand(desc);\n    }\n    static _mightProduceChar(keyCode) {\n        if (keyCode >= 21 /* Digit0 */ && keyCode <= 30 /* Digit9 */) {\n            return true;\n        }\n        if (keyCode >= 31 /* KeyA */ && keyCode <= 56 /* KeyZ */) {\n            return true;\n        }\n        return (keyCode === 80 /* Semicolon */\n            || keyCode === 81 /* Equal */\n            || keyCode === 82 /* Comma */\n            || keyCode === 83 /* Minus */\n            || keyCode === 84 /* Period */\n            || keyCode === 85 /* Slash */\n            || keyCode === 86 /* Backquote */\n            || keyCode === 110 /* ABNT_C1 */\n            || keyCode === 111 /* ABNT_C2 */\n            || keyCode === 87 /* BracketLeft */\n            || keyCode === 88 /* Backslash */\n            || keyCode === 89 /* BracketRight */\n            || keyCode === 90 /* Quote */\n            || keyCode === 91 /* OEM_8 */\n            || keyCode === 92 /* IntlBackslash */);\n    }\n    _assertNoCtrlAlt(keybinding, commandId) {\n        if (keybinding.ctrlKey && keybinding.altKey && !keybinding.metaKey) {\n            if (KeybindingsRegistryImpl._mightProduceChar(keybinding.keyCode)) {\n                console.warn('Ctrl+Alt+ keybindings should not be used by default under Windows. Offender: ', keybinding, ' for ', commandId);\n            }\n        }\n    }\n    _registerDefaultKeybinding(keybinding, commandId, commandArgs, weight1, weight2, when) {\n        if (OS === 1 /* Windows */) {\n            this._assertNoCtrlAlt(keybinding.parts[0], commandId);\n        }\n        this._coreKeybindings.push({\n            keybinding: keybinding.parts,\n            command: commandId,\n            commandArgs: commandArgs,\n            when: when,\n            weight1: weight1,\n            weight2: weight2,\n            extensionId: null,\n            isBuiltinExtension: false\n        });\n        this._cachedMergedKeybindings = null;\n    }\n    getDefaultKeybindings() {\n        if (!this._cachedMergedKeybindings) {\n            this._cachedMergedKeybindings = [].concat(this._coreKeybindings).concat(this._extensionKeybindings);\n            this._cachedMergedKeybindings.sort(sorter);\n        }\n        return this._cachedMergedKeybindings.slice(0);\n    }\n}\nexport const KeybindingsRegistry = new KeybindingsRegistryImpl();\n// Define extension point ids\nexport const Extensions = {\n    EditorModes: 'platform.keybindingsRegistry'\n};\nRegistry.add(Extensions.EditorModes, KeybindingsRegistry);\nfunction sorter(a, b) {\n    if (a.weight1 !== b.weight1) {\n        return a.weight1 - b.weight1;\n    }\n    if (a.command < b.command) {\n        return -1;\n    }\n    if (a.command > b.command) {\n        return 1;\n    }\n    return a.weight2 - b.weight2;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ITelemetryService = createDecorator('telemetryService');\n", "import { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ILogService = createDecorator('logService');\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\n    LogLevel[LogLevel[\"Off\"] = 6] = \"Off\";\n})(LogLevel || (LogLevel = {}));\nexport const DEFAULT_LOG_LEVEL = LogLevel.Info;\nexport class AbstractLogger extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.level = DEFAULT_LOG_LEVEL;\n        this._onDidChangeLogLevel = this._register(new Emitter());\n    }\n    setLevel(level) {\n        if (this.level !== level) {\n            this.level = level;\n            this._onDidChangeLogLevel.fire(this.level);\n        }\n    }\n    getLevel() {\n        return this.level;\n    }\n}\nexport class ConsoleLogger extends AbstractLogger {\n    constructor(logLevel = DEFAULT_LOG_LEVEL) {\n        super();\n        this.setLevel(logLevel);\n    }\n    trace(message, ...args) {\n        if (this.getLevel() <= LogLevel.Trace) {\n            console.log('%cTRACE', 'color: #888', message, ...args);\n        }\n    }\n    debug(message, ...args) {\n        if (this.getLevel() <= LogLevel.Debug) {\n            console.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n        }\n    }\n    info(message, ...args) {\n        if (this.getLevel() <= LogLevel.Info) {\n            console.log('%c INFO', 'color: #33f', message, ...args);\n        }\n    }\n    error(message, ...args) {\n        if (this.getLevel() <= LogLevel.Error) {\n            console.log('%c  ERR', 'color: #f33', message, ...args);\n        }\n    }\n    dispose() {\n        // noop\n    }\n}\nexport class LogService extends Disposable {\n    constructor(logger) {\n        super();\n        this.logger = logger;\n        this._register(logger);\n    }\n    getLevel() {\n        return this.logger.getLevel();\n    }\n    trace(message, ...args) {\n        this.logger.trace(message, ...args);\n    }\n    debug(message, ...args) {\n        this.logger.debug(message, ...args);\n    }\n    info(message, ...args) {\n        this.logger.info(message, ...args);\n    }\n    error(message, ...args) {\n        this.logger.error(message, ...args);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/model.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuId, MenuRegistry } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { withNullAsUndefined, assertType } from '../../base/common/types.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nexport class Command {\n    constructor(opts) {\n        this.id = opts.id;\n        this.precondition = opts.precondition;\n        this._kbOpts = opts.kbOpts;\n        this._menuOpts = opts.menuOpts;\n        this._description = opts.description;\n    }\n    register() {\n        if (Array.isArray(this._menuOpts)) {\n            this._menuOpts.forEach(this._registerMenuItem, this);\n        }\n        else if (this._menuOpts) {\n            this._registerMenuItem(this._menuOpts);\n        }\n        if (this._kbOpts) {\n            const kbOptsArr = Array.isArray(this._kbOpts) ? this._kbOpts : [this._kbOpts];\n            for (const kbOpts of kbOptsArr) {\n                let kbWhen = kbOpts.kbExpr;\n                if (this.precondition) {\n                    if (kbWhen) {\n                        kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n                    }\n                    else {\n                        kbWhen = this.precondition;\n                    }\n                }\n                const desc = {\n                    id: this.id,\n                    weight: kbOpts.weight,\n                    args: kbOpts.args,\n                    when: kbWhen,\n                    primary: kbOpts.primary,\n                    secondary: kbOpts.secondary,\n                    win: kbOpts.win,\n                    linux: kbOpts.linux,\n                    mac: kbOpts.mac,\n                };\n                KeybindingsRegistry.registerKeybindingRule(desc);\n            }\n        }\n        CommandsRegistry.registerCommand({\n            id: this.id,\n            handler: (accessor, args) => this.runCommand(accessor, args),\n            description: this._description\n        });\n    }\n    _registerMenuItem(item) {\n        MenuRegistry.appendMenuItem(item.menuId, {\n            group: item.group,\n            command: {\n                id: this.id,\n                title: item.title,\n                icon: item.icon,\n                precondition: this.precondition\n            },\n            when: item.when,\n            order: item.order\n        });\n    }\n}\nexport class MultiCommand extends Command {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, name, implementation) {\n        this._implementations.push({ priority, name, implementation });\n        this._implementations.sort((a, b) => b.priority - a.priority);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i].implementation === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    runCommand(accessor, args) {\n        const logService = accessor.get(ILogService);\n        logService.trace(`Executing Command '${this.id}' which has ${this._implementations.length} bound.`);\n        for (const impl of this._implementations) {\n            const result = impl.implementation(accessor, args);\n            if (result) {\n                logService.trace(`Command '${this.id}' was handled by '${impl.name}'.`);\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n        logService.trace(`The Command '${this.id}' was not handled by any implementation.`);\n    }\n}\n//#endregion\n/**\n * A command that delegates to another command's implementation.\n *\n * This lets different commands be registered but share the same implementation\n */\nexport class ProxyCommand extends Command {\n    constructor(command, opts) {\n        super(opts);\n        this.command = command;\n    }\n    runCommand(accessor, args) {\n        return this.command.runCommand(accessor, args);\n    }\n}\nexport class EditorCommand extends Command {\n    /**\n     * Create a command class that is bound to a certain editor contribution.\n     */\n    static bindToContribution(controllerGetter) {\n        return class EditorControllerCommandImpl extends EditorCommand {\n            constructor(opts) {\n                super(opts);\n                this._callback = opts.handler;\n            }\n            runEditorCommand(accessor, editor, args) {\n                const controller = controllerGetter(editor);\n                if (controller) {\n                    this._callback(controller, args);\n                }\n            }\n        };\n    }\n    runCommand(accessor, args) {\n        const codeEditorService = accessor.get(ICodeEditorService);\n        // Find the editor with text focus or active\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        return editor.invokeWithinContext((editorAccessor) => {\n            const kbService = editorAccessor.get(IContextKeyService);\n            if (!kbService.contextMatchesRules(withNullAsUndefined(this.precondition))) {\n                // precondition does not hold\n                return;\n            }\n            return this.runEditorCommand(editorAccessor, editor, args);\n        });\n    }\n}\nexport class EditorAction extends EditorCommand {\n    constructor(opts) {\n        super(EditorAction.convertOptions(opts));\n        this.label = opts.label;\n        this.alias = opts.alias;\n    }\n    static convertOptions(opts) {\n        let menuOpts;\n        if (Array.isArray(opts.menuOpts)) {\n            menuOpts = opts.menuOpts;\n        }\n        else if (opts.menuOpts) {\n            menuOpts = [opts.menuOpts];\n        }\n        else {\n            menuOpts = [];\n        }\n        function withDefaults(item) {\n            if (!item.menuId) {\n                item.menuId = MenuId.EditorContext;\n            }\n            if (!item.title) {\n                item.title = opts.label;\n            }\n            item.when = ContextKeyExpr.and(opts.precondition, item.when);\n            return item;\n        }\n        if (Array.isArray(opts.contextMenuOpts)) {\n            menuOpts.push(...opts.contextMenuOpts.map(withDefaults));\n        }\n        else if (opts.contextMenuOpts) {\n            menuOpts.push(withDefaults(opts.contextMenuOpts));\n        }\n        opts.menuOpts = menuOpts;\n        return opts;\n    }\n    runEditorCommand(accessor, editor, args) {\n        this.reportTelemetry(accessor, editor);\n        return this.run(accessor, editor, args || {});\n    }\n    reportTelemetry(accessor, editor) {\n        accessor.get(ITelemetryService).publicLog2('editorActionInvoked', { name: this.label, id: this.id });\n    }\n}\nexport class MultiEditorAction extends EditorAction {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, implementation) {\n        this._implementations.push([priority, implementation]);\n        this._implementations.sort((a, b) => b[0] - a[0]);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i][1] === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    run(accessor, editor, args) {\n        for (const impl of this._implementations) {\n            const result = impl[1](accessor, editor, args);\n            if (result) {\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n    }\n}\n//#endregion\n// --- Registration of commands and actions\nexport function registerModelAndPositionCommand(id, handler) {\n    CommandsRegistry.registerCommand(id, function (accessor, ...args) {\n        const instaService = accessor.get(IInstantiationService);\n        const [resource, position] = args;\n        assertType(URI.isUri(resource));\n        assertType(Position.isIPosition(position));\n        const model = accessor.get(IModelService).getModel(resource);\n        if (model) {\n            const editorPosition = Position.lift(position);\n            return instaService.invokeFunction(handler, model, editorPosition, ...args.slice(2));\n        }\n        return accessor.get(ITextModelService).createModelReference(resource).then(reference => {\n            return new Promise((resolve, reject) => {\n                try {\n                    const result = instaService.invokeFunction(handler, reference.object.textEditorModel, Position.lift(position), args.slice(2));\n                    resolve(result);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }).finally(() => {\n                reference.dispose();\n            });\n        });\n    });\n}\nexport function registerEditorCommand(editorCommand) {\n    EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n    return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n    const action = new ctor();\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerMultiEditorAction(action) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\nexport function registerEditorContribution(id, ctor) {\n    EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor);\n}\nexport var EditorExtensionsRegistry;\n(function (EditorExtensionsRegistry) {\n    function getEditorCommand(commandId) {\n        return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n    }\n    EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n    function getEditorActions() {\n        return EditorContributionRegistry.INSTANCE.getEditorActions();\n    }\n    EditorExtensionsRegistry.getEditorActions = getEditorActions;\n    function getEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions();\n    }\n    EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n    function getSomeEditorContributions(ids) {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(c => ids.indexOf(c.id) >= 0);\n    }\n    EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n    function getDiffEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n    }\n    EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\n// Editor extension points\nconst Extensions = {\n    EditorCommonContributions: 'editor.contributions'\n};\nclass EditorContributionRegistry {\n    constructor() {\n        this.editorContributions = [];\n        this.diffEditorContributions = [];\n        this.editorActions = [];\n        this.editorCommands = Object.create(null);\n    }\n    registerEditorContribution(id, ctor) {\n        this.editorContributions.push({ id, ctor: ctor });\n    }\n    getEditorContributions() {\n        return this.editorContributions.slice(0);\n    }\n    getDiffEditorContributions() {\n        return this.diffEditorContributions.slice(0);\n    }\n    registerEditorAction(action) {\n        action.register();\n        this.editorActions.push(action);\n    }\n    getEditorActions() {\n        return this.editorActions.slice(0);\n    }\n    registerEditorCommand(editorCommand) {\n        editorCommand.register();\n        this.editorCommands[editorCommand.id] = editorCommand;\n    }\n    getEditorCommand(commandId) {\n        return (this.editorCommands[commandId] || null);\n    }\n}\nEditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport const UndoCommand = registerCommand(new MultiCommand({\n    id: 'undo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* EditorCore */,\n        primary: 2048 /* CtrlCmd */ | 56 /* KeyZ */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miUndo', comment: ['&& denotes a mnemonic'] }, \"&&Undo\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('undo', \"Undo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(UndoCommand, { id: 'default:undo', precondition: undefined }));\nexport const RedoCommand = registerCommand(new MultiCommand({\n    id: 'redo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* EditorCore */,\n        primary: 2048 /* CtrlCmd */ | 55 /* KeyY */,\n        secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 56 /* KeyZ */],\n        mac: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 56 /* KeyZ */ }\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miRedo', comment: ['&& denotes a mnemonic'] }, \"&&Redo\"),\n            order: 2\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('redo', \"Redo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(RedoCommand, { id: 'default:redo', precondition: undefined }));\nexport const SelectAllCommand = registerCommand(new MultiCommand({\n    id: 'editor.action.selectAll',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* EditorCore */,\n        kbExpr: null,\n        primary: 2048 /* CtrlCmd */ | 31 /* KeyA */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarSelectionMenu,\n            group: '1_basic',\n            title: nls.localize({ key: 'miSelectAll', comment: ['&& denotes a mnemonic'] }, \"&&Select All\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('selectAll', \"Select All\"),\n            order: 1\n        }]\n}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { RawContextKey } from '../../platform/contextkey/common/contextkey.js';\nexport var EditorContextKeys;\n(function (EditorContextKeys) {\n    EditorContextKeys.editorSimpleInput = new RawContextKey('editorSimpleInput', false, true);\n    /**\n     * A context key that is set when the editor's text has focus (cursor is blinking).\n     * Is false when focus is in simple editor widgets (repl input, scm commit input).\n     */\n    EditorContextKeys.editorTextFocus = new RawContextKey('editorTextFocus', false, nls.localize('editorTextFocus', \"Whether the editor text has focus (cursor is blinking)\"));\n    /**\n     * A context key that is set when the editor's text or an editor's widget has focus.\n     */\n    EditorContextKeys.focus = new RawContextKey('editorFocus', false, nls.localize('editorFocus', \"Whether the editor or an editor widget has focus (e.g. focus is in the find widget)\"));\n    /**\n     * A context key that is set when any editor input has focus (regular editor, repl input...).\n     */\n    EditorContextKeys.textInputFocus = new RawContextKey('textInputFocus', false, nls.localize('textInputFocus', \"Whether an editor or a rich text input has focus (cursor is blinking)\"));\n    EditorContextKeys.readOnly = new RawContextKey('editorReadonly', false, nls.localize('editorReadonly', \"Whether the editor is read only\"));\n    EditorContextKeys.inDiffEditor = new RawContextKey('inDiffEditor', false, nls.localize('inDiffEditor', \"Whether the context is a diff editor\"));\n    EditorContextKeys.columnSelection = new RawContextKey('editorColumnSelection', false, nls.localize('editorColumnSelection', \"Whether `editor.columnSelection` is enabled\"));\n    EditorContextKeys.writable = EditorContextKeys.readOnly.toNegated();\n    EditorContextKeys.hasNonEmptySelection = new RawContextKey('editorHasSelection', false, nls.localize('editorHasSelection', \"Whether the editor has text selected\"));\n    EditorContextKeys.hasOnlyEmptySelection = EditorContextKeys.hasNonEmptySelection.toNegated();\n    EditorContextKeys.hasMultipleSelections = new RawContextKey('editorHasMultipleSelections', false, nls.localize('editorHasMultipleSelections', \"Whether the editor has multiple selections\"));\n    EditorContextKeys.hasSingleSelection = EditorContextKeys.hasMultipleSelections.toNegated();\n    EditorContextKeys.tabMovesFocus = new RawContextKey('editorTabMovesFocus', false, nls.localize('editorTabMovesFocus', \"Whether `Tab` will move focus out of the editor\"));\n    EditorContextKeys.tabDoesNotMoveFocus = EditorContextKeys.tabMovesFocus.toNegated();\n    EditorContextKeys.isInWalkThroughSnippet = new RawContextKey('isInEmbeddedEditor', false, true);\n    EditorContextKeys.canUndo = new RawContextKey('canUndo', false, true);\n    EditorContextKeys.canRedo = new RawContextKey('canRedo', false, true);\n    EditorContextKeys.hoverVisible = new RawContextKey('editorHoverVisible', false, nls.localize('editorHoverVisible', \"Whether the editor hover is visible\"));\n    /**\n     * A context key that is set when an editor is part of a larger editor, like notebooks or\n     * (future) a diff editor\n     */\n    EditorContextKeys.inCompositeEditor = new RawContextKey('inCompositeEditor', undefined, nls.localize('inCompositeEditor', \"Whether the editor is part of a larger editor (e.g. notebooks)\"));\n    EditorContextKeys.notInCompositeEditor = EditorContextKeys.inCompositeEditor.toNegated();\n    // -- mode context keys\n    EditorContextKeys.languageId = new RawContextKey('editorLangId', '', nls.localize('editorLangId', \"The language identifier of the editor\"));\n    EditorContextKeys.hasCompletionItemProvider = new RawContextKey('editorHasCompletionItemProvider', false, nls.localize('editorHasCompletionItemProvider', \"Whether the editor has a completion item provider\"));\n    EditorContextKeys.hasCodeActionsProvider = new RawContextKey('editorHasCodeActionsProvider', false, nls.localize('editorHasCodeActionsProvider', \"Whether the editor has a code actions provider\"));\n    EditorContextKeys.hasCodeLensProvider = new RawContextKey('editorHasCodeLensProvider', false, nls.localize('editorHasCodeLensProvider', \"Whether the editor has a code lens provider\"));\n    EditorContextKeys.hasDefinitionProvider = new RawContextKey('editorHasDefinitionProvider', false, nls.localize('editorHasDefinitionProvider', \"Whether the editor has a definition provider\"));\n    EditorContextKeys.hasDeclarationProvider = new RawContextKey('editorHasDeclarationProvider', false, nls.localize('editorHasDeclarationProvider', \"Whether the editor has a declaration provider\"));\n    EditorContextKeys.hasImplementationProvider = new RawContextKey('editorHasImplementationProvider', false, nls.localize('editorHasImplementationProvider', \"Whether the editor has an implementation provider\"));\n    EditorContextKeys.hasTypeDefinitionProvider = new RawContextKey('editorHasTypeDefinitionProvider', false, nls.localize('editorHasTypeDefinitionProvider', \"Whether the editor has a type definition provider\"));\n    EditorContextKeys.hasHoverProvider = new RawContextKey('editorHasHoverProvider', false, nls.localize('editorHasHoverProvider', \"Whether the editor has a hover provider\"));\n    EditorContextKeys.hasDocumentHighlightProvider = new RawContextKey('editorHasDocumentHighlightProvider', false, nls.localize('editorHasDocumentHighlightProvider', \"Whether the editor has a document highlight provider\"));\n    EditorContextKeys.hasDocumentSymbolProvider = new RawContextKey('editorHasDocumentSymbolProvider', false, nls.localize('editorHasDocumentSymbolProvider', \"Whether the editor has a document symbol provider\"));\n    EditorContextKeys.hasReferenceProvider = new RawContextKey('editorHasReferenceProvider', false, nls.localize('editorHasReferenceProvider', \"Whether the editor has a reference provider\"));\n    EditorContextKeys.hasRenameProvider = new RawContextKey('editorHasRenameProvider', false, nls.localize('editorHasRenameProvider', \"Whether the editor has a rename provider\"));\n    EditorContextKeys.hasSignatureHelpProvider = new RawContextKey('editorHasSignatureHelpProvider', false, nls.localize('editorHasSignatureHelpProvider', \"Whether the editor has a signature help provider\"));\n    EditorContextKeys.hasInlayHintsProvider = new RawContextKey('editorHasInlayHintsProvider', false, nls.localize('editorHasInlayHintsProvider', \"Whether the editor has an inline hints provider\"));\n    // -- mode context keys: formatting\n    EditorContextKeys.hasDocumentFormattingProvider = new RawContextKey('editorHasDocumentFormattingProvider', false, nls.localize('editorHasDocumentFormattingProvider', \"Whether the editor has a document formatting provider\"));\n    EditorContextKeys.hasDocumentSelectionFormattingProvider = new RawContextKey('editorHasDocumentSelectionFormattingProvider', false, nls.localize('editorHasDocumentSelectionFormattingProvider', \"Whether the editor has a document selection formatting provider\"));\n    EditorContextKeys.hasMultipleDocumentFormattingProvider = new RawContextKey('editorHasMultipleDocumentFormattingProvider', false, nls.localize('editorHasMultipleDocumentFormattingProvider', \"Whether the editor has multiple document formatting providers\"));\n    EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider = new RawContextKey('editorHasMultipleDocumentSelectionFormattingProvider', false, nls.localize('editorHasMultipleDocumentSelectionFormattingProvider', \"Whether the editor has multiple document selection formatting providers\"));\n})(EditorContextKeys || (EditorContextKeys = {}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n    const _error = 'error';\n    const _warning = 'warning';\n    const _warn = 'warn';\n    const _info = 'info';\n    const _ignore = 'ignore';\n    /**\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\n     * and falls back to ignore.\n     */\n    function fromValue(value) {\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (strings.equalsIgnoreCase(_error, value)) {\n            return Severity.Error;\n        }\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n            return Severity.Warning;\n        }\n        if (strings.equalsIgnoreCase(_info, value)) {\n            return Severity.Info;\n        }\n        return Severity.Ignore;\n    }\n    Severity.fromValue = fromValue;\n    function toString(severity) {\n        switch (severity) {\n            case Severity.Error: return _error;\n            case Severity.Warning: return _warning;\n            case Severity.Info: return _info;\n            default: return _ignore;\n        }\n    }\n    Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;\n", "import BaseSeverity from '../../../base/common/severity.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport var Severity = BaseSeverity;\nexport const INotificationService = createDecorator('notificationService');\nexport class NoOpNotification {\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IContextViewService = createDecorator('contextViewService');\nexport const IContextMenuService = createDecorator('contextMenuService');\n", "import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IClipboardService = createDecorator('clipboardService');\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IKeybindingService = createDecorator('keybindingService');\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ThrottledDelayer } from '../../../common/async.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../common/types.js';\nvar StorageState;\n(function (StorageState) {\n    StorageState[StorageState[\"None\"] = 0] = \"None\";\n    StorageState[StorageState[\"Initialized\"] = 1] = \"Initialized\";\n    StorageState[StorageState[\"Closed\"] = 2] = \"Closed\";\n})(StorageState || (StorageState = {}));\nexport class Storage extends Disposable {\n    constructor(database, options = Object.create(null)) {\n        super();\n        this.database = database;\n        this.options = options;\n        this._onDidChangeStorage = this._register(new Emitter());\n        this.onDidChangeStorage = this._onDidChangeStorage.event;\n        this.state = StorageState.None;\n        this.cache = new Map();\n        this.flushDelayer = new ThrottledDelayer(Storage.DEFAULT_FLUSH_DELAY);\n        this.pendingDeletes = new Set();\n        this.pendingInserts = new Map();\n        this.whenFlushedCallbacks = [];\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.database.onDidChangeItemsExternal(e => this.onDidChangeItemsExternal(e)));\n    }\n    onDidChangeItemsExternal(e) {\n        var _a, _b;\n        // items that change external require us to update our\n        // caches with the values. we just accept the value and\n        // emit an event if there is a change.\n        (_a = e.changed) === null || _a === void 0 ? void 0 : _a.forEach((value, key) => this.accept(key, value));\n        (_b = e.deleted) === null || _b === void 0 ? void 0 : _b.forEach(key => this.accept(key, undefined));\n    }\n    accept(key, value) {\n        if (this.state === StorageState.Closed) {\n            return; // Return early if we are already closed\n        }\n        let changed = false;\n        // Item got removed, check for deletion\n        if (isUndefinedOrNull(value)) {\n            changed = this.cache.delete(key);\n        }\n        // Item got updated, check for change\n        else {\n            const currentValue = this.cache.get(key);\n            if (currentValue !== value) {\n                this.cache.set(key, value);\n                changed = true;\n            }\n        }\n        // Signal to outside listeners\n        if (changed) {\n            this._onDidChangeStorage.fire(key);\n        }\n    }\n    get(key, fallbackValue) {\n        const value = this.cache.get(key);\n        if (isUndefinedOrNull(value)) {\n            return fallbackValue;\n        }\n        return value;\n    }\n    getBoolean(key, fallbackValue) {\n        const value = this.get(key);\n        if (isUndefinedOrNull(value)) {\n            return fallbackValue;\n        }\n        return value === 'true';\n    }\n    getNumber(key, fallbackValue) {\n        const value = this.get(key);\n        if (isUndefinedOrNull(value)) {\n            return fallbackValue;\n        }\n        return parseInt(value, 10);\n    }\n    set(key, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === StorageState.Closed) {\n                return; // Return early if we are already closed\n            }\n            // We remove the key for undefined/null values\n            if (isUndefinedOrNull(value)) {\n                return this.delete(key);\n            }\n            // Otherwise, convert to String and store\n            const valueStr = String(value);\n            // Return early if value already set\n            const currentValue = this.cache.get(key);\n            if (currentValue === valueStr) {\n                return;\n            }\n            // Update in cache and pending\n            this.cache.set(key, valueStr);\n            this.pendingInserts.set(key, valueStr);\n            this.pendingDeletes.delete(key);\n            // Event\n            this._onDidChangeStorage.fire(key);\n            // Accumulate work by scheduling after timeout\n            return this.doFlush();\n        });\n    }\n    delete(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === StorageState.Closed) {\n                return; // Return early if we are already closed\n            }\n            // Remove from cache and add to pending\n            const wasDeleted = this.cache.delete(key);\n            if (!wasDeleted) {\n                return; // Return early if value already deleted\n            }\n            if (!this.pendingDeletes.has(key)) {\n                this.pendingDeletes.add(key);\n            }\n            this.pendingInserts.delete(key);\n            // Event\n            this._onDidChangeStorage.fire(key);\n            // Accumulate work by scheduling after timeout\n            return this.doFlush();\n        });\n    }\n    get hasPending() {\n        return this.pendingInserts.size > 0 || this.pendingDeletes.size > 0;\n    }\n    flushPending() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hasPending) {\n                return; // return early if nothing to do\n            }\n            // Get pending data\n            const updateRequest = { insert: this.pendingInserts, delete: this.pendingDeletes };\n            // Reset pending data for next run\n            this.pendingDeletes = new Set();\n            this.pendingInserts = new Map();\n            // Update in storage and release any\n            // waiters we have once done\n            return this.database.updateItems(updateRequest).finally(() => {\n                var _a;\n                if (!this.hasPending) {\n                    while (this.whenFlushedCallbacks.length) {\n                        (_a = this.whenFlushedCallbacks.pop()) === null || _a === void 0 ? void 0 : _a();\n                    }\n                }\n            });\n        });\n    }\n    doFlush(delay) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.flushDelayer.trigger(() => this.flushPending(), delay);\n        });\n    }\n    dispose() {\n        this.flushDelayer.dispose();\n        super.dispose();\n    }\n}\nStorage.DEFAULT_FLUSH_DELAY = 100;\nexport class InMemoryStorageDatabase {\n    constructor() {\n        this.onDidChangeItemsExternal = Event.None;\n        this.items = new Map();\n    }\n    updateItems(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (request.insert) {\n                request.insert.forEach((value, key) => this.items.set(key, value));\n            }\n            if (request.delete) {\n                request.delete.forEach(key => this.items.delete(key));\n            }\n        });\n    }\n}\n", "import { Emitter, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nconst TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n    /**\n     * No specific reason to save state.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * A hint that the workbench is about to shutdown.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport class AbstractStorageService extends Disposable {\n    constructor(options = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n        super();\n        this.options = options;\n        this._onDidChangeValue = this._register(new PauseableEmitter());\n        this._onDidChangeTarget = this._register(new PauseableEmitter());\n        this._onWillSaveState = this._register(new Emitter());\n        this.onWillSaveState = this._onWillSaveState.event;\n        this._workspaceKeyTargets = undefined;\n        this._globalKeyTargets = undefined;\n    }\n    emitDidChangeValue(scope, key) {\n        // Specially handle `TARGET_KEY`\n        if (key === TARGET_KEY) {\n            // Clear our cached version which is now out of date\n            if (scope === 0 /* GLOBAL */) {\n                this._globalKeyTargets = undefined;\n            }\n            else if (scope === 1 /* WORKSPACE */) {\n                this._workspaceKeyTargets = undefined;\n            }\n            // Emit as `didChangeTarget` event\n            this._onDidChangeTarget.fire({ scope });\n        }\n        // Emit any other key to outside\n        else {\n            this._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n        }\n    }\n    get(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.get(key, fallbackValue);\n    }\n    getBoolean(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getBoolean(key, fallbackValue);\n    }\n    getNumber(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getNumber(key, fallbackValue);\n    }\n    store(key, value, scope, target) {\n        // We remove the key for undefined/null values\n        if (isUndefinedOrNull(value)) {\n            this.remove(key, scope);\n            return;\n        }\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, target);\n            // Store actual value\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(key, value);\n        });\n    }\n    remove(key, scope) {\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, undefined);\n            // Remove actual key\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.delete(key);\n        });\n    }\n    withPausedEmitters(fn) {\n        // Pause emitters\n        this._onDidChangeValue.pause();\n        this._onDidChangeTarget.pause();\n        try {\n            fn();\n        }\n        finally {\n            // Resume emitters\n            this._onDidChangeValue.resume();\n            this._onDidChangeTarget.resume();\n        }\n    }\n    updateKeyTarget(key, scope, target) {\n        var _a, _b;\n        // Add\n        const keyTargets = this.getKeyTargets(scope);\n        if (typeof target === 'number') {\n            if (keyTargets[key] !== target) {\n                keyTargets[key] = target;\n                (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n        // Remove\n        else {\n            if (typeof keyTargets[key] === 'number') {\n                delete keyTargets[key];\n                (_b = this.getStorage(scope)) === null || _b === void 0 ? void 0 : _b.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n    }\n    get workspaceKeyTargets() {\n        if (!this._workspaceKeyTargets) {\n            this._workspaceKeyTargets = this.loadKeyTargets(1 /* WORKSPACE */);\n        }\n        return this._workspaceKeyTargets;\n    }\n    get globalKeyTargets() {\n        if (!this._globalKeyTargets) {\n            this._globalKeyTargets = this.loadKeyTargets(0 /* GLOBAL */);\n        }\n        return this._globalKeyTargets;\n    }\n    getKeyTargets(scope) {\n        return scope === 0 /* GLOBAL */ ? this.globalKeyTargets : this.workspaceKeyTargets;\n    }\n    loadKeyTargets(scope) {\n        const keysRaw = this.get(TARGET_KEY, scope);\n        if (keysRaw) {\n            try {\n                return JSON.parse(keysRaw);\n            }\n            catch (error) {\n                // Fail gracefully\n            }\n        }\n        return Object.create(null);\n    }\n}\nAbstractStorageService.DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\nexport class InMemoryStorageService extends AbstractStorageService {\n    constructor() {\n        super();\n        this.globalStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n        this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n        this._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(1 /* WORKSPACE */, key)));\n        this._register(this.globalStorage.onDidChangeStorage(key => this.emitDidChangeValue(0 /* GLOBAL */, key)));\n    }\n    getStorage(scope) {\n        return scope === 0 /* GLOBAL */ ? this.globalStorage : this.workspaceStorage;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = {\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n};\nexport function getWordAtText(column, wordDefinition, text, textOffset, config = _defaultConfig) {\n    if (text.length > config.maxLen) {\n        // don't throw strings that long at the regexp\n        // but use a sub-string in which a word must occur\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        // check time budget\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        // reset the index at which the regexp should start matching, also know where it\n        // should stop so that subsequent search don't repeat previous searches\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            // stop: we have something\n            break;\n        }\n        match = thisMatch;\n        // stop: searched at start\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        const result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n", "/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n = 0) {\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function binarySearch(array, key, comparator) {\n    let low = 0, high = array.length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted(array, p) {\n    let low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        const mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\nexport function quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw new TypeError('invalid index');\n    }\n    let pivotValue = data[Math.floor(data.length * Math.random())];\n    let lower = [];\n    let higher = [];\n    let pivots = [];\n    for (let value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nexport function groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    return array.filter(e => !!e);\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct(array, keyFn = value => value) {\n    const seen = new Set();\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (seen.has(key)) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nexport function findLast(arr, predicate) {\n    const idx = lastIndex(arr, predicate);\n    if (idx === -1) {\n        return undefined;\n    }\n    return arr[idx];\n}\nexport function lastIndex(array, fn) {\n    for (let i = array.length - 1; i >= 0; i--) {\n        const element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function firstOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[0] : notFoundValue;\n}\nexport function flatten(arr) {\n    return [].concat(...arr);\n}\nexport function range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    // Move the items after the start index, start from the end so that we don't overwrite any value.\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    const result = array.splice(index, deleteCount);\n    insertInto(array, index, newItems);\n    return result;\n}\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nexport function compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator = (a, b) => a - b;\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findMaxBy(items, comparator) {\n    if (items.length === 0) {\n        return undefined;\n    }\n    let max = items[0];\n    for (let i = 1; i < items.length; i++) {\n        const item = items[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMaxBy(items, comparator) {\n    if (items.length === 0) {\n        return undefined;\n    }\n    let max = items[0];\n    for (let i = 1; i < items.length; i++) {\n        const item = items[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findMinBy(items, comparator) {\n    return findMaxBy(items, (a, b) => -comparator(a, b));\n}\nexport class ArrayQueue {\n    /**\n     * Constructs a queue that is backed by the given array. Runtime is O(1).\n    */\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    /**\n     * Consumes elements from the beginning of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n    */\n    takeWhile(predicate) {\n        // P(k) := k <= this.lastIdx && predicate(this.items[k])\n        // Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    /**\n     * Consumes elements from the end of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned.\n     * The result has the same order as the underlying array!\n    */\n    takeFromEndWhile(predicate) {\n        // P(k) := this.firstIdx >= k && predicate(this.items[k])\n        // Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        return this.items[this.firstIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        // See https://github.com/microsoft/TypeScript/issues/10990\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.keys(obj).forEach((key) => {\n        if (obj[key] && typeof obj[key] === 'object') {\n            result[key] = deepClone(obj[key]);\n        }\n        else {\n            result[key] = obj[key];\n        }\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (let i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getOrDefault(obj, fn, defaultValue) {\n    const result = fn(obj);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const EDITOR_MODEL_DEFAULTS = {\n    tabSize: 4,\n    indentSize: 4,\n    insertSpaces: true,\n    detectIndentation: true,\n    trimAutoWhitespace: true,\n    largeFileOptimizations: true,\n    bracketPairColorizationOptions: { enabled: false }\n};\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* MAX_VALUE */; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 127 /* MAX_VALUE */; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* DependsOnKbLayout */;\n}\n(function () {\n    // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n    // See https://github.com/microsoft/node-native-keymap/blob/master/deps/chromium/keyboard_codes_win.h\n    const empty = '';\n    const mappings = [\n        // keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n        [0, 1, 0 /* None */, 'None', 0 /* Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [0, 1, 1 /* Hyper */, 'Hyper', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 2 /* Super */, 'Super', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 3 /* Fn */, 'Fn', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 4 /* FnLock */, 'FnLock', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 5 /* Suspend */, 'Suspend', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 6 /* Resume */, 'Resume', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 7 /* Turbo */, 'Turbo', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 8 /* Sleep */, 'Sleep', 0 /* Unknown */, empty, 0, 'VK_SLEEP', empty, empty],\n        [0, 1, 9 /* WakeUp */, 'WakeUp', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [31, 0, 10 /* KeyA */, 'KeyA', 31 /* KeyA */, 'A', 65, 'VK_A', empty, empty],\n        [32, 0, 11 /* KeyB */, 'KeyB', 32 /* KeyB */, 'B', 66, 'VK_B', empty, empty],\n        [33, 0, 12 /* KeyC */, 'KeyC', 33 /* KeyC */, 'C', 67, 'VK_C', empty, empty],\n        [34, 0, 13 /* KeyD */, 'KeyD', 34 /* KeyD */, 'D', 68, 'VK_D', empty, empty],\n        [35, 0, 14 /* KeyE */, 'KeyE', 35 /* KeyE */, 'E', 69, 'VK_E', empty, empty],\n        [36, 0, 15 /* KeyF */, 'KeyF', 36 /* KeyF */, 'F', 70, 'VK_F', empty, empty],\n        [37, 0, 16 /* KeyG */, 'KeyG', 37 /* KeyG */, 'G', 71, 'VK_G', empty, empty],\n        [38, 0, 17 /* KeyH */, 'KeyH', 38 /* KeyH */, 'H', 72, 'VK_H', empty, empty],\n        [39, 0, 18 /* KeyI */, 'KeyI', 39 /* KeyI */, 'I', 73, 'VK_I', empty, empty],\n        [40, 0, 19 /* KeyJ */, 'KeyJ', 40 /* KeyJ */, 'J', 74, 'VK_J', empty, empty],\n        [41, 0, 20 /* KeyK */, 'KeyK', 41 /* KeyK */, 'K', 75, 'VK_K', empty, empty],\n        [42, 0, 21 /* KeyL */, 'KeyL', 42 /* KeyL */, 'L', 76, 'VK_L', empty, empty],\n        [43, 0, 22 /* KeyM */, 'KeyM', 43 /* KeyM */, 'M', 77, 'VK_M', empty, empty],\n        [44, 0, 23 /* KeyN */, 'KeyN', 44 /* KeyN */, 'N', 78, 'VK_N', empty, empty],\n        [45, 0, 24 /* KeyO */, 'KeyO', 45 /* KeyO */, 'O', 79, 'VK_O', empty, empty],\n        [46, 0, 25 /* KeyP */, 'KeyP', 46 /* KeyP */, 'P', 80, 'VK_P', empty, empty],\n        [47, 0, 26 /* KeyQ */, 'KeyQ', 47 /* KeyQ */, 'Q', 81, 'VK_Q', empty, empty],\n        [48, 0, 27 /* KeyR */, 'KeyR', 48 /* KeyR */, 'R', 82, 'VK_R', empty, empty],\n        [49, 0, 28 /* KeyS */, 'KeyS', 49 /* KeyS */, 'S', 83, 'VK_S', empty, empty],\n        [50, 0, 29 /* KeyT */, 'KeyT', 50 /* KeyT */, 'T', 84, 'VK_T', empty, empty],\n        [51, 0, 30 /* KeyU */, 'KeyU', 51 /* KeyU */, 'U', 85, 'VK_U', empty, empty],\n        [52, 0, 31 /* KeyV */, 'KeyV', 52 /* KeyV */, 'V', 86, 'VK_V', empty, empty],\n        [53, 0, 32 /* KeyW */, 'KeyW', 53 /* KeyW */, 'W', 87, 'VK_W', empty, empty],\n        [54, 0, 33 /* KeyX */, 'KeyX', 54 /* KeyX */, 'X', 88, 'VK_X', empty, empty],\n        [55, 0, 34 /* KeyY */, 'KeyY', 55 /* KeyY */, 'Y', 89, 'VK_Y', empty, empty],\n        [56, 0, 35 /* KeyZ */, 'KeyZ', 56 /* KeyZ */, 'Z', 90, 'VK_Z', empty, empty],\n        [22, 0, 36 /* Digit1 */, 'Digit1', 22 /* Digit1 */, '1', 49, 'VK_1', empty, empty],\n        [23, 0, 37 /* Digit2 */, 'Digit2', 23 /* Digit2 */, '2', 50, 'VK_2', empty, empty],\n        [24, 0, 38 /* Digit3 */, 'Digit3', 24 /* Digit3 */, '3', 51, 'VK_3', empty, empty],\n        [25, 0, 39 /* Digit4 */, 'Digit4', 25 /* Digit4 */, '4', 52, 'VK_4', empty, empty],\n        [26, 0, 40 /* Digit5 */, 'Digit5', 26 /* Digit5 */, '5', 53, 'VK_5', empty, empty],\n        [27, 0, 41 /* Digit6 */, 'Digit6', 27 /* Digit6 */, '6', 54, 'VK_6', empty, empty],\n        [28, 0, 42 /* Digit7 */, 'Digit7', 28 /* Digit7 */, '7', 55, 'VK_7', empty, empty],\n        [29, 0, 43 /* Digit8 */, 'Digit8', 29 /* Digit8 */, '8', 56, 'VK_8', empty, empty],\n        [30, 0, 44 /* Digit9 */, 'Digit9', 30 /* Digit9 */, '9', 57, 'VK_9', empty, empty],\n        [21, 0, 45 /* Digit0 */, 'Digit0', 21 /* Digit0 */, '0', 48, 'VK_0', empty, empty],\n        [3, 1, 46 /* Enter */, 'Enter', 3 /* Enter */, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [9, 1, 47 /* Escape */, 'Escape', 9 /* Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 1, 48 /* Backspace */, 'Backspace', 1 /* Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [2, 1, 49 /* Tab */, 'Tab', 2 /* Tab */, 'Tab', 9, 'VK_TAB', empty, empty],\n        [10, 1, 50 /* Space */, 'Space', 10 /* Space */, 'Space', 32, 'VK_SPACE', empty, empty],\n        [83, 0, 51 /* Minus */, 'Minus', 83 /* Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [81, 0, 52 /* Equal */, 'Equal', 81 /* Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [87, 0, 53 /* BracketLeft */, 'BracketLeft', 87 /* BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [89, 0, 54 /* BracketRight */, 'BracketRight', 89 /* BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [88, 0, 55 /* Backslash */, 'Backslash', 88 /* Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 0, 56 /* IntlHash */, 'IntlHash', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [80, 0, 57 /* Semicolon */, 'Semicolon', 80 /* Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [90, 0, 58 /* Quote */, 'Quote', 90 /* Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [86, 0, 59 /* Backquote */, 'Backquote', 86 /* Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [82, 0, 60 /* Comma */, 'Comma', 82 /* Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [84, 0, 61 /* Period */, 'Period', 84 /* Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [85, 0, 62 /* Slash */, 'Slash', 85 /* Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [8, 1, 63 /* CapsLock */, 'CapsLock', 8 /* CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [59, 1, 64 /* F1 */, 'F1', 59 /* F1 */, 'F1', 112, 'VK_F1', empty, empty],\n        [60, 1, 65 /* F2 */, 'F2', 60 /* F2 */, 'F2', 113, 'VK_F2', empty, empty],\n        [61, 1, 66 /* F3 */, 'F3', 61 /* F3 */, 'F3', 114, 'VK_F3', empty, empty],\n        [62, 1, 67 /* F4 */, 'F4', 62 /* F4 */, 'F4', 115, 'VK_F4', empty, empty],\n        [63, 1, 68 /* F5 */, 'F5', 63 /* F5 */, 'F5', 116, 'VK_F5', empty, empty],\n        [64, 1, 69 /* F6 */, 'F6', 64 /* F6 */, 'F6', 117, 'VK_F6', empty, empty],\n        [65, 1, 70 /* F7 */, 'F7', 65 /* F7 */, 'F7', 118, 'VK_F7', empty, empty],\n        [66, 1, 71 /* F8 */, 'F8', 66 /* F8 */, 'F8', 119, 'VK_F8', empty, empty],\n        [67, 1, 72 /* F9 */, 'F9', 67 /* F9 */, 'F9', 120, 'VK_F9', empty, empty],\n        [68, 1, 73 /* F10 */, 'F10', 68 /* F10 */, 'F10', 121, 'VK_F10', empty, empty],\n        [69, 1, 74 /* F11 */, 'F11', 69 /* F11 */, 'F11', 122, 'VK_F11', empty, empty],\n        [70, 1, 75 /* F12 */, 'F12', 70 /* F12 */, 'F12', 123, 'VK_F12', empty, empty],\n        [0, 1, 76 /* PrintScreen */, 'PrintScreen', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [79, 1, 77 /* ScrollLock */, 'ScrollLock', 79 /* ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [7, 1, 78 /* Pause */, 'Pause', 7 /* PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [19, 1, 79 /* Insert */, 'Insert', 19 /* Insert */, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [14, 1, 80 /* Home */, 'Home', 14 /* Home */, 'Home', 36, 'VK_HOME', empty, empty],\n        [11, 1, 81 /* PageUp */, 'PageUp', 11 /* PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [20, 1, 82 /* Delete */, 'Delete', 20 /* Delete */, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [13, 1, 83 /* End */, 'End', 13 /* End */, 'End', 35, 'VK_END', empty, empty],\n        [12, 1, 84 /* PageDown */, 'PageDown', 12 /* PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [17, 1, 85 /* ArrowRight */, 'ArrowRight', 17 /* RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [15, 1, 86 /* ArrowLeft */, 'ArrowLeft', 15 /* LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [18, 1, 87 /* ArrowDown */, 'ArrowDown', 18 /* DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [16, 1, 88 /* ArrowUp */, 'ArrowUp', 16 /* UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [78, 1, 89 /* NumLock */, 'NumLock', 78 /* NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [108, 1, 90 /* NumpadDivide */, 'NumpadDivide', 108 /* NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [103, 1, 91 /* NumpadMultiply */, 'NumpadMultiply', 103 /* NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [106, 1, 92 /* NumpadSubtract */, 'NumpadSubtract', 106 /* NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [104, 1, 93 /* NumpadAdd */, 'NumpadAdd', 104 /* NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [3, 1, 94 /* NumpadEnter */, 'NumpadEnter', 3 /* Enter */, empty, 0, empty, empty, empty],\n        [94, 1, 95 /* Numpad1 */, 'Numpad1', 94 /* Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [95, 1, 96 /* Numpad2 */, 'Numpad2', 95 /* Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [96, 1, 97 /* Numpad3 */, 'Numpad3', 96 /* Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [97, 1, 98 /* Numpad4 */, 'Numpad4', 97 /* Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [98, 1, 99 /* Numpad5 */, 'Numpad5', 98 /* Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [99, 1, 100 /* Numpad6 */, 'Numpad6', 99 /* Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [100, 1, 101 /* Numpad7 */, 'Numpad7', 100 /* Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [101, 1, 102 /* Numpad8 */, 'Numpad8', 101 /* Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [102, 1, 103 /* Numpad9 */, 'Numpad9', 102 /* Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [93, 1, 104 /* Numpad0 */, 'Numpad0', 93 /* Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [107, 1, 105 /* NumpadDecimal */, 'NumpadDecimal', 107 /* NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [92, 0, 106 /* IntlBackslash */, 'IntlBackslash', 92 /* IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [58, 1, 107 /* ContextMenu */, 'ContextMenu', 58 /* ContextMenu */, 'ContextMenu', 93, empty, empty, empty],\n        [0, 1, 108 /* Power */, 'Power', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 109 /* NumpadEqual */, 'NumpadEqual', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [71, 1, 110 /* F13 */, 'F13', 71 /* F13 */, 'F13', 124, 'VK_F13', empty, empty],\n        [72, 1, 111 /* F14 */, 'F14', 72 /* F14 */, 'F14', 125, 'VK_F14', empty, empty],\n        [73, 1, 112 /* F15 */, 'F15', 73 /* F15 */, 'F15', 126, 'VK_F15', empty, empty],\n        [74, 1, 113 /* F16 */, 'F16', 74 /* F16 */, 'F16', 127, 'VK_F16', empty, empty],\n        [75, 1, 114 /* F17 */, 'F17', 75 /* F17 */, 'F17', 128, 'VK_F17', empty, empty],\n        [76, 1, 115 /* F18 */, 'F18', 76 /* F18 */, 'F18', 129, 'VK_F18', empty, empty],\n        [77, 1, 116 /* F19 */, 'F19', 77 /* F19 */, 'F19', 130, 'VK_F19', empty, empty],\n        [0, 1, 117 /* F20 */, 'F20', 0 /* Unknown */, empty, 0, 'VK_F20', empty, empty],\n        [0, 1, 118 /* F21 */, 'F21', 0 /* Unknown */, empty, 0, 'VK_F21', empty, empty],\n        [0, 1, 119 /* F22 */, 'F22', 0 /* Unknown */, empty, 0, 'VK_F22', empty, empty],\n        [0, 1, 120 /* F23 */, 'F23', 0 /* Unknown */, empty, 0, 'VK_F23', empty, empty],\n        [0, 1, 121 /* F24 */, 'F24', 0 /* Unknown */, empty, 0, 'VK_F24', empty, empty],\n        [0, 1, 122 /* Open */, 'Open', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 123 /* Help */, 'Help', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 124 /* Select */, 'Select', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 125 /* Again */, 'Again', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 126 /* Undo */, 'Undo', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 127 /* Cut */, 'Cut', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 128 /* Copy */, 'Copy', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 129 /* Paste */, 'Paste', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 130 /* Find */, 'Find', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 131 /* AudioVolumeMute */, 'AudioVolumeMute', 112 /* AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [0, 1, 132 /* AudioVolumeUp */, 'AudioVolumeUp', 113 /* AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [0, 1, 133 /* AudioVolumeDown */, 'AudioVolumeDown', 114 /* AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [105, 1, 134 /* NumpadComma */, 'NumpadComma', 105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [110, 0, 135 /* IntlRo */, 'IntlRo', 110 /* ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [0, 1, 136 /* KanaMode */, 'KanaMode', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 0, 137 /* IntlYen */, 'IntlYen', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 138 /* Convert */, 'Convert', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 139 /* NonConvert */, 'NonConvert', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 140 /* Lang1 */, 'Lang1', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 141 /* Lang2 */, 'Lang2', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 142 /* Lang3 */, 'Lang3', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 143 /* Lang4 */, 'Lang4', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 144 /* Lang5 */, 'Lang5', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 145 /* Abort */, 'Abort', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 146 /* Props */, 'Props', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 147 /* NumpadParenLeft */, 'NumpadParenLeft', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 148 /* NumpadParenRight */, 'NumpadParenRight', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 149 /* NumpadBackspace */, 'NumpadBackspace', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 150 /* NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 151 /* NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 152 /* NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 153 /* NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 154 /* NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 155 /* NumpadClear */, 'NumpadClear', 126 /* Clear */, 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [0, 1, 156 /* NumpadClearEntry */, 'NumpadClearEntry', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [5, 1, 0 /* None */, empty, 5 /* Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [4, 1, 0 /* None */, empty, 4 /* Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [6, 1, 0 /* None */, empty, 6 /* Alt */, 'Alt', 18, 'VK_MENU', empty, empty],\n        [57, 1, 0 /* None */, empty, 57 /* Meta */, 'Meta', 0, 'VK_COMMAND', empty, empty],\n        [5, 1, 157 /* ControlLeft */, 'ControlLeft', 5 /* Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty],\n        [4, 1, 158 /* ShiftLeft */, 'ShiftLeft', 4 /* Shift */, empty, 0, 'VK_LSHIFT', empty, empty],\n        [6, 1, 159 /* AltLeft */, 'AltLeft', 6 /* Alt */, empty, 0, 'VK_LMENU', empty, empty],\n        [57, 1, 160 /* MetaLeft */, 'MetaLeft', 57 /* Meta */, empty, 0, 'VK_LWIN', empty, empty],\n        [5, 1, 161 /* ControlRight */, 'ControlRight', 5 /* Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty],\n        [4, 1, 162 /* ShiftRight */, 'ShiftRight', 4 /* Shift */, empty, 0, 'VK_RSHIFT', empty, empty],\n        [6, 1, 163 /* AltRight */, 'AltRight', 6 /* Alt */, empty, 0, 'VK_RMENU', empty, empty],\n        [57, 1, 164 /* MetaRight */, 'MetaRight', 57 /* Meta */, empty, 0, 'VK_RWIN', empty, empty],\n        [0, 1, 165 /* BrightnessUp */, 'BrightnessUp', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 166 /* BrightnessDown */, 'BrightnessDown', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 167 /* MediaPlay */, 'MediaPlay', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 168 /* MediaRecord */, 'MediaRecord', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 169 /* MediaFastForward */, 'MediaFastForward', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 170 /* MediaRewind */, 'MediaRewind', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [114, 1, 171 /* MediaTrackNext */, 'MediaTrackNext', 119 /* MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [115, 1, 172 /* MediaTrackPrevious */, 'MediaTrackPrevious', 120 /* MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [116, 1, 173 /* MediaStop */, 'MediaStop', 121 /* MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [0, 1, 174 /* Eject */, 'Eject', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [117, 1, 175 /* MediaPlayPause */, 'MediaPlayPause', 122 /* MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [0, 1, 176 /* MediaSelect */, 'MediaSelect', 123 /* LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [0, 1, 177 /* LaunchMail */, 'LaunchMail', 124 /* LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [0, 1, 178 /* LaunchApp2 */, 'LaunchApp2', 125 /* LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [0, 1, 179 /* LaunchApp1 */, 'LaunchApp1', 0 /* Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [0, 1, 180 /* SelectTask */, 'SelectTask', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 181 /* LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 182 /* BrowserSearch */, 'BrowserSearch', 115 /* BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [0, 1, 183 /* BrowserHome */, 'BrowserHome', 116 /* BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [112, 1, 184 /* BrowserBack */, 'BrowserBack', 117 /* BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [113, 1, 185 /* BrowserForward */, 'BrowserForward', 118 /* BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [0, 1, 186 /* BrowserStop */, 'BrowserStop', 0 /* Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [0, 1, 187 /* BrowserRefresh */, 'BrowserRefresh', 0 /* Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [0, 1, 188 /* BrowserFavorites */, 'BrowserFavorites', 0 /* Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [0, 1, 189 /* ZoomToggle */, 'ZoomToggle', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 190 /* MailReply */, 'MailReply', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 191 /* MailForward */, 'MailForward', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 192 /* MailSend */, 'MailSend', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n        // If an Input Method Editor is processing key input and the event is keydown, return 229.\n        [109, 1, 0 /* None */, empty, 109 /* KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty],\n        [111, 1, 0 /* None */, empty, 111 /* ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [91, 1, 0 /* None */, empty, 91 /* OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANGUL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_JUNJA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_FINAL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANJA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANJI', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CONVERT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ACCEPT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SELECT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PRINT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXECUTE', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HELP', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_APPS', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PACKET', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ATTN', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CRSEL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXSEL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EREOF', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PLAY', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ZOOM', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONAME', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PA1', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    let seenKeyCode = [];\n    let seenScanCode = [];\n    for (const mapping of mappings) {\n        const [_keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== 0 /* Unknown */)\n                    && (keyCode !== 3 /* Enter */)\n                    && (keyCode !== 5 /* Ctrl */)\n                    && (keyCode !== 4 /* Shift */)\n                    && (keyCode !== 6 /* Alt */)\n                    && (keyCode !== 57 /* Meta */)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n    IMMUTABLE_KEY_CODE_TO_CODE[3 /* Enter */] = 46 /* Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 93 /* Numpad0 */ && keyCode <= 108 /* NumpadDivide */) {\n            // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n            // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n            // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n            //\n            // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n            // from keybindings based on regular keys.\n            //\n            // We therefore need to fall back to custom rendering for numpad keys.\n            return null;\n        }\n        switch (keyCode) {\n            case 16 /* UpArrow */:\n                return 'Up';\n            case 18 /* DownArrow */:\n                return 'Down';\n            case 15 /* LeftArrow */:\n                return 'Left';\n            case 17 /* RightArrow */:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    /**\n     * Test if `range` is empty.\n     */\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return false.\n     * @internal\n     */\n    static strictContainsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n     */\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n     */\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        let otherStartLineNumber = b.startLineNumber;\n        let otherStartColumn = b.startColumn;\n        let otherEndLineNumber = b.endLineNumber;\n        let otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    }\n    /**\n     * Test if this range equals other.\n     */\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    /**\n     * Test if range `a` equals `b`.\n     */\n    static equalsRange(a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    static getEndPosition(range) {\n        return new Position(range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    static getStartPosition(range) {\n        return new Position(range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Transform to a user presentable string representation.\n     */\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    static collapseToStart(range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    }\n    // ---\n    static fromPositions(start, end = start) {\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    static areIntersectingOrTouching(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    static areIntersecting(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    /**\n     * Test if the range spans multiple lines.\n     */\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n    toJSON() {\n        return this;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    /**\n     * Transform to a human-readable representation.\n     */\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    /**\n     * Get directions (LTR or RTL).\n     */\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    getPosition() {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Get the position at the start of the selection.\n    */\n    getSelectionStart() {\n        return new Position(this.selectionStartLineNumber, this.selectionStartColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    static fromPositions(start, end = start) {\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Creates a `Selection` from a range, given a direction.\n     */\n    static fromRange(range, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        }\n        else {\n            return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n        }\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    static liftSelection(sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    /**\n     * Create with a direction.\n     */\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../base/common/lifecycle.js';\nexport class TokenizationRegistry {\n    constructor() {\n        this._map = new Map();\n        this._factories = new Map();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    fire(languages) {\n        this._onDidChange.fire({\n            changedLanguages: languages,\n            changedColorMap: false\n        });\n    }\n    register(language, support) {\n        this._map.set(language, support);\n        this.fire([language]);\n        return toDisposable(() => {\n            if (this._map.get(language) !== support) {\n                return;\n            }\n            this._map.delete(language);\n            this.fire([language]);\n        });\n    }\n    registerFactory(languageId, factory) {\n        var _a;\n        (_a = this._factories.get(languageId)) === null || _a === void 0 ? void 0 : _a.dispose();\n        const myData = new TokenizationSupportFactoryData(this, languageId, factory);\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    getOrCreate(languageId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // check first if the support is already set\n            const tokenizationSupport = this.get(languageId);\n            if (tokenizationSupport) {\n                return tokenizationSupport;\n            }\n            const factory = this._factories.get(languageId);\n            if (!factory || factory.isResolved) {\n                // no factory or factory.resolve already finished\n                return null;\n            }\n            yield factory.resolve();\n            return this.get(languageId);\n        });\n    }\n    get(language) {\n        return (this._map.get(language) || null);\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(this._map.keys()),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 /* DefaultBackground */) {\n            return this._colorMap[2 /* DefaultBackground */];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    get isResolved() {\n        return this._isResolved;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    resolve() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._resolvePromise) {\n                this._resolvePromise = this._create();\n            }\n            return this._resolvePromise;\n        });\n    }\n    _create() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = yield Promise.resolve(this._factory.createTokenizationSupport());\n            this._isResolved = true;\n            if (value && !this._isDisposed) {\n                this._register(this._registry.register(this._languageId, value));\n            }\n        });\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { URI } from '../../base/common/uri.js';\nimport { Range } from './core/range.js';\nimport { TokenizationRegistry as TokenizationRegistryImpl } from './tokenizationRegistry.js';\nimport { Codicon } from '../../base/common/codicons.js';\n/**\n * @internal\n */\nexport class TokenMetadata {\n    static getLanguageId(metadata) {\n        return (metadata & 255 /* LANGUAGEID_MASK */) >>> 0 /* LANGUAGEID_OFFSET */;\n    }\n    static getTokenType(metadata) {\n        return (metadata & 768 /* TOKEN_TYPE_MASK */) >>> 8 /* TOKEN_TYPE_OFFSET */;\n    }\n    static getFontStyle(metadata) {\n        return (metadata & 15360 /* FONT_STYLE_MASK */) >>> 10 /* FONT_STYLE_OFFSET */;\n    }\n    static getForeground(metadata) {\n        return (metadata & 8372224 /* FOREGROUND_MASK */) >>> 14 /* FOREGROUND_OFFSET */;\n    }\n    static getBackground(metadata) {\n        return (metadata & 4286578688 /* BACKGROUND_MASK */) >>> 23 /* BACKGROUND_OFFSET */;\n    }\n    static getClassNameFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        let className = 'mtk' + foreground;\n        const fontStyle = this.getFontStyle(metadata);\n        if (fontStyle & 1 /* Italic */) {\n            className += ' mtki';\n        }\n        if (fontStyle & 2 /* Bold */) {\n            className += ' mtkb';\n        }\n        if (fontStyle & 4 /* Underline */) {\n            className += ' mtku';\n        }\n        if (fontStyle & 8 /* Strikethrough */) {\n            className += ' mtks';\n        }\n        return className;\n    }\n    static getInlineStyleFromMetadata(metadata, colorMap) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        let result = `color: ${colorMap[foreground]};`;\n        if (fontStyle & 1 /* Italic */) {\n            result += 'font-style: italic;';\n        }\n        if (fontStyle & 2 /* Bold */) {\n            result += 'font-weight: bold;';\n        }\n        let textDecoration = '';\n        if (fontStyle & 4 /* Underline */) {\n            textDecoration += ' underline';\n        }\n        if (fontStyle & 8 /* Strikethrough */) {\n            textDecoration += ' line-through';\n        }\n        if (textDecoration) {\n            result += `text-decoration:${textDecoration};`;\n        }\n        return result;\n    }\n    static getPresentationFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        return {\n            foreground: foreground,\n            italic: Boolean(fontStyle & 1 /* Italic */),\n            bold: Boolean(fontStyle & 2 /* Bold */),\n            underline: Boolean(fontStyle & 4 /* Underline */),\n            strikethrough: Boolean(fontStyle & 8 /* Strikethrough */),\n        };\n    }\n}\nexport class Token {\n    constructor(offset, type, language) {\n        this._tokenBrand = undefined;\n        this.offset = offset;\n        this.type = type;\n        this.language = language;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\n/**\n * @internal\n */\nexport class TokenizationResult {\n    constructor(tokens, endState) {\n        this._tokenizationResultBrand = undefined;\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\n/**\n * @internal\n */\nexport class EncodedTokenizationResult {\n    constructor(tokens, endState) {\n        this._encodedTokenizationResultBrand = undefined;\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\n/**\n * @internal\n */\nexport var CompletionItemKinds;\n(function (CompletionItemKinds) {\n    const byKind = new Map();\n    byKind.set(0 /* Method */, Codicon.symbolMethod);\n    byKind.set(1 /* Function */, Codicon.symbolFunction);\n    byKind.set(2 /* Constructor */, Codicon.symbolConstructor);\n    byKind.set(3 /* Field */, Codicon.symbolField);\n    byKind.set(4 /* Variable */, Codicon.symbolVariable);\n    byKind.set(5 /* Class */, Codicon.symbolClass);\n    byKind.set(6 /* Struct */, Codicon.symbolStruct);\n    byKind.set(7 /* Interface */, Codicon.symbolInterface);\n    byKind.set(8 /* Module */, Codicon.symbolModule);\n    byKind.set(9 /* Property */, Codicon.symbolProperty);\n    byKind.set(10 /* Event */, Codicon.symbolEvent);\n    byKind.set(11 /* Operator */, Codicon.symbolOperator);\n    byKind.set(12 /* Unit */, Codicon.symbolUnit);\n    byKind.set(13 /* Value */, Codicon.symbolValue);\n    byKind.set(15 /* Enum */, Codicon.symbolEnum);\n    byKind.set(14 /* Constant */, Codicon.symbolConstant);\n    byKind.set(15 /* Enum */, Codicon.symbolEnum);\n    byKind.set(16 /* EnumMember */, Codicon.symbolEnumMember);\n    byKind.set(17 /* Keyword */, Codicon.symbolKeyword);\n    byKind.set(27 /* Snippet */, Codicon.symbolSnippet);\n    byKind.set(18 /* Text */, Codicon.symbolText);\n    byKind.set(19 /* Color */, Codicon.symbolColor);\n    byKind.set(20 /* File */, Codicon.symbolFile);\n    byKind.set(21 /* Reference */, Codicon.symbolReference);\n    byKind.set(22 /* Customcolor */, Codicon.symbolCustomColor);\n    byKind.set(23 /* Folder */, Codicon.symbolFolder);\n    byKind.set(24 /* TypeParameter */, Codicon.symbolTypeParameter);\n    byKind.set(25 /* User */, Codicon.account);\n    byKind.set(26 /* Issue */, Codicon.issues);\n    /**\n     * @internal\n     */\n    function toIcon(kind) {\n        let codicon = byKind.get(kind);\n        if (!codicon) {\n            console.info('No codicon found for CompletionItemKind ' + kind);\n            codicon = Codicon.symbolProperty;\n        }\n        return codicon;\n    }\n    CompletionItemKinds.toIcon = toIcon;\n    const data = new Map();\n    data.set('method', 0 /* Method */);\n    data.set('function', 1 /* Function */);\n    data.set('constructor', 2 /* Constructor */);\n    data.set('field', 3 /* Field */);\n    data.set('variable', 4 /* Variable */);\n    data.set('class', 5 /* Class */);\n    data.set('struct', 6 /* Struct */);\n    data.set('interface', 7 /* Interface */);\n    data.set('module', 8 /* Module */);\n    data.set('property', 9 /* Property */);\n    data.set('event', 10 /* Event */);\n    data.set('operator', 11 /* Operator */);\n    data.set('unit', 12 /* Unit */);\n    data.set('value', 13 /* Value */);\n    data.set('constant', 14 /* Constant */);\n    data.set('enum', 15 /* Enum */);\n    data.set('enum-member', 16 /* EnumMember */);\n    data.set('enumMember', 16 /* EnumMember */);\n    data.set('keyword', 17 /* Keyword */);\n    data.set('snippet', 27 /* Snippet */);\n    data.set('text', 18 /* Text */);\n    data.set('color', 19 /* Color */);\n    data.set('file', 20 /* File */);\n    data.set('reference', 21 /* Reference */);\n    data.set('customcolor', 22 /* Customcolor */);\n    data.set('folder', 23 /* Folder */);\n    data.set('type-parameter', 24 /* TypeParameter */);\n    data.set('typeParameter', 24 /* TypeParameter */);\n    data.set('account', 25 /* User */);\n    data.set('issue', 26 /* Issue */);\n    /**\n     * @internal\n     */\n    function fromString(value, strict) {\n        let res = data.get(value);\n        if (typeof res === 'undefined' && !strict) {\n            res = 9 /* Property */;\n        }\n        return res;\n    }\n    CompletionItemKinds.fromString = fromString;\n})(CompletionItemKinds || (CompletionItemKinds = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * @internal\n */\nexport function isLocationLink(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range)\n        && (Range.isIRange(thing.originSelectionRange) || Range.isIRange(thing.targetSelectionRange));\n}\n/**\n * @internal\n */\nexport var SymbolKinds;\n(function (SymbolKinds) {\n    const byKind = new Map();\n    byKind.set(0 /* File */, Codicon.symbolFile);\n    byKind.set(1 /* Module */, Codicon.symbolModule);\n    byKind.set(2 /* Namespace */, Codicon.symbolNamespace);\n    byKind.set(3 /* Package */, Codicon.symbolPackage);\n    byKind.set(4 /* Class */, Codicon.symbolClass);\n    byKind.set(5 /* Method */, Codicon.symbolMethod);\n    byKind.set(6 /* Property */, Codicon.symbolProperty);\n    byKind.set(7 /* Field */, Codicon.symbolField);\n    byKind.set(8 /* Constructor */, Codicon.symbolConstructor);\n    byKind.set(9 /* Enum */, Codicon.symbolEnum);\n    byKind.set(10 /* Interface */, Codicon.symbolInterface);\n    byKind.set(11 /* Function */, Codicon.symbolFunction);\n    byKind.set(12 /* Variable */, Codicon.symbolVariable);\n    byKind.set(13 /* Constant */, Codicon.symbolConstant);\n    byKind.set(14 /* String */, Codicon.symbolString);\n    byKind.set(15 /* Number */, Codicon.symbolNumber);\n    byKind.set(16 /* Boolean */, Codicon.symbolBoolean);\n    byKind.set(17 /* Array */, Codicon.symbolArray);\n    byKind.set(18 /* Object */, Codicon.symbolObject);\n    byKind.set(19 /* Key */, Codicon.symbolKey);\n    byKind.set(20 /* Null */, Codicon.symbolNull);\n    byKind.set(21 /* EnumMember */, Codicon.symbolEnumMember);\n    byKind.set(22 /* Struct */, Codicon.symbolStruct);\n    byKind.set(23 /* Event */, Codicon.symbolEvent);\n    byKind.set(24 /* Operator */, Codicon.symbolOperator);\n    byKind.set(25 /* TypeParameter */, Codicon.symbolTypeParameter);\n    /**\n     * @internal\n     */\n    function toIcon(kind) {\n        let icon = byKind.get(kind);\n        if (!icon) {\n            console.info('No codicon found for SymbolKind ' + kind);\n            icon = Codicon.symbolProperty;\n        }\n        return icon;\n    }\n    SymbolKinds.toIcon = toIcon;\n})(SymbolKinds || (SymbolKinds = {}));\nexport class FoldingRangeKind {\n    /**\n     * Creates a new {@link FoldingRangeKind}.\n     *\n     * @param value of the kind.\n     */\n    constructor(value) {\n        this.value = value;\n    }\n}\n/**\n * Kind for folding range representing a comment. The value of the kind is 'comment'.\n */\nFoldingRangeKind.Comment = new FoldingRangeKind('comment');\n/**\n * Kind for folding range representing a import. The value of the kind is 'imports'.\n */\nFoldingRangeKind.Imports = new FoldingRangeKind('imports');\n/**\n * Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\n * The value of the kind is 'region'.\n */\nFoldingRangeKind.Region = new FoldingRangeKind('region');\n/**\n * @internal\n */\nexport var Command;\n(function (Command) {\n    /**\n     * @internal\n     */\n    function is(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return false;\n        }\n        return typeof obj.id === 'string' &&\n            typeof obj.title === 'string';\n    }\n    Command.is = is;\n})(Command || (Command = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * @internal\n */\nexport const TokenizationRegistry = new TokenizationRegistryImpl();\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals } from '../../base/common/objects.js';\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\nexport var InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nexport class TextModelResolvedOptions {\n    /**\n     * @internal\n     */\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        this.indentSize = src.tabSize | 0;\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    /**\n     * @internal\n     */\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    /**\n     * @internal\n     */\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nexport class FindMatch {\n    /**\n     * @internal\n     */\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\n/**\n * @internal\n */\nexport class SearchData {\n    constructor(regex, wordSeparators, simpleSearch) {\n        this.regex = regex;\n        this.wordSeparators = wordSeparators;\n        this.simpleSearch = simpleSearch;\n    }\n}\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\n/**\n * @internal\n */\nexport function shouldSynchronizeModel(model) {\n    return (!model.isTooLargeForSyncing() && !model.isForSimpleWidget);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ILanguageService = createDecorator('languageService');\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\n/**\n * @internal\n */\nexport class StandardAutoClosingPairConditional {\n    constructor(source) {\n        this._neutralCharacter = null;\n        this._neutralCharacterSearched = false;\n        this.open = source.open;\n        this.close = source.close;\n        // initially allowed in all tokens\n        this._inString = true;\n        this._inComment = true;\n        this._inRegEx = true;\n        if (Array.isArray(source.notIn)) {\n            for (let i = 0, len = source.notIn.length; i < len; i++) {\n                const notIn = source.notIn[i];\n                switch (notIn) {\n                    case 'string':\n                        this._inString = false;\n                        break;\n                    case 'comment':\n                        this._inComment = false;\n                        break;\n                    case 'regex':\n                        this._inRegEx = false;\n                        break;\n                }\n            }\n        }\n    }\n    isOK(standardToken) {\n        switch (standardToken) {\n            case 0 /* Other */:\n                return true;\n            case 1 /* Comment */:\n                return this._inComment;\n            case 2 /* String */:\n                return this._inString;\n            case 3 /* RegEx */:\n                return this._inRegEx;\n        }\n    }\n    shouldAutoClose(context, column) {\n        // Always complete on empty line\n        if (context.getTokenCount() === 0) {\n            return true;\n        }\n        const tokenIndex = context.findTokenIndexAtOffset(column - 2);\n        const standardTokenType = context.getStandardTokenType(tokenIndex);\n        return this.isOK(standardTokenType);\n    }\n    _findNeutralCharacterInRange(fromCharCode, toCharCode) {\n        for (let charCode = fromCharCode; charCode <= toCharCode; charCode++) {\n            const character = String.fromCharCode(charCode);\n            if (!this.open.includes(character) && !this.close.includes(character)) {\n                return character;\n            }\n        }\n        return null;\n    }\n    /**\n     * Find a character in the range [0-9a-zA-Z] that does not appear in the open or close\n     */\n    findNeutralCharacter() {\n        if (!this._neutralCharacterSearched) {\n            this._neutralCharacterSearched = true;\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(48 /* Digit0 */, 57 /* Digit9 */);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(97 /* a */, 122 /* z */);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(65 /* A */, 90 /* Z */);\n            }\n        }\n        return this._neutralCharacter;\n    }\n}\n/**\n * @internal\n */\nexport class AutoClosingPairs {\n    constructor(autoClosingPairs) {\n        this.autoClosingPairsOpenByStart = new Map();\n        this.autoClosingPairsOpenByEnd = new Map();\n        this.autoClosingPairsCloseByStart = new Map();\n        this.autoClosingPairsCloseByEnd = new Map();\n        this.autoClosingPairsCloseSingleChar = new Map();\n        for (const pair of autoClosingPairs) {\n            appendEntry(this.autoClosingPairsOpenByStart, pair.open.charAt(0), pair);\n            appendEntry(this.autoClosingPairsOpenByEnd, pair.open.charAt(pair.open.length - 1), pair);\n            appendEntry(this.autoClosingPairsCloseByStart, pair.close.charAt(0), pair);\n            appendEntry(this.autoClosingPairsCloseByEnd, pair.close.charAt(pair.close.length - 1), pair);\n            if (pair.close.length === 1 && pair.open.length === 1) {\n                appendEntry(this.autoClosingPairsCloseSingleChar, pair.close, pair);\n            }\n        }\n    }\n}\nfunction appendEntry(target, key, value) {\n    if (target.has(key)) {\n        target.get(key).push(value);\n    }\n    else {\n        target.set(key, [value]);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function createScopedLineTokens(context, offset) {\n    const tokenCount = context.getCount();\n    const tokenIndex = context.findTokenIndexAtOffset(offset);\n    const desiredLanguageId = context.getLanguageId(tokenIndex);\n    let lastTokenIndex = tokenIndex;\n    while (lastTokenIndex + 1 < tokenCount && context.getLanguageId(lastTokenIndex + 1) === desiredLanguageId) {\n        lastTokenIndex++;\n    }\n    let firstTokenIndex = tokenIndex;\n    while (firstTokenIndex > 0 && context.getLanguageId(firstTokenIndex - 1) === desiredLanguageId) {\n        firstTokenIndex--;\n    }\n    return new ScopedLineTokens(context, desiredLanguageId, firstTokenIndex, lastTokenIndex + 1, context.getStartOffset(firstTokenIndex), context.getEndOffset(lastTokenIndex));\n}\nexport class ScopedLineTokens {\n    constructor(actual, languageId, firstTokenIndex, lastTokenIndex, firstCharOffset, lastCharOffset) {\n        this._scopedLineTokensBrand = undefined;\n        this._actual = actual;\n        this.languageId = languageId;\n        this._firstTokenIndex = firstTokenIndex;\n        this._lastTokenIndex = lastTokenIndex;\n        this.firstCharOffset = firstCharOffset;\n        this._lastCharOffset = lastCharOffset;\n    }\n    getLineContent() {\n        const actualLineContent = this._actual.getLineContent();\n        return actualLineContent.substring(this.firstCharOffset, this._lastCharOffset);\n    }\n    getActualLineContentBefore(offset) {\n        const actualLineContent = this._actual.getLineContent();\n        return actualLineContent.substring(0, this.firstCharOffset + offset);\n    }\n    getTokenCount() {\n        return this._lastTokenIndex - this._firstTokenIndex;\n    }\n    findTokenIndexAtOffset(offset) {\n        return this._actual.findTokenIndexAtOffset(offset + this.firstCharOffset) - this._firstTokenIndex;\n    }\n    getStandardTokenType(tokenIndex) {\n        return this._actual.getStandardTokenType(tokenIndex + this._firstTokenIndex);\n    }\n}\nexport function ignoreBracketsInToken(standardTokenType) {\n    return (standardTokenType & 3 /* value */) !== 0;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardAutoClosingPairConditional } from '../languageConfiguration.js';\nexport class CharacterPairSupport {\n    constructor(config) {\n        if (config.autoClosingPairs) {\n            this._autoClosingPairs = config.autoClosingPairs.map(el => new StandardAutoClosingPairConditional(el));\n        }\n        else if (config.brackets) {\n            this._autoClosingPairs = config.brackets.map(b => new StandardAutoClosingPairConditional({ open: b[0], close: b[1] }));\n        }\n        else {\n            this._autoClosingPairs = [];\n        }\n        if (config.colorizedBracketPairs) {\n            this._colorizedBracketPairs = filterValidBrackets(config.colorizedBracketPairs.map(b => [b[0], b[1]]));\n        }\n        else if (config.brackets) {\n            this._colorizedBracketPairs = filterValidBrackets(config.brackets\n                .map((b) => [b[0], b[1]])\n                // Many languages set < ... > as bracket pair, even though they also use it as comparison operator.\n                // This leads to problems when colorizing this bracket, so we exclude it by default.\n                // Languages can still override this by configuring `colorizedBracketPairs`\n                // https://github.com/microsoft/vscode/issues/132476\n                .filter((p) => !(p[0] === '<' && p[1] === '>')));\n        }\n        else {\n            this._colorizedBracketPairs = [];\n        }\n        if (config.__electricCharacterSupport && config.__electricCharacterSupport.docComment) {\n            const docComment = config.__electricCharacterSupport.docComment;\n            // IDocComment is legacy, only partially supported\n            this._autoClosingPairs.push(new StandardAutoClosingPairConditional({ open: docComment.open, close: docComment.close || '' }));\n        }\n        this._autoCloseBefore = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED;\n        this._surroundingPairs = config.surroundingPairs || this._autoClosingPairs;\n    }\n    getAutoClosingPairs() {\n        return this._autoClosingPairs;\n    }\n    getAutoCloseBeforeSet() {\n        return this._autoCloseBefore;\n    }\n    getSurroundingPairs() {\n        return this._surroundingPairs;\n    }\n    getColorizedBrackets() {\n        return this._colorizedBracketPairs;\n    }\n}\nCharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED = ';:.,=}])> \\n\\t';\nfunction filterValidBrackets(bracketPairs) {\n    return bracketPairs.filter(([open, close]) => open !== '' && close !== '');\n}\n", "const hasBuffer = (typeof Buffer !== 'undefined');\nlet textDecoder;\nexport class VSBuffer {\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.byteLength = this.buffer.byteLength;\n    }\n    /**\n     * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n     * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n     * which is not transferrable.\n     */\n    static wrap(actual) {\n        if (hasBuffer && !(Buffer.isBuffer(actual))) {\n            // https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n            // Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n            actual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n        }\n        return new VSBuffer(actual);\n    }\n    toString() {\n        if (hasBuffer) {\n            return this.buffer.toString();\n        }\n        else {\n            if (!textDecoder) {\n                textDecoder = new TextDecoder();\n            }\n            return textDecoder.decode(this.buffer);\n        }\n    }\n}\nexport function readUInt16LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0));\n}\nexport function writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n}\nexport function readUInt32BE(source, offset) {\n    return (source[offset] * Math.pow(2, 24)\n        + source[offset + 1] * Math.pow(2, 16)\n        + source[offset + 2] * Math.pow(2, 8)\n        + source[offset + 3]);\n}\nexport function writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value = value >>> 8;\n    destination[offset + 2] = value;\n    value = value >>> 8;\n    destination[offset + 1] = value;\n    value = value >>> 8;\n    destination[offset] = value;\n}\nexport function readUInt8(source, offset) {\n    return source[offset];\n}\nexport function writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as buffer from '../../../base/common/buffer.js';\nlet _utf16LE_TextDecoder;\nfunction getUTF16LE_TextDecoder() {\n    if (!_utf16LE_TextDecoder) {\n        _utf16LE_TextDecoder = new TextDecoder('UTF-16LE');\n    }\n    return _utf16LE_TextDecoder;\n}\nlet _utf16BE_TextDecoder;\nfunction getUTF16BE_TextDecoder() {\n    if (!_utf16BE_TextDecoder) {\n        _utf16BE_TextDecoder = new TextDecoder('UTF-16BE');\n    }\n    return _utf16BE_TextDecoder;\n}\nlet _platformTextDecoder;\nexport function getPlatformTextDecoder() {\n    if (!_platformTextDecoder) {\n        _platformTextDecoder = platform.isLittleEndian() ? getUTF16LE_TextDecoder() : getUTF16BE_TextDecoder();\n    }\n    return _platformTextDecoder;\n}\nexport const hasTextDecoder = (typeof TextDecoder !== 'undefined');\nexport let createStringBuilder;\nexport let decodeUTF16LE;\nif (hasTextDecoder) {\n    createStringBuilder = (capacity) => new StringBuilder(capacity);\n    decodeUTF16LE = standardDecodeUTF16LE;\n}\nelse {\n    createStringBuilder = (capacity) => new CompatStringBuilder();\n    decodeUTF16LE = compatDecodeUTF16LE;\n}\nfunction standardDecodeUTF16LE(source, offset, len) {\n    const view = new Uint16Array(source.buffer, offset, len);\n    if (len > 0 && (view[0] === 0xFEFF || view[0] === 0xFFFE)) {\n        // UTF16 sometimes starts with a BOM https://de.wikipedia.org/wiki/Byte_Order_Mark\n        // It looks like TextDecoder.decode will eat up a leading BOM (0xFEFF or 0xFFFE)\n        // We don't want that behavior because we know the string is UTF16LE and the BOM should be maintained\n        // So we use the manual decoder\n        return compatDecodeUTF16LE(source, offset, len);\n    }\n    return getUTF16LE_TextDecoder().decode(view);\n}\nfunction compatDecodeUTF16LE(source, offset, len) {\n    const result = [];\n    let resultLen = 0;\n    for (let i = 0; i < len; i++) {\n        const charCode = buffer.readUInt16LE(source, offset);\n        offset += 2;\n        result[resultLen++] = String.fromCharCode(charCode);\n    }\n    return result.join('');\n}\nclass StringBuilder {\n    constructor(capacity) {\n        this._capacity = capacity | 0;\n        this._buffer = new Uint16Array(this._capacity);\n        this._completedStrings = null;\n        this._bufferLength = 0;\n    }\n    reset() {\n        this._completedStrings = null;\n        this._bufferLength = 0;\n    }\n    build() {\n        if (this._completedStrings !== null) {\n            this._flushBuffer();\n            return this._completedStrings.join('');\n        }\n        return this._buildBuffer();\n    }\n    _buildBuffer() {\n        if (this._bufferLength === 0) {\n            return '';\n        }\n        const view = new Uint16Array(this._buffer.buffer, 0, this._bufferLength);\n        return getPlatformTextDecoder().decode(view);\n    }\n    _flushBuffer() {\n        const bufferString = this._buildBuffer();\n        this._bufferLength = 0;\n        if (this._completedStrings === null) {\n            this._completedStrings = [bufferString];\n        }\n        else {\n            this._completedStrings[this._completedStrings.length] = bufferString;\n        }\n    }\n    write1(charCode) {\n        const remainingSpace = this._capacity - this._bufferLength;\n        if (remainingSpace <= 1) {\n            if (remainingSpace === 0 || strings.isHighSurrogate(charCode)) {\n                this._flushBuffer();\n            }\n        }\n        this._buffer[this._bufferLength++] = charCode;\n    }\n    appendASCII(charCode) {\n        if (this._bufferLength === this._capacity) {\n            // buffer is full\n            this._flushBuffer();\n        }\n        this._buffer[this._bufferLength++] = charCode;\n    }\n    appendASCIIString(str) {\n        const strLen = str.length;\n        if (this._bufferLength + strLen >= this._capacity) {\n            // This string does not fit in the remaining buffer space\n            this._flushBuffer();\n            this._completedStrings[this._completedStrings.length] = str;\n            return;\n        }\n        for (let i = 0; i < strLen; i++) {\n            this._buffer[this._bufferLength++] = str.charCodeAt(i);\n        }\n    }\n}\nclass CompatStringBuilder {\n    constructor() {\n        this._pieces = [];\n        this._piecesLen = 0;\n    }\n    reset() {\n        this._pieces = [];\n        this._piecesLen = 0;\n    }\n    build() {\n        return this._pieces.join('');\n    }\n    write1(charCode) {\n        this._pieces[this._piecesLen++] = String.fromCharCode(charCode);\n    }\n    appendASCII(charCode) {\n        this._pieces[this._piecesLen++] = String.fromCharCode(charCode);\n    }\n    appendASCIIString(str) {\n        this._pieces[this._piecesLen++] = str;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport * as stringBuilder from '../../core/stringBuilder.js';\nimport { Range } from '../../core/range.js';\n/**\n * Represents a grouping of colliding bracket pairs.\n *\n * Most of the times this contains a single bracket pair,\n * but sometimes this contains multiple bracket pairs in cases\n * where the same string appears as a closing bracket for multiple\n * bracket pairs, or the same string appears an opening bracket for\n * multiple bracket pairs.\n *\n * e.g. of a group containing a single pair:\n *   open: ['{'], close: ['}']\n *\n * e.g. of a group containing multiple pairs:\n *   open: ['if', 'for'], close: ['end', 'end']\n */\nexport class RichEditBracket {\n    constructor(languageId, index, open, close, forwardRegex, reversedRegex) {\n        this._richEditBracketBrand = undefined;\n        this.languageId = languageId;\n        this.index = index;\n        this.open = open;\n        this.close = close;\n        this.forwardRegex = forwardRegex;\n        this.reversedRegex = reversedRegex;\n        this._openSet = RichEditBracket._toSet(this.open);\n        this._closeSet = RichEditBracket._toSet(this.close);\n    }\n    /**\n     * Check if the provided `text` is an open bracket in this group.\n     */\n    isOpen(text) {\n        return this._openSet.has(text);\n    }\n    /**\n     * Check if the provided `text` is a close bracket in this group.\n     */\n    isClose(text) {\n        return this._closeSet.has(text);\n    }\n    static _toSet(arr) {\n        const result = new Set();\n        for (const element of arr) {\n            result.add(element);\n        }\n        return result;\n    }\n}\n/**\n * Groups together brackets that have equal open or close sequences.\n *\n * For example, if the following brackets are defined:\n *   ['IF','END']\n *   ['for','end']\n *   ['{','}']\n *\n * Then the grouped brackets would be:\n *   { open: ['if', 'for'], close: ['end', 'end'] }\n *   { open: ['{'], close: ['}'] }\n *\n */\nfunction groupFuzzyBrackets(brackets) {\n    const N = brackets.length;\n    brackets = brackets.map(b => [b[0].toLowerCase(), b[1].toLowerCase()]);\n    const group = [];\n    for (let i = 0; i < N; i++) {\n        group[i] = i;\n    }\n    const areOverlapping = (a, b) => {\n        const [aOpen, aClose] = a;\n        const [bOpen, bClose] = b;\n        return (aOpen === bOpen || aOpen === bClose || aClose === bOpen || aClose === bClose);\n    };\n    const mergeGroups = (g1, g2) => {\n        const newG = Math.min(g1, g2);\n        const oldG = Math.max(g1, g2);\n        for (let i = 0; i < N; i++) {\n            if (group[i] === oldG) {\n                group[i] = newG;\n            }\n        }\n    };\n    // group together brackets that have the same open or the same close sequence\n    for (let i = 0; i < N; i++) {\n        const a = brackets[i];\n        for (let j = i + 1; j < N; j++) {\n            const b = brackets[j];\n            if (areOverlapping(a, b)) {\n                mergeGroups(group[i], group[j]);\n            }\n        }\n    }\n    const result = [];\n    for (let g = 0; g < N; g++) {\n        const currentOpen = [];\n        const currentClose = [];\n        for (let i = 0; i < N; i++) {\n            if (group[i] === g) {\n                const [open, close] = brackets[i];\n                currentOpen.push(open);\n                currentClose.push(close);\n            }\n        }\n        if (currentOpen.length > 0) {\n            result.push({\n                open: currentOpen,\n                close: currentClose\n            });\n        }\n    }\n    return result;\n}\nexport class RichEditBrackets {\n    constructor(languageId, _brackets) {\n        this._richEditBracketsBrand = undefined;\n        const brackets = groupFuzzyBrackets(_brackets);\n        this.brackets = brackets.map((b, index) => {\n            return new RichEditBracket(languageId, index, b.open, b.close, getRegexForBracketPair(b.open, b.close, brackets, index), getReversedRegexForBracketPair(b.open, b.close, brackets, index));\n        });\n        this.forwardRegex = getRegexForBrackets(this.brackets);\n        this.reversedRegex = getReversedRegexForBrackets(this.brackets);\n        this.textIsBracket = {};\n        this.textIsOpenBracket = {};\n        this.maxBracketLength = 0;\n        for (const bracket of this.brackets) {\n            for (const open of bracket.open) {\n                this.textIsBracket[open] = bracket;\n                this.textIsOpenBracket[open] = true;\n                this.maxBracketLength = Math.max(this.maxBracketLength, open.length);\n            }\n            for (const close of bracket.close) {\n                this.textIsBracket[close] = bracket;\n                this.textIsOpenBracket[close] = false;\n                this.maxBracketLength = Math.max(this.maxBracketLength, close.length);\n            }\n        }\n    }\n}\nfunction collectSuperstrings(str, brackets, currentIndex, dest) {\n    for (let i = 0, len = brackets.length; i < len; i++) {\n        if (i === currentIndex) {\n            continue;\n        }\n        const bracket = brackets[i];\n        for (const open of bracket.open) {\n            if (open.indexOf(str) >= 0) {\n                dest.push(open);\n            }\n        }\n        for (const close of bracket.close) {\n            if (close.indexOf(str) >= 0) {\n                dest.push(close);\n            }\n        }\n    }\n}\nfunction lengthcmp(a, b) {\n    return a.length - b.length;\n}\nfunction unique(arr) {\n    if (arr.length <= 1) {\n        return arr;\n    }\n    const result = [];\n    const seen = new Set();\n    for (const element of arr) {\n        if (seen.has(element)) {\n            continue;\n        }\n        result.push(element);\n        seen.add(element);\n    }\n    return result;\n}\n/**\n * Create a regular expression that can be used to search forward in a piece of text\n * for a group of bracket pairs. But this regex must be built in a way in which\n * it is aware of the other bracket pairs defined for the language.\n *\n * For example, if a language contains the following bracket pairs:\n *   ['begin', 'end']\n *   ['if', 'end if']\n * The two bracket pairs do not collide because no open or close brackets are equal.\n * So the function getRegexForBracketPair is called twice, once with\n * the ['begin'], ['end'] group consisting of one bracket pair, and once with\n * the ['if'], ['end if'] group consiting of the other bracket pair.\n *\n * But there could be a situation where an occurrence of 'end if' is mistaken\n * for an occurrence of 'end'.\n *\n * Therefore, for the bracket pair ['begin', 'end'], the regex will also\n * target 'end if'. The regex will be something like:\n *   /(\\bend if\\b)|(\\bend\\b)|(\\bif\\b)/\n *\n * The regex also searches for \"superstrings\" (other brackets that might be mistaken with the current bracket).\n *\n */\nfunction getRegexForBracketPair(open, close, brackets, currentIndex) {\n    // search in all brackets for other brackets that are a superstring of these brackets\n    let pieces = [];\n    pieces = pieces.concat(open);\n    pieces = pieces.concat(close);\n    for (let i = 0, len = pieces.length; i < len; i++) {\n        collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\n    }\n    pieces = unique(pieces);\n    pieces.sort(lengthcmp);\n    pieces.reverse();\n    return createBracketOrRegExp(pieces);\n}\n/**\n * Matching a regular expression in JS can only be done \"forwards\". So JS offers natively only\n * methods to find the first match of a regex in a string. But sometimes, it is useful to\n * find the last match of a regex in a string. For such a situation, a nice solution is to\n * simply reverse the string and then search for a reversed regex.\n *\n * This function also has the fine details of `getRegexForBracketPair`. For the same example\n * given above, the regex produced here would look like:\n *   /(\\bfi dne\\b)|(\\bdne\\b)|(\\bfi\\b)/\n */\nfunction getReversedRegexForBracketPair(open, close, brackets, currentIndex) {\n    // search in all brackets for other brackets that are a superstring of these brackets\n    let pieces = [];\n    pieces = pieces.concat(open);\n    pieces = pieces.concat(close);\n    for (let i = 0, len = pieces.length; i < len; i++) {\n        collectSuperstrings(pieces[i], brackets, currentIndex, pieces);\n    }\n    pieces = unique(pieces);\n    pieces.sort(lengthcmp);\n    pieces.reverse();\n    return createBracketOrRegExp(pieces.map(toReversedString));\n}\n/**\n * Creates a regular expression that targets all bracket pairs.\n *\n * e.g. for the bracket pairs:\n *  ['{','}']\n *  ['begin,'end']\n *  ['for','end']\n * the regex would look like:\n *  /(\\{)|(\\})|(\\bbegin\\b)|(\\bend\\b)|(\\bfor\\b)/\n */\nfunction getRegexForBrackets(brackets) {\n    let pieces = [];\n    for (const bracket of brackets) {\n        for (const open of bracket.open) {\n            pieces.push(open);\n        }\n        for (const close of bracket.close) {\n            pieces.push(close);\n        }\n    }\n    pieces = unique(pieces);\n    return createBracketOrRegExp(pieces);\n}\n/**\n * Matching a regular expression in JS can only be done \"forwards\". So JS offers natively only\n * methods to find the first match of a regex in a string. But sometimes, it is useful to\n * find the last match of a regex in a string. For such a situation, a nice solution is to\n * simply reverse the string and then search for a reversed regex.\n *\n * e.g. for the bracket pairs:\n *  ['{','}']\n *  ['begin,'end']\n *  ['for','end']\n * the regex would look like:\n *  /(\\{)|(\\})|(\\bnigeb\\b)|(\\bdne\\b)|(\\brof\\b)/\n */\nfunction getReversedRegexForBrackets(brackets) {\n    let pieces = [];\n    for (const bracket of brackets) {\n        for (const open of bracket.open) {\n            pieces.push(open);\n        }\n        for (const close of bracket.close) {\n            pieces.push(close);\n        }\n    }\n    pieces = unique(pieces);\n    return createBracketOrRegExp(pieces.map(toReversedString));\n}\nfunction prepareBracketForRegExp(str) {\n    // This bracket pair uses letters like e.g. \"begin\" - \"end\"\n    const insertWordBoundaries = (/^[\\w ]+$/.test(str));\n    str = strings.escapeRegExpCharacters(str);\n    return (insertWordBoundaries ? `\\\\b${str}\\\\b` : str);\n}\nfunction createBracketOrRegExp(pieces) {\n    const regexStr = `(${pieces.map(prepareBracketForRegExp).join(')|(')})`;\n    return strings.createRegExp(regexStr, true);\n}\nconst toReversedString = (function () {\n    function reverse(str) {\n        if (stringBuilder.hasTextDecoder) {\n            // create a Uint16Array and then use a TextDecoder to create a string\n            const arr = new Uint16Array(str.length);\n            let offset = 0;\n            for (let i = str.length - 1; i >= 0; i--) {\n                arr[offset++] = str.charCodeAt(i);\n            }\n            return stringBuilder.getPlatformTextDecoder().decode(arr);\n        }\n        else {\n            const result = [];\n            let resultLen = 0;\n            for (let i = str.length - 1; i >= 0; i--) {\n                result[resultLen++] = str.charAt(i);\n            }\n            return result.join('');\n        }\n    }\n    let lastInput = null;\n    let lastOutput = null;\n    return function toReversedString(str) {\n        if (lastInput !== str) {\n            lastInput = str;\n            lastOutput = reverse(lastInput);\n        }\n        return lastOutput;\n    };\n})();\nexport class BracketsUtils {\n    static _findPrevBracketInText(reversedBracketRegex, lineNumber, reversedText, offset) {\n        const m = reversedText.match(reversedBracketRegex);\n        if (!m) {\n            return null;\n        }\n        const matchOffset = reversedText.length - (m.index || 0);\n        const matchLength = m[0].length;\n        const absoluteMatchOffset = offset + matchOffset;\n        return new Range(lineNumber, absoluteMatchOffset - matchLength + 1, lineNumber, absoluteMatchOffset + 1);\n    }\n    static findPrevBracketInRange(reversedBracketRegex, lineNumber, lineText, startOffset, endOffset) {\n        // Because JS does not support backwards regex search, we search forwards in a reversed string with a reversed regex ;)\n        const reversedLineText = toReversedString(lineText);\n        const reversedSubstr = reversedLineText.substring(lineText.length - endOffset, lineText.length - startOffset);\n        return this._findPrevBracketInText(reversedBracketRegex, lineNumber, reversedSubstr, startOffset);\n    }\n    static findNextBracketInText(bracketRegex, lineNumber, text, offset) {\n        const m = text.match(bracketRegex);\n        if (!m) {\n            return null;\n        }\n        const matchOffset = m.index || 0;\n        const matchLength = m[0].length;\n        if (matchLength === 0) {\n            return null;\n        }\n        const absoluteMatchOffset = offset + matchOffset;\n        return new Range(lineNumber, absoluteMatchOffset + 1, lineNumber, absoluteMatchOffset + 1 + matchLength);\n    }\n    static findNextBracketInRange(bracketRegex, lineNumber, lineText, startOffset, endOffset) {\n        const substr = lineText.substring(startOffset, endOffset);\n        return this.findNextBracketInText(bracketRegex, lineNumber, substr, startOffset);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../../base/common/arrays.js';\nimport { ignoreBracketsInToken } from '../supports.js';\nimport { BracketsUtils } from './richEditBrackets.js';\nexport class BracketElectricCharacterSupport {\n    constructor(richEditBrackets) {\n        this._richEditBrackets = richEditBrackets;\n    }\n    getElectricCharacters() {\n        const result = [];\n        if (this._richEditBrackets) {\n            for (const bracket of this._richEditBrackets.brackets) {\n                for (const close of bracket.close) {\n                    const lastChar = close.charAt(close.length - 1);\n                    result.push(lastChar);\n                }\n            }\n        }\n        return distinct(result);\n    }\n    onElectricCharacter(character, context, column) {\n        if (!this._richEditBrackets || this._richEditBrackets.brackets.length === 0) {\n            return null;\n        }\n        const tokenIndex = context.findTokenIndexAtOffset(column - 1);\n        if (ignoreBracketsInToken(context.getStandardTokenType(tokenIndex))) {\n            return null;\n        }\n        const reversedBracketRegex = this._richEditBrackets.reversedRegex;\n        const text = context.getLineContent().substring(0, column - 1) + character;\n        const r = BracketsUtils.findPrevBracketInRange(reversedBracketRegex, 1, text, 0, text.length);\n        if (!r) {\n            return null;\n        }\n        const bracketText = text.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n        const isOpen = this._richEditBrackets.textIsOpenBracket[bracketText];\n        if (isOpen) {\n            return null;\n        }\n        const textBeforeBracket = context.getActualLineContentBefore(r.startColumn - 1);\n        if (!/^\\s*$/.test(textBeforeBracket)) {\n            // There is other text on the line before the bracket\n            return null;\n        }\n        return {\n            matchOpenBracket: bracketText\n        };\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction resetGlobalRegex(reg) {\n    if (reg.global) {\n        reg.lastIndex = 0;\n    }\n    return true;\n}\nexport class IndentRulesSupport {\n    constructor(indentationRules) {\n        this._indentationRules = indentationRules;\n    }\n    shouldIncrease(text) {\n        if (this._indentationRules) {\n            if (this._indentationRules.increaseIndentPattern && resetGlobalRegex(this._indentationRules.increaseIndentPattern) && this._indentationRules.increaseIndentPattern.test(text)) {\n                return true;\n            }\n            // if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(text)) {\n            // \treturn true;\n            // }\n        }\n        return false;\n    }\n    shouldDecrease(text) {\n        if (this._indentationRules && this._indentationRules.decreaseIndentPattern && resetGlobalRegex(this._indentationRules.decreaseIndentPattern) && this._indentationRules.decreaseIndentPattern.test(text)) {\n            return true;\n        }\n        return false;\n    }\n    shouldIndentNextLine(text) {\n        if (this._indentationRules && this._indentationRules.indentNextLinePattern && resetGlobalRegex(this._indentationRules.indentNextLinePattern) && this._indentationRules.indentNextLinePattern.test(text)) {\n            return true;\n        }\n        return false;\n    }\n    shouldIgnore(text) {\n        // the text matches `unIndentedLinePattern`\n        if (this._indentationRules && this._indentationRules.unIndentedLinePattern && resetGlobalRegex(this._indentationRules.unIndentedLinePattern) && this._indentationRules.unIndentedLinePattern.test(text)) {\n            return true;\n        }\n        return false;\n    }\n    getIndentMetadata(text) {\n        let ret = 0;\n        if (this.shouldIncrease(text)) {\n            ret += 1 /* INCREASE_MASK */;\n        }\n        if (this.shouldDecrease(text)) {\n            ret += 2 /* DECREASE_MASK */;\n        }\n        if (this.shouldIndentNextLine(text)) {\n            ret += 4 /* INDENT_NEXTLINE_MASK */;\n        }\n        if (this.shouldIgnore(text)) {\n            ret += 8 /* UNINDENT_MASK */;\n        }\n        return ret;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { IndentAction } from '../languageConfiguration.js';\nexport class OnEnterSupport {\n    constructor(opts) {\n        opts = opts || {};\n        opts.brackets = opts.brackets || [\n            ['(', ')'],\n            ['{', '}'],\n            ['[', ']']\n        ];\n        this._brackets = [];\n        opts.brackets.forEach((bracket) => {\n            const openRegExp = OnEnterSupport._createOpenBracketRegExp(bracket[0]);\n            const closeRegExp = OnEnterSupport._createCloseBracketRegExp(bracket[1]);\n            if (openRegExp && closeRegExp) {\n                this._brackets.push({\n                    open: bracket[0],\n                    openRegExp: openRegExp,\n                    close: bracket[1],\n                    closeRegExp: closeRegExp,\n                });\n            }\n        });\n        this._regExpRules = opts.onEnterRules || [];\n    }\n    onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText) {\n        // (1): `regExpRules`\n        if (autoIndent >= 3 /* Advanced */) {\n            for (let i = 0, len = this._regExpRules.length; i < len; i++) {\n                const rule = this._regExpRules[i];\n                const regResult = [{\n                        reg: rule.beforeText,\n                        text: beforeEnterText\n                    }, {\n                        reg: rule.afterText,\n                        text: afterEnterText\n                    }, {\n                        reg: rule.previousLineText,\n                        text: previousLineText\n                    }].every((obj) => {\n                    if (!obj.reg) {\n                        return true;\n                    }\n                    obj.reg.lastIndex = 0; // To disable the effect of the \"g\" flag.\n                    return obj.reg.test(obj.text);\n                });\n                if (regResult) {\n                    return rule.action;\n                }\n            }\n        }\n        // (2): Special indent-outdent\n        if (autoIndent >= 2 /* Brackets */) {\n            if (beforeEnterText.length > 0 && afterEnterText.length > 0) {\n                for (let i = 0, len = this._brackets.length; i < len; i++) {\n                    const bracket = this._brackets[i];\n                    if (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\n                        return { indentAction: IndentAction.IndentOutdent };\n                    }\n                }\n            }\n        }\n        // (4): Open bracket based logic\n        if (autoIndent >= 2 /* Brackets */) {\n            if (beforeEnterText.length > 0) {\n                for (let i = 0, len = this._brackets.length; i < len; i++) {\n                    const bracket = this._brackets[i];\n                    if (bracket.openRegExp.test(beforeEnterText)) {\n                        return { indentAction: IndentAction.Indent };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    static _createOpenBracketRegExp(bracket) {\n        let str = strings.escapeRegExpCharacters(bracket);\n        if (!/\\B/.test(str.charAt(0))) {\n            str = '\\\\b' + str;\n        }\n        str += '\\\\s*$';\n        return OnEnterSupport._safeRegExp(str);\n    }\n    static _createCloseBracketRegExp(bracket) {\n        let str = strings.escapeRegExpCharacters(bracket);\n        if (!/\\B/.test(str.charAt(str.length - 1))) {\n            str = str + '\\\\b';\n        }\n        str = '^\\\\s*' + str;\n        return OnEnterSupport._safeRegExp(str);\n    }\n    static _safeRegExp(def) {\n        try {\n            return new RegExp(def);\n        }\n        catch (err) {\n            onUnexpectedError(err);\n            return null;\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IConfigurationService = createDecorator('configurationService');\nexport function toValuesTree(properties, conflictReporter) {\n    const root = Object.create(null);\n    for (let key in properties) {\n        addToValueTree(root, key, properties[key], conflictReporter);\n    }\n    return root;\n}\nexport function addToValueTree(settingsTreeRoot, key, value, conflictReporter) {\n    const segments = key.split('.');\n    const last = segments.pop();\n    let curr = settingsTreeRoot;\n    for (let i = 0; i < segments.length; i++) {\n        let s = segments[i];\n        let obj = curr[s];\n        switch (typeof obj) {\n            case 'undefined':\n                obj = curr[s] = Object.create(null);\n                break;\n            case 'object':\n                break;\n            default:\n                conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n                return;\n        }\n        curr = obj;\n    }\n    if (typeof curr === 'object' && curr !== null) {\n        try {\n            curr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n        }\n        catch (e) {\n            conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n        }\n    }\n    else {\n        conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n    }\n}\nexport function removeFromValueTree(valueTree, key) {\n    const segments = key.split('.');\n    doRemoveFromValueTree(valueTree, segments);\n}\nfunction doRemoveFromValueTree(valueTree, segments) {\n    const first = segments.shift();\n    if (segments.length === 0) {\n        // Reached last segment\n        delete valueTree[first];\n        return;\n    }\n    if (Object.keys(valueTree).indexOf(first) !== -1) {\n        const value = valueTree[first];\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            doRemoveFromValueTree(value, segments);\n            if (Object.keys(value).length === 0) {\n                delete valueTree[first];\n            }\n        }\n    }\n}\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue(config, settingPath, defaultValue) {\n    function accessSetting(config, path) {\n        let current = config;\n        for (const component of path) {\n            if (typeof current !== 'object' || current === null) {\n                return undefined;\n            }\n            current = current[component];\n        }\n        return current;\n    }\n    const path = settingPath.split('.');\n    const result = accessSetting(config, path);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class SyncDescriptor {\n    constructor(ctor, staticArguments = [], supportsDelayedInstantiation = false) {\n        this.ctor = ctor;\n        this.staticArguments = staticArguments;\n        this.supportsDelayedInstantiation = supportsDelayedInstantiation;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SyncDescriptor } from './descriptors.js';\nconst _registry = [];\nexport function registerSingleton(id, ctorOrDescriptor, supportsDelayedInstantiation) {\n    if (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n        ctorOrDescriptor = new SyncDescriptor(ctorOrDescriptor, [], supportsDelayedInstantiation);\n    }\n    _registry.push([id, ctorOrDescriptor]);\n}\nexport function getSingletonServiceDescriptors() {\n    return _registry;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { DEFAULT_WORD_REGEXP, ensureValidWordDefinition } from '../core/wordHelper.js';\nimport { IndentAction, AutoClosingPairs } from './languageConfiguration.js';\nimport { createScopedLineTokens } from './supports.js';\nimport { CharacterPairSupport } from './supports/characterPair.js';\nimport { BracketElectricCharacterSupport } from './supports/electricCharacter.js';\nimport { IndentRulesSupport } from './supports/indentRules.js';\nimport { OnEnterSupport } from './supports/onEnter.js';\nimport { RichEditBrackets } from './supports/richEditBrackets.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ILanguageService } from './language.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nexport class LanguageConfigurationServiceChangeEvent {\n    constructor(languageId) {\n        this.languageId = languageId;\n    }\n    affects(languageId) {\n        return !this.languageId ? true : this.languageId === languageId;\n    }\n}\nexport const ILanguageConfigurationService = createDecorator('languageConfigurationService');\nlet LanguageConfigurationService = class LanguageConfigurationService extends Disposable {\n    constructor(configurationService, languageService) {\n        super();\n        this.configurationService = configurationService;\n        this.languageService = languageService;\n        this.onDidChangeEmitter = this._register(new Emitter());\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.configurations = new Map();\n        const languageConfigKeys = new Set(Object.values(customizedLanguageConfigKeys));\n        this._register(this.configurationService.onDidChangeConfiguration((e) => {\n            const globalConfigChanged = e.change.keys.some((k) => languageConfigKeys.has(k));\n            const localConfigChanged = e.change.overrides\n                .filter(([overrideLangName, keys]) => keys.some((k) => languageConfigKeys.has(k)))\n                .map(([overrideLangName]) => overrideLangName);\n            if (globalConfigChanged) {\n                this.configurations.clear();\n                this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(undefined));\n            }\n            else {\n                for (const languageId of localConfigChanged) {\n                    if (this.languageService.isRegisteredLanguageId(languageId)) {\n                        this.configurations.delete(languageId);\n                        this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(languageId));\n                    }\n                }\n            }\n        }));\n        this._register(LanguageConfigurationRegistry.onDidChange((e) => {\n            this.configurations.delete(e.languageId);\n            this.onDidChangeEmitter.fire(new LanguageConfigurationServiceChangeEvent(e.languageId));\n        }));\n    }\n    getLanguageConfiguration(languageId) {\n        let result = this.configurations.get(languageId);\n        if (!result) {\n            result = computeConfig(languageId, this.configurationService, this.languageService);\n            this.configurations.set(languageId, result);\n        }\n        return result;\n    }\n};\nLanguageConfigurationService = __decorate([\n    __param(0, IConfigurationService),\n    __param(1, ILanguageService)\n], LanguageConfigurationService);\nexport { LanguageConfigurationService };\nfunction computeConfig(languageId, configurationService, languageService) {\n    let languageConfig = LanguageConfigurationRegistry.getLanguageConfiguration(languageId);\n    if (!languageConfig) {\n        if (!languageService.isRegisteredLanguageId(languageId)) {\n            throw new Error(`Language id \"${languageId}\" is not configured nor known`);\n        }\n        languageConfig = new ResolvedLanguageConfiguration(languageId, {});\n    }\n    const customizedConfig = getCustomizedLanguageConfig(languageConfig.languageId, configurationService);\n    const data = combineLanguageConfigurations([languageConfig.underlyingConfig, customizedConfig]);\n    const config = new ResolvedLanguageConfiguration(languageConfig.languageId, data);\n    return config;\n}\nconst customizedLanguageConfigKeys = {\n    brackets: 'editor.language.brackets',\n    colorizedBracketPairs: 'editor.language.colorizedBracketPairs'\n};\nfunction getCustomizedLanguageConfig(languageId, configurationService) {\n    const brackets = configurationService.getValue(customizedLanguageConfigKeys.brackets, {\n        overrideIdentifier: languageId,\n    });\n    const colorizedBracketPairs = configurationService.getValue(customizedLanguageConfigKeys.colorizedBracketPairs, {\n        overrideIdentifier: languageId,\n    });\n    return {\n        brackets: validateBracketPairs(brackets),\n        colorizedBracketPairs: validateBracketPairs(colorizedBracketPairs),\n    };\n}\nfunction validateBracketPairs(data) {\n    if (!Array.isArray(data)) {\n        return undefined;\n    }\n    return data.map(pair => {\n        if (!Array.isArray(pair) || pair.length !== 2) {\n            return undefined;\n        }\n        return [pair[0], pair[1]];\n    }).filter((p) => !!p);\n}\nexport class LanguageConfigurationChangeEvent {\n    constructor(languageId) {\n        this.languageId = languageId;\n    }\n}\nexport class LanguageConfigurationRegistryImpl {\n    constructor() {\n        this._entries = new Map();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    /**\n     * @param priority Use a higher number for higher priority\n     */\n    register(languageId, configuration, priority = 0) {\n        let entries = this._entries.get(languageId);\n        if (!entries) {\n            entries = new ComposedLanguageConfiguration(languageId);\n            this._entries.set(languageId, entries);\n        }\n        const disposable = entries.register(configuration, priority);\n        this._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n        return toDisposable(() => {\n            disposable.dispose();\n            this._onDidChange.fire(new LanguageConfigurationChangeEvent(languageId));\n        });\n    }\n    getLanguageConfiguration(languageId) {\n        const entries = this._entries.get(languageId);\n        return (entries === null || entries === void 0 ? void 0 : entries.getResolvedConfiguration()) || null;\n    }\n    getComments(languageId) {\n        const value = this.getLanguageConfiguration(languageId);\n        if (!value) {\n            return null;\n        }\n        return value.comments || null;\n    }\n    // begin Indent Rules\n    getIndentRulesSupport(languageId) {\n        const value = this.getLanguageConfiguration(languageId);\n        if (!value) {\n            return null;\n        }\n        return value.indentRulesSupport || null;\n    }\n    /**\n     * Get nearest preceding line which doesn't match unIndentPattern or contains all whitespace.\n     * Result:\n     * -1: run into the boundary of embedded languages\n     * 0: every line above are invalid\n     * else: nearest preceding line of the same language\n     */\n    getPrecedingValidLine(model, lineNumber, indentRulesSupport) {\n        const languageId = model.getLanguageIdAtPosition(lineNumber, 0);\n        if (lineNumber > 1) {\n            let lastLineNumber;\n            let resultLineNumber = -1;\n            for (lastLineNumber = lineNumber - 1; lastLineNumber >= 1; lastLineNumber--) {\n                if (model.getLanguageIdAtPosition(lastLineNumber, 0) !== languageId) {\n                    return resultLineNumber;\n                }\n                const text = model.getLineContent(lastLineNumber);\n                if (indentRulesSupport.shouldIgnore(text) || /^\\s+$/.test(text) || text === '') {\n                    resultLineNumber = lastLineNumber;\n                    continue;\n                }\n                return lastLineNumber;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Get inherited indentation from above lines.\n     * 1. Find the nearest preceding line which doesn't match unIndentedLinePattern.\n     * 2. If this line matches indentNextLinePattern or increaseIndentPattern, it means that the indent level of `lineNumber` should be 1 greater than this line.\n     * 3. If this line doesn't match any indent rules\n     *   a. check whether the line above it matches indentNextLinePattern\n     *   b. If not, the indent level of this line is the result\n     *   c. If so, it means the indent of this line is *temporary*, go upward utill we find a line whose indent is not temporary (the same workflow a -> b -> c).\n     * 4. Otherwise, we fail to get an inherited indent from aboves. Return null and we should not touch the indent of `lineNumber`\n     *\n     * This function only return the inherited indent based on above lines, it doesn't check whether current line should decrease or not.\n     */\n    getInheritIndentForLine(autoIndent, model, lineNumber, honorIntentialIndent = true) {\n        if (autoIndent < 4 /* Full */) {\n            return null;\n        }\n        const indentRulesSupport = this.getIndentRulesSupport(model.getLanguageId());\n        if (!indentRulesSupport) {\n            return null;\n        }\n        if (lineNumber <= 1) {\n            return {\n                indentation: '',\n                action: null\n            };\n        }\n        const precedingUnIgnoredLine = this.getPrecedingValidLine(model, lineNumber, indentRulesSupport);\n        if (precedingUnIgnoredLine < 0) {\n            return null;\n        }\n        else if (precedingUnIgnoredLine < 1) {\n            return {\n                indentation: '',\n                action: null\n            };\n        }\n        const precedingUnIgnoredLineContent = model.getLineContent(precedingUnIgnoredLine);\n        if (indentRulesSupport.shouldIncrease(precedingUnIgnoredLineContent) || indentRulesSupport.shouldIndentNextLine(precedingUnIgnoredLineContent)) {\n            return {\n                indentation: strings.getLeadingWhitespace(precedingUnIgnoredLineContent),\n                action: IndentAction.Indent,\n                line: precedingUnIgnoredLine\n            };\n        }\n        else if (indentRulesSupport.shouldDecrease(precedingUnIgnoredLineContent)) {\n            return {\n                indentation: strings.getLeadingWhitespace(precedingUnIgnoredLineContent),\n                action: null,\n                line: precedingUnIgnoredLine\n            };\n        }\n        else {\n            // precedingUnIgnoredLine can not be ignored.\n            // it doesn't increase indent of following lines\n            // it doesn't increase just next line\n            // so current line is not affect by precedingUnIgnoredLine\n            // and then we should get a correct inheritted indentation from above lines\n            if (precedingUnIgnoredLine === 1) {\n                return {\n                    indentation: strings.getLeadingWhitespace(model.getLineContent(precedingUnIgnoredLine)),\n                    action: null,\n                    line: precedingUnIgnoredLine\n                };\n            }\n            const previousLine = precedingUnIgnoredLine - 1;\n            const previousLineIndentMetadata = indentRulesSupport.getIndentMetadata(model.getLineContent(previousLine));\n            if (!(previousLineIndentMetadata & (1 /* INCREASE_MASK */ | 2 /* DECREASE_MASK */)) &&\n                (previousLineIndentMetadata & 4 /* INDENT_NEXTLINE_MASK */)) {\n                let stopLine = 0;\n                for (let i = previousLine - 1; i > 0; i--) {\n                    if (indentRulesSupport.shouldIndentNextLine(model.getLineContent(i))) {\n                        continue;\n                    }\n                    stopLine = i;\n                    break;\n                }\n                return {\n                    indentation: strings.getLeadingWhitespace(model.getLineContent(stopLine + 1)),\n                    action: null,\n                    line: stopLine + 1\n                };\n            }\n            if (honorIntentialIndent) {\n                return {\n                    indentation: strings.getLeadingWhitespace(model.getLineContent(precedingUnIgnoredLine)),\n                    action: null,\n                    line: precedingUnIgnoredLine\n                };\n            }\n            else {\n                // search from precedingUnIgnoredLine until we find one whose indent is not temporary\n                for (let i = precedingUnIgnoredLine; i > 0; i--) {\n                    const lineContent = model.getLineContent(i);\n                    if (indentRulesSupport.shouldIncrease(lineContent)) {\n                        return {\n                            indentation: strings.getLeadingWhitespace(lineContent),\n                            action: IndentAction.Indent,\n                            line: i\n                        };\n                    }\n                    else if (indentRulesSupport.shouldIndentNextLine(lineContent)) {\n                        let stopLine = 0;\n                        for (let j = i - 1; j > 0; j--) {\n                            if (indentRulesSupport.shouldIndentNextLine(model.getLineContent(i))) {\n                                continue;\n                            }\n                            stopLine = j;\n                            break;\n                        }\n                        return {\n                            indentation: strings.getLeadingWhitespace(model.getLineContent(stopLine + 1)),\n                            action: null,\n                            line: stopLine + 1\n                        };\n                    }\n                    else if (indentRulesSupport.shouldDecrease(lineContent)) {\n                        return {\n                            indentation: strings.getLeadingWhitespace(lineContent),\n                            action: null,\n                            line: i\n                        };\n                    }\n                }\n                return {\n                    indentation: strings.getLeadingWhitespace(model.getLineContent(1)),\n                    action: null,\n                    line: 1\n                };\n            }\n        }\n    }\n    getGoodIndentForLine(autoIndent, virtualModel, languageId, lineNumber, indentConverter) {\n        if (autoIndent < 4 /* Full */) {\n            return null;\n        }\n        const richEditSupport = this.getLanguageConfiguration(languageId);\n        if (!richEditSupport) {\n            return null;\n        }\n        const indentRulesSupport = this.getIndentRulesSupport(languageId);\n        if (!indentRulesSupport) {\n            return null;\n        }\n        const indent = this.getInheritIndentForLine(autoIndent, virtualModel, lineNumber);\n        const lineContent = virtualModel.getLineContent(lineNumber);\n        if (indent) {\n            const inheritLine = indent.line;\n            if (inheritLine !== undefined) {\n                const enterResult = richEditSupport.onEnter(autoIndent, '', virtualModel.getLineContent(inheritLine), '');\n                if (enterResult) {\n                    let indentation = strings.getLeadingWhitespace(virtualModel.getLineContent(inheritLine));\n                    if (enterResult.removeText) {\n                        indentation = indentation.substring(0, indentation.length - enterResult.removeText);\n                    }\n                    if ((enterResult.indentAction === IndentAction.Indent) ||\n                        (enterResult.indentAction === IndentAction.IndentOutdent)) {\n                        indentation = indentConverter.shiftIndent(indentation);\n                    }\n                    else if (enterResult.indentAction === IndentAction.Outdent) {\n                        indentation = indentConverter.unshiftIndent(indentation);\n                    }\n                    if (indentRulesSupport.shouldDecrease(lineContent)) {\n                        indentation = indentConverter.unshiftIndent(indentation);\n                    }\n                    if (enterResult.appendText) {\n                        indentation += enterResult.appendText;\n                    }\n                    return strings.getLeadingWhitespace(indentation);\n                }\n            }\n            if (indentRulesSupport.shouldDecrease(lineContent)) {\n                if (indent.action === IndentAction.Indent) {\n                    return indent.indentation;\n                }\n                else {\n                    return indentConverter.unshiftIndent(indent.indentation);\n                }\n            }\n            else {\n                if (indent.action === IndentAction.Indent) {\n                    return indentConverter.shiftIndent(indent.indentation);\n                }\n                else {\n                    return indent.indentation;\n                }\n            }\n        }\n        return null;\n    }\n    getIndentForEnter(autoIndent, model, range, indentConverter) {\n        if (autoIndent < 4 /* Full */) {\n            return null;\n        }\n        model.forceTokenization(range.startLineNumber);\n        const lineTokens = model.getLineTokens(range.startLineNumber);\n        const scopedLineTokens = createScopedLineTokens(lineTokens, range.startColumn - 1);\n        const scopedLineText = scopedLineTokens.getLineContent();\n        let embeddedLanguage = false;\n        let beforeEnterText;\n        if (scopedLineTokens.firstCharOffset > 0 && lineTokens.getLanguageId(0) !== scopedLineTokens.languageId) {\n            // we are in the embeded language content\n            embeddedLanguage = true; // if embeddedLanguage is true, then we don't touch the indentation of current line\n            beforeEnterText = scopedLineText.substr(0, range.startColumn - 1 - scopedLineTokens.firstCharOffset);\n        }\n        else {\n            beforeEnterText = lineTokens.getLineContent().substring(0, range.startColumn - 1);\n        }\n        let afterEnterText;\n        if (range.isEmpty()) {\n            afterEnterText = scopedLineText.substr(range.startColumn - 1 - scopedLineTokens.firstCharOffset);\n        }\n        else {\n            const endScopedLineTokens = this.getScopedLineTokens(model, range.endLineNumber, range.endColumn);\n            afterEnterText = endScopedLineTokens.getLineContent().substr(range.endColumn - 1 - scopedLineTokens.firstCharOffset);\n        }\n        const indentRulesSupport = this.getIndentRulesSupport(scopedLineTokens.languageId);\n        if (!indentRulesSupport) {\n            return null;\n        }\n        const beforeEnterResult = beforeEnterText;\n        const beforeEnterIndent = strings.getLeadingWhitespace(beforeEnterText);\n        const virtualModel = {\n            getLineTokens: (lineNumber) => {\n                return model.getLineTokens(lineNumber);\n            },\n            getLanguageId: () => {\n                return model.getLanguageId();\n            },\n            getLanguageIdAtPosition: (lineNumber, column) => {\n                return model.getLanguageIdAtPosition(lineNumber, column);\n            },\n            getLineContent: (lineNumber) => {\n                if (lineNumber === range.startLineNumber) {\n                    return beforeEnterResult;\n                }\n                else {\n                    return model.getLineContent(lineNumber);\n                }\n            }\n        };\n        const currentLineIndent = strings.getLeadingWhitespace(lineTokens.getLineContent());\n        const afterEnterAction = this.getInheritIndentForLine(autoIndent, virtualModel, range.startLineNumber + 1);\n        if (!afterEnterAction) {\n            const beforeEnter = embeddedLanguage ? currentLineIndent : beforeEnterIndent;\n            return {\n                beforeEnter: beforeEnter,\n                afterEnter: beforeEnter\n            };\n        }\n        let afterEnterIndent = embeddedLanguage ? currentLineIndent : afterEnterAction.indentation;\n        if (afterEnterAction.action === IndentAction.Indent) {\n            afterEnterIndent = indentConverter.shiftIndent(afterEnterIndent);\n        }\n        if (indentRulesSupport.shouldDecrease(afterEnterText)) {\n            afterEnterIndent = indentConverter.unshiftIndent(afterEnterIndent);\n        }\n        return {\n            beforeEnter: embeddedLanguage ? currentLineIndent : beforeEnterIndent,\n            afterEnter: afterEnterIndent\n        };\n    }\n    /**\n     * We should always allow intentional indentation. It means, if users change the indentation of `lineNumber` and the content of\n     * this line doesn't match decreaseIndentPattern, we should not adjust the indentation.\n     */\n    getIndentActionForType(autoIndent, model, range, ch, indentConverter) {\n        if (autoIndent < 4 /* Full */) {\n            return null;\n        }\n        const scopedLineTokens = this.getScopedLineTokens(model, range.startLineNumber, range.startColumn);\n        if (scopedLineTokens.firstCharOffset) {\n            // this line has mixed languages and indentation rules will not work\n            return null;\n        }\n        const indentRulesSupport = this.getIndentRulesSupport(scopedLineTokens.languageId);\n        if (!indentRulesSupport) {\n            return null;\n        }\n        const scopedLineText = scopedLineTokens.getLineContent();\n        const beforeTypeText = scopedLineText.substr(0, range.startColumn - 1 - scopedLineTokens.firstCharOffset);\n        // selection support\n        let afterTypeText;\n        if (range.isEmpty()) {\n            afterTypeText = scopedLineText.substr(range.startColumn - 1 - scopedLineTokens.firstCharOffset);\n        }\n        else {\n            const endScopedLineTokens = this.getScopedLineTokens(model, range.endLineNumber, range.endColumn);\n            afterTypeText = endScopedLineTokens.getLineContent().substr(range.endColumn - 1 - scopedLineTokens.firstCharOffset);\n        }\n        // If previous content already matches decreaseIndentPattern, it means indentation of this line should already be adjusted\n        // Users might change the indentation by purpose and we should honor that instead of readjusting.\n        if (!indentRulesSupport.shouldDecrease(beforeTypeText + afterTypeText) && indentRulesSupport.shouldDecrease(beforeTypeText + ch + afterTypeText)) {\n            // after typing `ch`, the content matches decreaseIndentPattern, we should adjust the indent to a good manner.\n            // 1. Get inherited indent action\n            const r = this.getInheritIndentForLine(autoIndent, model, range.startLineNumber, false);\n            if (!r) {\n                return null;\n            }\n            let indentation = r.indentation;\n            if (r.action !== IndentAction.Indent) {\n                indentation = indentConverter.unshiftIndent(indentation);\n            }\n            return indentation;\n        }\n        return null;\n    }\n    getIndentMetadata(model, lineNumber) {\n        const indentRulesSupport = this.getIndentRulesSupport(model.getLanguageId());\n        if (!indentRulesSupport) {\n            return null;\n        }\n        if (lineNumber < 1 || lineNumber > model.getLineCount()) {\n            return null;\n        }\n        return indentRulesSupport.getIndentMetadata(model.getLineContent(lineNumber));\n    }\n    // end Indent Rules\n    // begin onEnter\n    getEnterAction(autoIndent, model, range) {\n        const scopedLineTokens = this.getScopedLineTokens(model, range.startLineNumber, range.startColumn);\n        const richEditSupport = this.getLanguageConfiguration(scopedLineTokens.languageId);\n        if (!richEditSupport) {\n            return null;\n        }\n        const scopedLineText = scopedLineTokens.getLineContent();\n        const beforeEnterText = scopedLineText.substr(0, range.startColumn - 1 - scopedLineTokens.firstCharOffset);\n        // selection support\n        let afterEnterText;\n        if (range.isEmpty()) {\n            afterEnterText = scopedLineText.substr(range.startColumn - 1 - scopedLineTokens.firstCharOffset);\n        }\n        else {\n            const endScopedLineTokens = this.getScopedLineTokens(model, range.endLineNumber, range.endColumn);\n            afterEnterText = endScopedLineTokens.getLineContent().substr(range.endColumn - 1 - scopedLineTokens.firstCharOffset);\n        }\n        let previousLineText = '';\n        if (range.startLineNumber > 1 && scopedLineTokens.firstCharOffset === 0) {\n            // This is not the first line and the entire line belongs to this mode\n            const oneLineAboveScopedLineTokens = this.getScopedLineTokens(model, range.startLineNumber - 1);\n            if (oneLineAboveScopedLineTokens.languageId === scopedLineTokens.languageId) {\n                // The line above ends with text belonging to the same mode\n                previousLineText = oneLineAboveScopedLineTokens.getLineContent();\n            }\n        }\n        const enterResult = richEditSupport.onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText);\n        if (!enterResult) {\n            return null;\n        }\n        const indentAction = enterResult.indentAction;\n        let appendText = enterResult.appendText;\n        const removeText = enterResult.removeText || 0;\n        // Here we add `\\t` to appendText first because enterAction is leveraging appendText and removeText to change indentation.\n        if (!appendText) {\n            if ((indentAction === IndentAction.Indent) ||\n                (indentAction === IndentAction.IndentOutdent)) {\n                appendText = '\\t';\n            }\n            else {\n                appendText = '';\n            }\n        }\n        else if (indentAction === IndentAction.Indent) {\n            appendText = '\\t' + appendText;\n        }\n        let indentation = this.getIndentationAtPosition(model, range.startLineNumber, range.startColumn);\n        if (removeText) {\n            indentation = indentation.substring(0, indentation.length - removeText);\n        }\n        return {\n            indentAction: indentAction,\n            appendText: appendText,\n            removeText: removeText,\n            indentation: indentation\n        };\n    }\n    getIndentationAtPosition(model, lineNumber, column) {\n        const lineText = model.getLineContent(lineNumber);\n        let indentation = strings.getLeadingWhitespace(lineText);\n        if (indentation.length > column - 1) {\n            indentation = indentation.substring(0, column - 1);\n        }\n        return indentation;\n    }\n    getScopedLineTokens(model, lineNumber, columnNumber) {\n        model.forceTokenization(lineNumber);\n        const lineTokens = model.getLineTokens(lineNumber);\n        const column = (typeof columnNumber === 'undefined' ? model.getLineMaxColumn(lineNumber) - 1 : columnNumber - 1);\n        return createScopedLineTokens(lineTokens, column);\n    }\n}\n/**\n * @deprecated Use ILanguageConfigurationService instead.\n*/\nexport const LanguageConfigurationRegistry = new LanguageConfigurationRegistryImpl();\nclass ComposedLanguageConfiguration {\n    constructor(languageId) {\n        this.languageId = languageId;\n        this._resolved = null;\n        this._entries = [];\n        this._order = 0;\n        this._resolved = null;\n    }\n    register(configuration, priority) {\n        const entry = new LanguageConfigurationContribution(configuration, priority, ++this._order);\n        this._entries.push(entry);\n        this._resolved = null;\n        return toDisposable(() => {\n            for (let i = 0; i < this._entries.length; i++) {\n                if (this._entries[i] === entry) {\n                    this._entries.splice(i, 1);\n                    this._resolved = null;\n                    break;\n                }\n            }\n        });\n    }\n    getResolvedConfiguration() {\n        if (!this._resolved) {\n            const config = this._resolve();\n            if (config) {\n                this._resolved = new ResolvedLanguageConfiguration(this.languageId, config);\n            }\n        }\n        return this._resolved;\n    }\n    _resolve() {\n        if (this._entries.length === 0) {\n            return null;\n        }\n        this._entries.sort(LanguageConfigurationContribution.cmp);\n        return combineLanguageConfigurations(this._entries.map(e => e.configuration));\n    }\n}\nfunction combineLanguageConfigurations(configs) {\n    let result = {\n        comments: undefined,\n        brackets: undefined,\n        wordPattern: undefined,\n        indentationRules: undefined,\n        onEnterRules: undefined,\n        autoClosingPairs: undefined,\n        surroundingPairs: undefined,\n        autoCloseBefore: undefined,\n        folding: undefined,\n        colorizedBracketPairs: undefined,\n        __electricCharacterSupport: undefined,\n    };\n    for (const entry of configs) {\n        result = {\n            comments: entry.comments || result.comments,\n            brackets: entry.brackets || result.brackets,\n            wordPattern: entry.wordPattern || result.wordPattern,\n            indentationRules: entry.indentationRules || result.indentationRules,\n            onEnterRules: entry.onEnterRules || result.onEnterRules,\n            autoClosingPairs: entry.autoClosingPairs || result.autoClosingPairs,\n            surroundingPairs: entry.surroundingPairs || result.surroundingPairs,\n            autoCloseBefore: entry.autoCloseBefore || result.autoCloseBefore,\n            folding: entry.folding || result.folding,\n            colorizedBracketPairs: entry.colorizedBracketPairs || result.colorizedBracketPairs,\n            __electricCharacterSupport: entry.__electricCharacterSupport || result.__electricCharacterSupport,\n        };\n    }\n    return result;\n}\nclass LanguageConfigurationContribution {\n    constructor(configuration, priority, order) {\n        this.configuration = configuration;\n        this.priority = priority;\n        this.order = order;\n    }\n    static cmp(a, b) {\n        if (a.priority === b.priority) {\n            // higher order last\n            return a.order - b.order;\n        }\n        // higher priority last\n        return a.priority - b.priority;\n    }\n}\n/**\n * Immutable.\n*/\nexport class ResolvedLanguageConfiguration {\n    constructor(languageId, underlyingConfig) {\n        this.languageId = languageId;\n        this.underlyingConfig = underlyingConfig;\n        this._brackets = null;\n        this._electricCharacter = null;\n        this._onEnterSupport =\n            this.underlyingConfig.brackets ||\n                this.underlyingConfig.indentationRules ||\n                this.underlyingConfig.onEnterRules\n                ? new OnEnterSupport(this.underlyingConfig)\n                : null;\n        this.comments = ResolvedLanguageConfiguration._handleComments(this.underlyingConfig);\n        this.characterPair = new CharacterPairSupport(this.underlyingConfig);\n        this.wordDefinition = this.underlyingConfig.wordPattern || DEFAULT_WORD_REGEXP;\n        this.indentationRules = this.underlyingConfig.indentationRules;\n        if (this.underlyingConfig.indentationRules) {\n            this.indentRulesSupport = new IndentRulesSupport(this.underlyingConfig.indentationRules);\n        }\n        else {\n            this.indentRulesSupport = null;\n        }\n        this.foldingRules = this.underlyingConfig.folding || {};\n    }\n    getWordDefinition() {\n        return ensureValidWordDefinition(this.wordDefinition);\n    }\n    get brackets() {\n        if (!this._brackets && this.underlyingConfig.brackets) {\n            this._brackets = new RichEditBrackets(this.languageId, this.underlyingConfig.brackets);\n        }\n        return this._brackets;\n    }\n    get electricCharacter() {\n        if (!this._electricCharacter) {\n            this._electricCharacter = new BracketElectricCharacterSupport(this.brackets);\n        }\n        return this._electricCharacter;\n    }\n    onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText) {\n        if (!this._onEnterSupport) {\n            return null;\n        }\n        return this._onEnterSupport.onEnter(autoIndent, previousLineText, beforeEnterText, afterEnterText);\n    }\n    getAutoClosingPairs() {\n        return new AutoClosingPairs(this.characterPair.getAutoClosingPairs());\n    }\n    getAutoCloseBeforeSet() {\n        return this.characterPair.getAutoCloseBeforeSet();\n    }\n    getSurroundingPairs() {\n        return this.characterPair.getSurroundingPairs();\n    }\n    static _handleComments(conf) {\n        const commentRule = conf.comments;\n        if (!commentRule) {\n            return null;\n        }\n        // comment configuration\n        const comments = {};\n        if (commentRule.lineComment) {\n            comments.lineCommentToken = commentRule.lineComment;\n        }\n        if (commentRule.blockComment) {\n            const [blockStart, blockEnd] = commentRule.blockComment;\n            comments.blockCommentStartToken = blockStart;\n            comments.blockCommentEndToken = blockEnd;\n        }\n        return comments;\n    }\n}\nregisterSingleton(ILanguageConfigurationService, LanguageConfigurationService);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Token, TokenizationResult, EncodedTokenizationResult } from '../languages.js';\nexport const NullState = new class {\n    clone() {\n        return this;\n    }\n    equals(other) {\n        return (this === other);\n    }\n};\nexport function nullTokenize(languageId, state) {\n    return new TokenizationResult([new Token(0, '', languageId)], state);\n}\nexport function nullTokenizeEncoded(languageId, state) {\n    const tokens = new Uint32Array(2);\n    tokens[0] = 0;\n    tokens[1] = ((languageId << 0 /* LANGUAGEID_OFFSET */)\n        | (0 /* Other */ << 8 /* TOKEN_TYPE_OFFSET */)\n        | (0 /* None */ << 10 /* FONT_STYLE_OFFSET */)\n        | (1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */)\n        | (2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */)) >>> 0;\n    return new EncodedTokenizationResult(tokens, state === null ? NullState : state);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier {\n    constructor(_defaultValue) {\n        const defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    static _createAsciiMap(defaultValue) {\n        const asciiMap = new Uint8Array(256);\n        for (let i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        const value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n}\nexport class CharacterSet {\n    constructor() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from './characterClassifier.js';\nexport class WordCharacterClassifier extends CharacterClassifier {\n    constructor(wordSeparators) {\n        super(0 /* Regular */);\n        for (let i = 0, len = wordSeparators.length; i < len; i++) {\n            this.set(wordSeparators.charCodeAt(i), 2 /* WordSeparator */);\n        }\n        this.set(32 /* Space */, 1 /* Whitespace */);\n        this.set(9 /* Tab */, 1 /* Whitespace */);\n    }\n}\nfunction once(computeFn) {\n    const cache = {}; // TODO@Alex unbounded cache\n    return (input) => {\n        if (!cache.hasOwnProperty(input)) {\n            cache[input] = computeFn(input);\n        }\n        return cache[input];\n    };\n}\nexport const getMapForWordSeparators = once((input) => new WordCharacterClassifier(input));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { getMapForWordSeparators } from '../core/wordCharacterClassifier.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { FindMatch, SearchData } from '../model.js';\nconst LIMIT_FIND_COUNT = 999;\nexport class SearchParams {\n    constructor(searchString, isRegex, matchCase, wordSeparators) {\n        this.searchString = searchString;\n        this.isRegex = isRegex;\n        this.matchCase = matchCase;\n        this.wordSeparators = wordSeparators;\n    }\n    parseSearchRequest() {\n        if (this.searchString === '') {\n            return null;\n        }\n        // Try to create a RegExp out of the params\n        let multiline;\n        if (this.isRegex) {\n            multiline = isMultilineRegexSource(this.searchString);\n        }\n        else {\n            multiline = (this.searchString.indexOf('\\n') >= 0);\n        }\n        let regex = null;\n        try {\n            regex = strings.createRegExp(this.searchString, this.isRegex, {\n                matchCase: this.matchCase,\n                wholeWord: false,\n                multiline: multiline,\n                global: true,\n                unicode: true\n            });\n        }\n        catch (err) {\n            return null;\n        }\n        if (!regex) {\n            return null;\n        }\n        let canUseSimpleSearch = (!this.isRegex && !multiline);\n        if (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n            // casing might make a difference\n            canUseSimpleSearch = this.matchCase;\n        }\n        return new SearchData(regex, this.wordSeparators ? getMapForWordSeparators(this.wordSeparators) : null, canUseSimpleSearch ? this.searchString : null);\n    }\n}\nexport function isMultilineRegexSource(searchString) {\n    if (!searchString || searchString.length === 0) {\n        return false;\n    }\n    for (let i = 0, len = searchString.length; i < len; i++) {\n        const chCode = searchString.charCodeAt(i);\n        if (chCode === 92 /* Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            const nextChCode = searchString.charCodeAt(i);\n            if (nextChCode === 110 /* n */ || nextChCode === 114 /* r */ || nextChCode === 87 /* W */) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexport function createFindMatch(range, rawMatches, captureMatches) {\n    if (!captureMatches) {\n        return new FindMatch(range, null);\n    }\n    const matches = [];\n    for (let i = 0, len = rawMatches.length; i < len; i++) {\n        matches[i] = rawMatches[i];\n    }\n    return new FindMatch(range, matches);\n}\nclass LineFeedCounter {\n    constructor(text) {\n        const lineFeedsOffsets = [];\n        let lineFeedsOffsetsLen = 0;\n        for (let i = 0, textLen = text.length; i < textLen; i++) {\n            if (text.charCodeAt(i) === 10 /* LineFeed */) {\n                lineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n            }\n        }\n        this._lineFeedsOffsets = lineFeedsOffsets;\n    }\n    findLineFeedCountBeforeOffset(offset) {\n        const lineFeedsOffsets = this._lineFeedsOffsets;\n        let min = 0;\n        let max = lineFeedsOffsets.length - 1;\n        if (max === -1) {\n            // no line feeds\n            return 0;\n        }\n        if (offset <= lineFeedsOffsets[0]) {\n            // before first line feed\n            return 0;\n        }\n        while (min < max) {\n            const mid = min + ((max - min) / 2 >> 0);\n            if (lineFeedsOffsets[mid] >= offset) {\n                max = mid - 1;\n            }\n            else {\n                if (lineFeedsOffsets[mid + 1] >= offset) {\n                    // bingo!\n                    min = mid;\n                    max = mid;\n                }\n                else {\n                    min = mid + 1;\n                }\n            }\n        }\n        return min + 1;\n    }\n}\nexport class TextModelSearch {\n    static findMatches(model, searchParams, searchRange, captureMatches, limitResultCount) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return [];\n        }\n        if (searchData.regex.multiline) {\n            return this._doFindMatchesMultiline(model, searchRange, new Searcher(searchData.wordSeparators, searchData.regex), captureMatches, limitResultCount);\n        }\n        return this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n    }\n    /**\n     * Multiline search always executes on the lines concatenated with \\n.\n     * We must therefore compensate for the count of \\n in case the model is CRLF\n     */\n    static _getMultilineMatchRange(model, deltaOffset, text, lfCounter, matchIndex, match0) {\n        let startOffset;\n        let lineFeedCountBeforeMatch = 0;\n        if (lfCounter) {\n            lineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n            startOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch /* add as many \\r as there were \\n */;\n        }\n        else {\n            startOffset = deltaOffset + matchIndex;\n        }\n        let endOffset;\n        if (lfCounter) {\n            const lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n            const lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n            endOffset = startOffset + match0.length + lineFeedCountInMatch /* add as many \\r as there were \\n */;\n        }\n        else {\n            endOffset = startOffset + match0.length;\n        }\n        const startPosition = model.getPositionAt(startOffset);\n        const endPosition = model.getPositionAt(endOffset);\n        return new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n    }\n    static _doFindMatchesMultiline(model, searchRange, searcher, captureMatches, limitResultCount) {\n        const deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n        // We always execute multiline search over the lines joined with \\n\n        // This makes it that \\n will match the EOL for both CRLF and LF models\n        // We compensate for offset errors in `_getMultilineMatchRange`\n        const text = model.getValueInRange(searchRange, 1 /* LF */);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n        const result = [];\n        let counter = 0;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            result[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n            if (counter >= limitResultCount) {\n                return result;\n            }\n        }\n        return result;\n    }\n    static _doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount) {\n        const result = [];\n        let resultLen = 0;\n        // Early case for a search range that starts & stops on the same line number\n        if (searchRange.startLineNumber === searchRange.endLineNumber) {\n            const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n            return result;\n        }\n        // Collect results from first line\n        const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n        resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n        // Collect results from middle lines\n        for (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n            resultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        // Collect results from last line\n        if (resultLen < limitResultCount) {\n            const text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        return result;\n    }\n    static _findMatchesInLine(searchData, text, lineNumber, deltaOffset, resultLen, result, captureMatches, limitResultCount) {\n        const wordSeparators = searchData.wordSeparators;\n        if (!captureMatches && searchData.simpleSearch) {\n            const searchString = searchData.simpleSearch;\n            const searchStringLen = searchString.length;\n            const textLength = text.length;\n            let lastMatchIndex = -searchStringLen;\n            while ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n                if (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n                    result[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n                    if (resultLen >= limitResultCount) {\n                        return resultLen;\n                    }\n                }\n            }\n            return resultLen;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        let m;\n        // Reset regex to search from the beginning\n        searcher.reset(0);\n        do {\n            m = searcher.next(text);\n            if (m) {\n                result[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    static findNextMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        if (searchData.regex.multiline) {\n            return this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindNextMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const searchTextStart = new Position(searchStart.lineNumber, 1);\n        const deltaOffset = model.getOffsetAt(searchTextStart);\n        const lineCount = model.getLineCount();\n        // We always execute multiline search over the lines joined with \\n\n        // This makes it that \\n will match the EOL for both CRLF and LF models\n        // We compensate for offset errors in `_getMultilineMatchRange`\n        const text = model.getValueInRange(new Range(searchTextStart.lineNumber, searchTextStart.column, lineCount, model.getLineMaxColumn(lineCount)), 1 /* LF */);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n        searcher.reset(searchStart.column - 1);\n        let m = searcher.next(text);\n        if (m) {\n            return createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n        }\n        if (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n            // Try again from the top\n            return this._doFindNextMatchMultiline(model, new Position(1, 1), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        // Look in first line\n        const text = model.getLineContent(startLineNumber);\n        const r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (startLineNumber + i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findFirstMatchInLine(searcher, text, lineNumber, fromColumn, captureMatches) {\n        // Set regex to search from column\n        searcher.reset(fromColumn - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n        }\n        return null;\n    }\n    static findPreviousMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        if (searchData.regex.multiline) {\n            return this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const matches = this._doFindMatchesMultiline(model, new Range(1, 1, searchStart.lineNumber, searchStart.column), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n        if (matches.length > 0) {\n            return matches[matches.length - 1];\n        }\n        const lineCount = model.getLineCount();\n        if (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n            // Try again with all content\n            return this._doFindPreviousMatchMultiline(model, new Position(lineCount, model.getLineMaxColumn(lineCount)), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        // Look in first line\n        const text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n        const r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findLastMatchInLine(searcher, text, lineNumber, captureMatches) {\n        let bestResult = null;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            bestResult = createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n        }\n        return bestResult;\n    }\n}\nfunction leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex === 0) {\n        // Match starts at start of string\n        return true;\n    }\n    const charBefore = text.charCodeAt(matchStartIndex - 1);\n    if (wordSeparators.get(charBefore) !== 0 /* Regular */) {\n        // The character before the match is a word separator\n        return true;\n    }\n    if (charBefore === 13 /* CarriageReturn */ || charBefore === 10 /* LineFeed */) {\n        // The character before the match is line break or carriage return.\n        return true;\n    }\n    if (matchLength > 0) {\n        const firstCharInMatch = text.charCodeAt(matchStartIndex);\n        if (wordSeparators.get(firstCharInMatch) !== 0 /* Regular */) {\n            // The first character inside the match is a word separator\n            return true;\n        }\n    }\n    return false;\n}\nfunction rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex + matchLength === textLength) {\n        // Match ends at end of string\n        return true;\n    }\n    const charAfter = text.charCodeAt(matchStartIndex + matchLength);\n    if (wordSeparators.get(charAfter) !== 0 /* Regular */) {\n        // The character after the match is a word separator\n        return true;\n    }\n    if (charAfter === 13 /* CarriageReturn */ || charAfter === 10 /* LineFeed */) {\n        // The character after the match is line break or carriage return.\n        return true;\n    }\n    if (matchLength > 0) {\n        const lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n        if (wordSeparators.get(lastCharInMatch) !== 0 /* Regular */) {\n            // The last character in the match is a word separator\n            return true;\n        }\n    }\n    return false;\n}\nexport function isValidMatch(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    return (leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n        && rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength));\n}\nexport class Searcher {\n    constructor(wordSeparators, searchRegex) {\n        this._wordSeparators = wordSeparators;\n        this._searchRegex = searchRegex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    reset(lastIndex) {\n        this._searchRegex.lastIndex = lastIndex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    next(text) {\n        const textLength = text.length;\n        let m;\n        do {\n            if (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n                // Reached the end of the line\n                return null;\n            }\n            m = this._searchRegex.exec(text);\n            if (!m) {\n                return null;\n            }\n            const matchStartIndex = m.index;\n            const matchLength = m[0].length;\n            if (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n                if (matchLength === 0) {\n                    // the search result is an empty string and won't advance `regex.lastIndex`, so `regex.exec` will stuck here\n                    // we attempt to recover from that by advancing by two if surrogate pair found and by one otherwise\n                    if (strings.getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n                        this._searchRegex.lastIndex += 2;\n                    }\n                    else {\n                        this._searchRegex.lastIndex += 1;\n                    }\n                    continue;\n                }\n                // Exit early if the regex matches the same range twice\n                return null;\n            }\n            this._prevMatchStartIndex = matchStartIndex;\n            this._prevMatchLength = matchLength;\n            if (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n                return m;\n            }\n        } while (m);\n        return null;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../common/event.js';\nimport { Disposable } from '../common/lifecycle.js';\nclass WindowManager {\n    constructor() {\n        // --- Zoom Factor\n        this._zoomFactor = 1;\n    }\n    getZoomFactor() {\n        return this._zoomFactor;\n    }\n}\nWindowManager.INSTANCE = new WindowManager();\n/**\n * See https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio#monitoring_screen_resolution_or_zoom_level_changes\n */\nclass DevicePixelRatioMonitor extends Disposable {\n    constructor() {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._listener = () => this._handleChange(true);\n        this._mediaQueryList = null;\n        this._handleChange(false);\n    }\n    _handleChange(fireEvent) {\n        if (this._mediaQueryList) {\n            this._mediaQueryList.removeEventListener('change', this._listener);\n        }\n        this._mediaQueryList = matchMedia(`(resolution: ${window.devicePixelRatio}dppx)`);\n        this._mediaQueryList.addEventListener('change', this._listener);\n        if (fireEvent) {\n            this._onDidChange.fire();\n        }\n    }\n}\nclass PixelRatioImpl extends Disposable {\n    constructor() {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._value = this._getPixelRatio();\n        const dprMonitor = this._register(new DevicePixelRatioMonitor());\n        this._register(dprMonitor.onDidChange(() => {\n            this._value = this._getPixelRatio();\n            this._onDidChange.fire(this._value);\n        }));\n    }\n    get value() {\n        return this._value;\n    }\n    _getPixelRatio() {\n        const ctx = document.createElement('canvas').getContext('2d');\n        const dpr = window.devicePixelRatio || 1;\n        const bsr = ctx.webkitBackingStorePixelRatio ||\n            ctx.mozBackingStorePixelRatio ||\n            ctx.msBackingStorePixelRatio ||\n            ctx.oBackingStorePixelRatio ||\n            ctx.backingStorePixelRatio || 1;\n        return dpr / bsr;\n    }\n}\nclass PixelRatioFacade {\n    constructor() {\n        this._pixelRatioMonitor = null;\n    }\n    _getOrCreatePixelRatioMonitor() {\n        if (!this._pixelRatioMonitor) {\n            this._pixelRatioMonitor = new PixelRatioImpl();\n        }\n        return this._pixelRatioMonitor;\n    }\n    /**\n     * Get the current value.\n     */\n    get value() {\n        return this._getOrCreatePixelRatioMonitor().value;\n    }\n    /**\n     * Listen for changes.\n     */\n    get onDidChange() {\n        return this._getOrCreatePixelRatioMonitor().onDidChange;\n    }\n}\n/**\n * Returns the pixel ratio.\n *\n * This is useful for rendering <canvas> elements at native screen resolution or for being used as\n * a cache key when storing font measurements. Fonts might render differently depending on resolution\n * and any measurements need to be discarded for example when a window is moved from a monitor to another.\n */\nexport const PixelRatio = new PixelRatioFacade();\n/** The zoom scale for an index, e.g. 1, 1.2, 1.4 */\nexport function getZoomFactor() {\n    return WindowManager.INSTANCE.getZoomFactor();\n}\nconst userAgent = navigator.userAgent;\nexport const isFirefox = (userAgent.indexOf('Firefox') >= 0);\nexport const isWebKit = (userAgent.indexOf('AppleWebKit') >= 0);\nexport const isChrome = (userAgent.indexOf('Chrome') >= 0);\nexport const isSafari = (!isChrome && (userAgent.indexOf('Safari') >= 0));\nexport const isWebkitWebView = (!isChrome && !isSafari && isWebKit);\nexport const isElectron = (userAgent.indexOf('Electron/') >= 0);\nexport const isAndroid = (userAgent.indexOf('Android') >= 0);\nexport const isStandalone = (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from './browser.js';\nimport * as platform from '../common/platform.js';\n/**\n * Browser feature we can support in current platform, browser and environment.\n */\nexport const BrowserFeatures = {\n    clipboard: {\n        writeText: (platform.isNative\n            || (document.queryCommandSupported && document.queryCommandSupported('copy'))\n            || !!(navigator && navigator.clipboard && navigator.clipboard.writeText)),\n        readText: (platform.isNative\n            || !!(navigator && navigator.clipboard && navigator.clipboard.readText))\n    },\n    keyboard: (() => {\n        if (platform.isNative || browser.isStandalone) {\n            return 0 /* Always */;\n        }\n        if (navigator.keyboard || browser.isSafari) {\n            return 1 /* FullScreen */;\n        }\n        return 2 /* None */;\n    })(),\n    // 'ontouchstart' in window always evaluates to true with typescript's modern typings. This causes `window` to be\n    // `never` later in `window.navigator`. That's why we need the explicit `window as Window` cast\n    touch: 'ontouchstart' in window || navigator.maxTouchPoints > 0,\n    pointerEvents: window.PointerEvent && ('ontouchstart' in window || window.navigator.maxTouchPoints > 0 || navigator.maxTouchPoints > 0)\n};\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from './browser.js';\nimport { EVENT_KEY_CODE_MAP, KeyCodeUtils } from '../common/keyCodes.js';\nimport { SimpleKeybinding } from '../common/keybindings.js';\nimport * as platform from '../common/platform.js';\nfunction extractKeyCode(e) {\n    if (e.charCode) {\n        // \"keypress\" events mostly\n        let char = String.fromCharCode(e.charCode).toUpperCase();\n        return KeyCodeUtils.fromString(char);\n    }\n    const keyCode = e.keyCode;\n    // browser quirks\n    if (keyCode === 3) {\n        return 7 /* PauseBreak */;\n    }\n    else if (browser.isFirefox) {\n        if (keyCode === 59) {\n            return 80 /* Semicolon */;\n        }\n        else if (keyCode === 107) {\n            return 81 /* Equal */;\n        }\n        else if (keyCode === 109) {\n            return 83 /* Minus */;\n        }\n        else if (platform.isMacintosh && keyCode === 224) {\n            return 57 /* Meta */;\n        }\n    }\n    else if (browser.isWebKit) {\n        if (keyCode === 91) {\n            return 57 /* Meta */;\n        }\n        else if (platform.isMacintosh && keyCode === 93) {\n            // the two meta keys in the Mac have different key codes (91 and 93)\n            return 57 /* Meta */;\n        }\n        else if (!platform.isMacintosh && keyCode === 92) {\n            return 57 /* Meta */;\n        }\n    }\n    // cross browser keycodes:\n    return EVENT_KEY_CODE_MAP[keyCode] || 0 /* Unknown */;\n}\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */);\nconst altKeyMod = 512 /* Alt */;\nconst shiftKeyMod = 1024 /* Shift */;\nconst metaKeyMod = (platform.isMacintosh ? 2048 /* CtrlCmd */ : 256 /* WinCtrl */);\nexport class StandardKeyboardEvent {\n    constructor(source) {\n        this._standardKeyboardEventBrand = true;\n        let e = source;\n        this.browserEvent = e;\n        this.target = e.target;\n        this.ctrlKey = e.ctrlKey;\n        this.shiftKey = e.shiftKey;\n        this.altKey = e.altKey;\n        this.metaKey = e.metaKey;\n        this.keyCode = extractKeyCode(e);\n        this.code = e.code;\n        // console.info(e.type + \": keyCode: \" + e.keyCode + \", which: \" + e.which + \", charCode: \" + e.charCode + \", detail: \" + e.detail + \" ====> \" + this.keyCode + ' -- ' + KeyCode[this.keyCode]);\n        this.ctrlKey = this.ctrlKey || this.keyCode === 5 /* Ctrl */;\n        this.altKey = this.altKey || this.keyCode === 6 /* Alt */;\n        this.shiftKey = this.shiftKey || this.keyCode === 4 /* Shift */;\n        this.metaKey = this.metaKey || this.keyCode === 57 /* Meta */;\n        this._asKeybinding = this._computeKeybinding();\n        this._asRuntimeKeybinding = this._computeRuntimeKeybinding();\n        // console.log(`code: ${e.code}, keyCode: ${e.keyCode}, key: ${e.key}`);\n    }\n    preventDefault() {\n        if (this.browserEvent && this.browserEvent.preventDefault) {\n            this.browserEvent.preventDefault();\n        }\n    }\n    stopPropagation() {\n        if (this.browserEvent && this.browserEvent.stopPropagation) {\n            this.browserEvent.stopPropagation();\n        }\n    }\n    toKeybinding() {\n        return this._asRuntimeKeybinding;\n    }\n    equals(other) {\n        return this._asKeybinding === other;\n    }\n    _computeKeybinding() {\n        let key = 0 /* Unknown */;\n        if (this.keyCode !== 5 /* Ctrl */ && this.keyCode !== 4 /* Shift */ && this.keyCode !== 6 /* Alt */ && this.keyCode !== 57 /* Meta */) {\n            key = this.keyCode;\n        }\n        let result = 0;\n        if (this.ctrlKey) {\n            result |= ctrlKeyMod;\n        }\n        if (this.altKey) {\n            result |= altKeyMod;\n        }\n        if (this.shiftKey) {\n            result |= shiftKeyMod;\n        }\n        if (this.metaKey) {\n            result |= metaKeyMod;\n        }\n        result |= key;\n        return result;\n    }\n    _computeRuntimeKeybinding() {\n        let key = 0 /* Unknown */;\n        if (this.keyCode !== 5 /* Ctrl */ && this.keyCode !== 4 /* Shift */ && this.keyCode !== 6 /* Alt */ && this.keyCode !== 57 /* Meta */) {\n            key = this.keyCode;\n        }\n        return new SimpleKeybinding(this.ctrlKey, this.shiftKey, this.altKey, this.metaKey, key);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet hasDifferentOriginAncestorFlag = false;\nlet sameOriginWindowChainCache = null;\nfunction getParentWindowIfSameOrigin(w) {\n    if (!w.parent || w.parent === w) {\n        return null;\n    }\n    // Cannot really tell if we have access to the parent window unless we try to access something in it\n    try {\n        let location = w.location;\n        let parentLocation = w.parent.location;\n        if (location.origin !== 'null' && parentLocation.origin !== 'null' && location.origin !== parentLocation.origin) {\n            hasDifferentOriginAncestorFlag = true;\n            return null;\n        }\n    }\n    catch (e) {\n        hasDifferentOriginAncestorFlag = true;\n        return null;\n    }\n    return w.parent;\n}\nexport class IframeUtils {\n    /**\n     * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\n     * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\n     * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\n     */\n    static getSameOriginWindowChain() {\n        if (!sameOriginWindowChainCache) {\n            sameOriginWindowChainCache = [];\n            let w = window;\n            let parent;\n            do {\n                parent = getParentWindowIfSameOrigin(w);\n                if (parent) {\n                    sameOriginWindowChainCache.push({\n                        window: w,\n                        iframeElement: w.frameElement || null\n                    });\n                }\n                else {\n                    sameOriginWindowChainCache.push({\n                        window: w,\n                        iframeElement: null\n                    });\n                }\n                w = parent;\n            } while (w);\n        }\n        return sameOriginWindowChainCache.slice(0);\n    }\n    /**\n     * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\n     * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\n     */\n    static hasDifferentOriginAncestor() {\n        if (!sameOriginWindowChainCache) {\n            this.getSameOriginWindowChain();\n        }\n        return hasDifferentOriginAncestorFlag;\n    }\n    /**\n     * Returns the position of `childWindow` relative to `ancestorWindow`\n     */\n    static getPositionOfChildWindowRelativeToAncestorWindow(childWindow, ancestorWindow) {\n        if (!ancestorWindow || childWindow === ancestorWindow) {\n            return {\n                top: 0,\n                left: 0\n            };\n        }\n        let top = 0, left = 0;\n        let windowChain = this.getSameOriginWindowChain();\n        for (const windowChainEl of windowChain) {\n            top += windowChainEl.window.scrollY;\n            left += windowChainEl.window.scrollX;\n            if (windowChainEl.window === ancestorWindow) {\n                break;\n            }\n            if (!windowChainEl.iframeElement) {\n                break;\n            }\n            let boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\n            top += boundingRect.top;\n            left += boundingRect.left;\n        }\n        return {\n            top: top,\n            left: left\n        };\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from './browser.js';\nimport { IframeUtils } from './iframe.js';\nimport * as platform from '../common/platform.js';\nexport class StandardMouseEvent {\n    constructor(e) {\n        this.timestamp = Date.now();\n        this.browserEvent = e;\n        this.leftButton = e.button === 0;\n        this.middleButton = e.button === 1;\n        this.rightButton = e.button === 2;\n        this.buttons = e.buttons;\n        this.target = e.target;\n        this.detail = e.detail || 1;\n        if (e.type === 'dblclick') {\n            this.detail = 2;\n        }\n        this.ctrlKey = e.ctrlKey;\n        this.shiftKey = e.shiftKey;\n        this.altKey = e.altKey;\n        this.metaKey = e.metaKey;\n        if (typeof e.pageX === 'number') {\n            this.posx = e.pageX;\n            this.posy = e.pageY;\n        }\n        else {\n            // Probably hit by MSGestureEvent\n            this.posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n            this.posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n        }\n        // Find the position of the iframe this code is executing in relative to the iframe where the event was captured.\n        let iframeOffsets = IframeUtils.getPositionOfChildWindowRelativeToAncestorWindow(self, e.view);\n        this.posx -= iframeOffsets.left;\n        this.posy -= iframeOffsets.top;\n    }\n    preventDefault() {\n        this.browserEvent.preventDefault();\n    }\n    stopPropagation() {\n        this.browserEvent.stopPropagation();\n    }\n}\nexport class StandardWheelEvent {\n    constructor(e, deltaX = 0, deltaY = 0) {\n        this.browserEvent = e || null;\n        this.target = e ? (e.target || e.targetNode || e.srcElement) : null;\n        this.deltaY = deltaY;\n        this.deltaX = deltaX;\n        if (e) {\n            // Old (deprecated) wheel events\n            let e1 = e;\n            let e2 = e;\n            // vertical delta scroll\n            if (typeof e1.wheelDeltaY !== 'undefined') {\n                this.deltaY = e1.wheelDeltaY / 120;\n            }\n            else if (typeof e2.VERTICAL_AXIS !== 'undefined' && e2.axis === e2.VERTICAL_AXIS) {\n                this.deltaY = -e2.detail / 3;\n            }\n            else if (e.type === 'wheel') {\n                // Modern wheel event\n                // https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent\n                const ev = e;\n                if (ev.deltaMode === ev.DOM_DELTA_LINE) {\n                    // the deltas are expressed in lines\n                    if (browser.isFirefox && !platform.isMacintosh) {\n                        this.deltaY = -e.deltaY / 3;\n                    }\n                    else {\n                        this.deltaY = -e.deltaY;\n                    }\n                }\n                else {\n                    this.deltaY = -e.deltaY / 40;\n                }\n            }\n            // horizontal delta scroll\n            if (typeof e1.wheelDeltaX !== 'undefined') {\n                if (browser.isSafari && platform.isWindows) {\n                    this.deltaX = -(e1.wheelDeltaX / 120);\n                }\n                else {\n                    this.deltaX = e1.wheelDeltaX / 120;\n                }\n            }\n            else if (typeof e2.HORIZONTAL_AXIS !== 'undefined' && e2.axis === e2.HORIZONTAL_AXIS) {\n                this.deltaX = -e.detail / 3;\n            }\n            else if (e.type === 'wheel') {\n                // Modern wheel event\n                // https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent\n                const ev = e;\n                if (ev.deltaMode === ev.DOM_DELTA_LINE) {\n                    // the deltas are expressed in lines\n                    if (browser.isFirefox && !platform.isMacintosh) {\n                        this.deltaX = -e.deltaX / 3;\n                    }\n                    else {\n                        this.deltaX = -e.deltaX;\n                    }\n                }\n                else {\n                    this.deltaX = -e.deltaX / 40;\n                }\n            }\n            // Assume a vertical scroll if nothing else worked\n            if (this.deltaY === 0 && this.deltaX === 0 && e.wheelDelta) {\n                this.deltaY = e.wheelDelta / 120;\n            }\n        }\n    }\n    preventDefault() {\n        if (this.browserEvent) {\n            this.browserEvent.preventDefault();\n        }\n    }\n    stopPropagation() {\n        if (this.browserEvent) {\n            this.browserEvent.stopPropagation();\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as platform from './platform.js';\nimport { URI } from './uri.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.userData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebook = 'vscode-notebook';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeInteractive = 'vscode-interactive';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n})(Schemas || (Schemas = {}));\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            return this._delegate(uri);\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: `/vscode-remote-resource`,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nclass FileAccessImpl {\n    asBrowserUri(uriOrModule, moduleIdToUrl) {\n        const uri = this.toUri(uriOrModule, moduleIdToUrl);\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n    toUri(uriOrModule, moduleIdToUrl) {\n        if (URI.isUri(uriOrModule)) {\n            return uriOrModule;\n        }\n        return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n    }\n}\nFileAccessImpl.FALLBACK_AUTHORITY = 'vscode-app';\nexport const FileAccess = new FileAccessImpl();\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from './browser.js';\nimport { BrowserFeatures } from './canIUse.js';\nimport { StandardKeyboardEvent } from './keyboardEvent.js';\nimport { StandardMouseEvent } from './mouseEvent.js';\nimport { TimeoutTimer } from '../common/async.js';\nimport { onUnexpectedError } from '../common/errors.js';\nimport * as event from '../common/event.js';\nimport { Disposable, DisposableStore, toDisposable } from '../common/lifecycle.js';\nimport { FileAccess, RemoteAuthorities } from '../common/network.js';\nimport * as platform from '../common/platform.js';\nexport function clearNode(node) {\n    while (node.firstChild) {\n        node.firstChild.remove();\n    }\n}\n/**\n * @deprecated Use node.isConnected directly\n */\nexport function isInDOM(node) {\n    var _a;\n    return (_a = node === null || node === void 0 ? void 0 : node.isConnected) !== null && _a !== void 0 ? _a : false;\n}\nclass DomListener {\n    constructor(node, type, handler, options) {\n        this._node = node;\n        this._type = type;\n        this._handler = handler;\n        this._options = (options || false);\n        this._node.addEventListener(this._type, this._handler, this._options);\n    }\n    dispose() {\n        if (!this._handler) {\n            // Already disposed\n            return;\n        }\n        this._node.removeEventListener(this._type, this._handler, this._options);\n        // Prevent leakers from holding on to the dom or handler func\n        this._node = null;\n        this._handler = null;\n    }\n}\nexport function addDisposableListener(node, type, handler, useCaptureOrOptions) {\n    return new DomListener(node, type, handler, useCaptureOrOptions);\n}\nfunction _wrapAsStandardMouseEvent(handler) {\n    return function (e) {\n        return handler(new StandardMouseEvent(e));\n    };\n}\nfunction _wrapAsStandardKeyboardEvent(handler) {\n    return function (e) {\n        return handler(new StandardKeyboardEvent(e));\n    };\n}\nexport let addStandardDisposableListener = function addStandardDisposableListener(node, type, handler, useCapture) {\n    let wrapHandler = handler;\n    if (type === 'click' || type === 'mousedown') {\n        wrapHandler = _wrapAsStandardMouseEvent(handler);\n    }\n    else if (type === 'keydown' || type === 'keypress' || type === 'keyup') {\n        wrapHandler = _wrapAsStandardKeyboardEvent(handler);\n    }\n    return addDisposableListener(node, type, wrapHandler, useCapture);\n};\nexport let addStandardDisposableGenericMouseDownListener = function addStandardDisposableListener(node, handler, useCapture) {\n    let wrapHandler = _wrapAsStandardMouseEvent(handler);\n    return addDisposableGenericMouseDownListener(node, wrapHandler, useCapture);\n};\nexport let addStandardDisposableGenericMouseUpListener = function addStandardDisposableListener(node, handler, useCapture) {\n    let wrapHandler = _wrapAsStandardMouseEvent(handler);\n    return addDisposableGenericMouseUpListener(node, wrapHandler, useCapture);\n};\nexport function addDisposableGenericMouseDownListener(node, handler, useCapture) {\n    return addDisposableListener(node, platform.isIOS && BrowserFeatures.pointerEvents ? EventType.POINTER_DOWN : EventType.MOUSE_DOWN, handler, useCapture);\n}\nexport function addDisposableGenericMouseUpListener(node, handler, useCapture) {\n    return addDisposableListener(node, platform.isIOS && BrowserFeatures.pointerEvents ? EventType.POINTER_UP : EventType.MOUSE_UP, handler, useCapture);\n}\nexport function addDisposableNonBubblingMouseOutListener(node, handler) {\n    return addDisposableListener(node, 'mouseout', (e) => {\n        // Mouse out bubbles, so this is an attempt to ignore faux mouse outs coming from children elements\n        let toElement = (e.relatedTarget);\n        while (toElement && toElement !== node) {\n            toElement = toElement.parentNode;\n        }\n        if (toElement === node) {\n            return;\n        }\n        handler(e);\n    });\n}\nexport function addDisposableNonBubblingPointerOutListener(node, handler) {\n    return addDisposableListener(node, 'pointerout', (e) => {\n        // Mouse out bubbles, so this is an attempt to ignore faux mouse outs coming from children elements\n        let toElement = (e.relatedTarget);\n        while (toElement && toElement !== node) {\n            toElement = toElement.parentNode;\n        }\n        if (toElement === node) {\n            return;\n        }\n        handler(e);\n    });\n}\nexport function createEventEmitter(target, type, options) {\n    let domListener = null;\n    const handler = (e) => result.fire(e);\n    const onFirstListenerAdd = () => {\n        if (!domListener) {\n            domListener = new DomListener(target, type, handler, options);\n        }\n    };\n    const onLastListenerRemove = () => {\n        if (domListener) {\n            domListener.dispose();\n            domListener = null;\n        }\n    };\n    const result = new event.Emitter({ onFirstListenerAdd, onLastListenerRemove });\n    return result;\n}\nlet _animationFrame = null;\nfunction doRequestAnimationFrame(callback) {\n    if (!_animationFrame) {\n        const emulatedRequestAnimationFrame = (callback) => {\n            return setTimeout(() => callback(new Date().getTime()), 0);\n        };\n        _animationFrame = (self.requestAnimationFrame\n            || self.msRequestAnimationFrame\n            || self.webkitRequestAnimationFrame\n            || self.mozRequestAnimationFrame\n            || self.oRequestAnimationFrame\n            || emulatedRequestAnimationFrame);\n    }\n    return _animationFrame.call(self, callback);\n}\n/**\n * Schedule a callback to be run at the next animation frame.\n * This allows multiple parties to register callbacks that should run at the next animation frame.\n * If currently in an animation frame, `runner` will be executed immediately.\n * @return token that can be used to cancel the scheduled runner (only if `runner` was not executed immediately).\n */\nexport let runAtThisOrScheduleAtNextAnimationFrame;\n/**\n * Schedule a callback to be run at the next animation frame.\n * This allows multiple parties to register callbacks that should run at the next animation frame.\n * If currently in an animation frame, `runner` will be executed at the next animation frame.\n * @return token that can be used to cancel the scheduled runner.\n */\nexport let scheduleAtNextAnimationFrame;\nclass AnimationFrameQueueItem {\n    constructor(runner, priority = 0) {\n        this._runner = runner;\n        this.priority = priority;\n        this._canceled = false;\n    }\n    dispose() {\n        this._canceled = true;\n    }\n    execute() {\n        if (this._canceled) {\n            return;\n        }\n        try {\n            this._runner();\n        }\n        catch (e) {\n            onUnexpectedError(e);\n        }\n    }\n    // Sort by priority (largest to lowest)\n    static sort(a, b) {\n        return b.priority - a.priority;\n    }\n}\n(function () {\n    /**\n     * The runners scheduled at the next animation frame\n     */\n    let NEXT_QUEUE = [];\n    /**\n     * The runners scheduled at the current animation frame\n     */\n    let CURRENT_QUEUE = null;\n    /**\n     * A flag to keep track if the native requestAnimationFrame was already called\n     */\n    let animFrameRequested = false;\n    /**\n     * A flag to indicate if currently handling a native requestAnimationFrame callback\n     */\n    let inAnimationFrameRunner = false;\n    let animationFrameRunner = () => {\n        animFrameRequested = false;\n        CURRENT_QUEUE = NEXT_QUEUE;\n        NEXT_QUEUE = [];\n        inAnimationFrameRunner = true;\n        while (CURRENT_QUEUE.length > 0) {\n            CURRENT_QUEUE.sort(AnimationFrameQueueItem.sort);\n            let top = CURRENT_QUEUE.shift();\n            top.execute();\n        }\n        inAnimationFrameRunner = false;\n    };\n    scheduleAtNextAnimationFrame = (runner, priority = 0) => {\n        let item = new AnimationFrameQueueItem(runner, priority);\n        NEXT_QUEUE.push(item);\n        if (!animFrameRequested) {\n            animFrameRequested = true;\n            doRequestAnimationFrame(animationFrameRunner);\n        }\n        return item;\n    };\n    runAtThisOrScheduleAtNextAnimationFrame = (runner, priority) => {\n        if (inAnimationFrameRunner) {\n            let item = new AnimationFrameQueueItem(runner, priority);\n            CURRENT_QUEUE.push(item);\n            return item;\n        }\n        else {\n            return scheduleAtNextAnimationFrame(runner, priority);\n        }\n    };\n})();\nconst MINIMUM_TIME_MS = 8;\nconst DEFAULT_EVENT_MERGER = function (lastEvent, currentEvent) {\n    return currentEvent;\n};\nclass TimeoutThrottledDomListener extends Disposable {\n    constructor(node, type, handler, eventMerger = DEFAULT_EVENT_MERGER, minimumTimeMs = MINIMUM_TIME_MS) {\n        super();\n        let lastEvent = null;\n        let lastHandlerTime = 0;\n        let timeout = this._register(new TimeoutTimer());\n        let invokeHandler = () => {\n            lastHandlerTime = (new Date()).getTime();\n            handler(lastEvent);\n            lastEvent = null;\n        };\n        this._register(addDisposableListener(node, type, (e) => {\n            lastEvent = eventMerger(lastEvent, e);\n            let elapsedTime = (new Date()).getTime() - lastHandlerTime;\n            if (elapsedTime >= minimumTimeMs) {\n                timeout.cancel();\n                invokeHandler();\n            }\n            else {\n                timeout.setIfNotSet(invokeHandler, minimumTimeMs - elapsedTime);\n            }\n        }));\n    }\n}\nexport function addDisposableThrottledListener(node, type, handler, eventMerger, minimumTimeMs) {\n    return new TimeoutThrottledDomListener(node, type, handler, eventMerger, minimumTimeMs);\n}\nexport function getComputedStyle(el) {\n    return document.defaultView.getComputedStyle(el, null);\n}\nexport function getClientArea(element) {\n    // Try with DOM clientWidth / clientHeight\n    if (element !== document.body) {\n        return new Dimension(element.clientWidth, element.clientHeight);\n    }\n    // If visual view port exits and it's on mobile, it should be used instead of window innerWidth / innerHeight, or document.body.clientWidth / document.body.clientHeight\n    if (platform.isIOS && window.visualViewport) {\n        return new Dimension(window.visualViewport.width, window.visualViewport.height);\n    }\n    // Try innerWidth / innerHeight\n    if (window.innerWidth && window.innerHeight) {\n        return new Dimension(window.innerWidth, window.innerHeight);\n    }\n    // Try with document.body.clientWidth / document.body.clientHeight\n    if (document.body && document.body.clientWidth && document.body.clientHeight) {\n        return new Dimension(document.body.clientWidth, document.body.clientHeight);\n    }\n    // Try with document.documentElement.clientWidth / document.documentElement.clientHeight\n    if (document.documentElement && document.documentElement.clientWidth && document.documentElement.clientHeight) {\n        return new Dimension(document.documentElement.clientWidth, document.documentElement.clientHeight);\n    }\n    throw new Error('Unable to figure out browser width and height');\n}\nclass SizeUtils {\n    // Adapted from WinJS\n    // Converts a CSS positioning string for the specified element to pixels.\n    static convertToPixels(element, value) {\n        return parseFloat(value) || 0;\n    }\n    static getDimension(element, cssPropertyName, jsPropertyName) {\n        let computedStyle = getComputedStyle(element);\n        let value = '0';\n        if (computedStyle) {\n            if (computedStyle.getPropertyValue) {\n                value = computedStyle.getPropertyValue(cssPropertyName);\n            }\n            else {\n                // IE8\n                value = computedStyle.getAttribute(jsPropertyName);\n            }\n        }\n        return SizeUtils.convertToPixels(element, value);\n    }\n    static getBorderLeftWidth(element) {\n        return SizeUtils.getDimension(element, 'border-left-width', 'borderLeftWidth');\n    }\n    static getBorderRightWidth(element) {\n        return SizeUtils.getDimension(element, 'border-right-width', 'borderRightWidth');\n    }\n    static getBorderTopWidth(element) {\n        return SizeUtils.getDimension(element, 'border-top-width', 'borderTopWidth');\n    }\n    static getBorderBottomWidth(element) {\n        return SizeUtils.getDimension(element, 'border-bottom-width', 'borderBottomWidth');\n    }\n    static getPaddingLeft(element) {\n        return SizeUtils.getDimension(element, 'padding-left', 'paddingLeft');\n    }\n    static getPaddingRight(element) {\n        return SizeUtils.getDimension(element, 'padding-right', 'paddingRight');\n    }\n    static getPaddingTop(element) {\n        return SizeUtils.getDimension(element, 'padding-top', 'paddingTop');\n    }\n    static getPaddingBottom(element) {\n        return SizeUtils.getDimension(element, 'padding-bottom', 'paddingBottom');\n    }\n    static getMarginLeft(element) {\n        return SizeUtils.getDimension(element, 'margin-left', 'marginLeft');\n    }\n    static getMarginTop(element) {\n        return SizeUtils.getDimension(element, 'margin-top', 'marginTop');\n    }\n    static getMarginRight(element) {\n        return SizeUtils.getDimension(element, 'margin-right', 'marginRight');\n    }\n    static getMarginBottom(element) {\n        return SizeUtils.getDimension(element, 'margin-bottom', 'marginBottom');\n    }\n}\nexport class Dimension {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    with(width = this.width, height = this.height) {\n        if (width !== this.width || height !== this.height) {\n            return new Dimension(width, height);\n        }\n        else {\n            return this;\n        }\n    }\n    static is(obj) {\n        return typeof obj === 'object' && typeof obj.height === 'number' && typeof obj.width === 'number';\n    }\n    static lift(obj) {\n        if (obj instanceof Dimension) {\n            return obj;\n        }\n        else {\n            return new Dimension(obj.width, obj.height);\n        }\n    }\n    static equals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return a.width === b.width && a.height === b.height;\n    }\n}\nDimension.None = new Dimension(0, 0);\nexport function getTopLeftOffset(element) {\n    // Adapted from WinJS.Utilities.getPosition\n    // and added borders to the mix\n    let offsetParent = element.offsetParent;\n    let top = element.offsetTop;\n    let left = element.offsetLeft;\n    while ((element = element.parentNode) !== null\n        && element !== document.body\n        && element !== document.documentElement) {\n        top -= element.scrollTop;\n        const c = isShadowRoot(element) ? null : getComputedStyle(element);\n        if (c) {\n            left -= c.direction !== 'rtl' ? element.scrollLeft : -element.scrollLeft;\n        }\n        if (element === offsetParent) {\n            left += SizeUtils.getBorderLeftWidth(element);\n            top += SizeUtils.getBorderTopWidth(element);\n            top += element.offsetTop;\n            left += element.offsetLeft;\n            offsetParent = element.offsetParent;\n        }\n    }\n    return {\n        left: left,\n        top: top\n    };\n}\nexport function size(element, width, height) {\n    if (typeof width === 'number') {\n        element.style.width = `${width}px`;\n    }\n    if (typeof height === 'number') {\n        element.style.height = `${height}px`;\n    }\n}\n/**\n * Returns the position of a dom node relative to the entire page.\n */\nexport function getDomNodePagePosition(domNode) {\n    let bb = domNode.getBoundingClientRect();\n    return {\n        left: bb.left + StandardWindow.scrollX,\n        top: bb.top + StandardWindow.scrollY,\n        width: bb.width,\n        height: bb.height\n    };\n}\nexport const StandardWindow = new class {\n    get scrollX() {\n        if (typeof window.scrollX === 'number') {\n            // modern browsers\n            return window.scrollX;\n        }\n        else {\n            return document.body.scrollLeft + document.documentElement.scrollLeft;\n        }\n    }\n    get scrollY() {\n        if (typeof window.scrollY === 'number') {\n            // modern browsers\n            return window.scrollY;\n        }\n        else {\n            return document.body.scrollTop + document.documentElement.scrollTop;\n        }\n    }\n};\n// Adapted from WinJS\n// Gets the width of the element, including margins.\nexport function getTotalWidth(element) {\n    let margin = SizeUtils.getMarginLeft(element) + SizeUtils.getMarginRight(element);\n    return element.offsetWidth + margin;\n}\nexport function getContentWidth(element) {\n    let border = SizeUtils.getBorderLeftWidth(element) + SizeUtils.getBorderRightWidth(element);\n    let padding = SizeUtils.getPaddingLeft(element) + SizeUtils.getPaddingRight(element);\n    return element.offsetWidth - border - padding;\n}\n// Adapted from WinJS\n// Gets the height of the content of the specified element. The content height does not include borders or padding.\nexport function getContentHeight(element) {\n    let border = SizeUtils.getBorderTopWidth(element) + SizeUtils.getBorderBottomWidth(element);\n    let padding = SizeUtils.getPaddingTop(element) + SizeUtils.getPaddingBottom(element);\n    return element.offsetHeight - border - padding;\n}\n// Adapted from WinJS\n// Gets the height of the element, including its margins.\nexport function getTotalHeight(element) {\n    let margin = SizeUtils.getMarginTop(element) + SizeUtils.getMarginBottom(element);\n    return element.offsetHeight + margin;\n}\n// ----------------------------------------------------------------------------------------\nexport function isAncestor(testChild, testAncestor) {\n    while (testChild) {\n        if (testChild === testAncestor) {\n            return true;\n        }\n        testChild = testChild.parentNode;\n    }\n    return false;\n}\nexport function findParentWithClass(node, clazz, stopAtClazzOrNode) {\n    while (node && node.nodeType === node.ELEMENT_NODE) {\n        if (node.classList.contains(clazz)) {\n            return node;\n        }\n        if (stopAtClazzOrNode) {\n            if (typeof stopAtClazzOrNode === 'string') {\n                if (node.classList.contains(stopAtClazzOrNode)) {\n                    return null;\n                }\n            }\n            else {\n                if (node === stopAtClazzOrNode) {\n                    return null;\n                }\n            }\n        }\n        node = node.parentNode;\n    }\n    return null;\n}\nexport function hasParentWithClass(node, clazz, stopAtClazzOrNode) {\n    return !!findParentWithClass(node, clazz, stopAtClazzOrNode);\n}\nexport function isShadowRoot(node) {\n    return (node && !!node.host && !!node.mode);\n}\nexport function isInShadowDOM(domNode) {\n    return !!getShadowRoot(domNode);\n}\nexport function getShadowRoot(domNode) {\n    while (domNode.parentNode) {\n        if (domNode === document.body) {\n            // reached the body\n            return null;\n        }\n        domNode = domNode.parentNode;\n    }\n    return isShadowRoot(domNode) ? domNode : null;\n}\nexport function getActiveElement() {\n    let result = document.activeElement;\n    while (result === null || result === void 0 ? void 0 : result.shadowRoot) {\n        result = result.shadowRoot.activeElement;\n    }\n    return result;\n}\nexport function createStyleSheet(container = document.getElementsByTagName('head')[0]) {\n    let style = document.createElement('style');\n    style.type = 'text/css';\n    style.media = 'screen';\n    container.appendChild(style);\n    return style;\n}\nlet _sharedStyleSheet = null;\nfunction getSharedStyleSheet() {\n    if (!_sharedStyleSheet) {\n        _sharedStyleSheet = createStyleSheet();\n    }\n    return _sharedStyleSheet;\n}\nfunction getDynamicStyleSheetRules(style) {\n    var _a, _b;\n    if ((_a = style === null || style === void 0 ? void 0 : style.sheet) === null || _a === void 0 ? void 0 : _a.rules) {\n        // Chrome, IE\n        return style.sheet.rules;\n    }\n    if ((_b = style === null || style === void 0 ? void 0 : style.sheet) === null || _b === void 0 ? void 0 : _b.cssRules) {\n        // FF\n        return style.sheet.cssRules;\n    }\n    return [];\n}\nexport function createCSSRule(selector, cssText, style = getSharedStyleSheet()) {\n    if (!style || !cssText) {\n        return;\n    }\n    style.sheet.insertRule(selector + '{' + cssText + '}', 0);\n}\nexport function removeCSSRulesContainingSelector(ruleName, style = getSharedStyleSheet()) {\n    if (!style) {\n        return;\n    }\n    let rules = getDynamicStyleSheetRules(style);\n    let toDelete = [];\n    for (let i = 0; i < rules.length; i++) {\n        let rule = rules[i];\n        if (rule.selectorText.indexOf(ruleName) !== -1) {\n            toDelete.push(i);\n        }\n    }\n    for (let i = toDelete.length - 1; i >= 0; i--) {\n        style.sheet.deleteRule(toDelete[i]);\n    }\n}\nexport function isHTMLElement(o) {\n    if (typeof HTMLElement === 'object') {\n        return o instanceof HTMLElement;\n    }\n    return o && typeof o === 'object' && o.nodeType === 1 && typeof o.nodeName === 'string';\n}\nexport const EventType = {\n    // Mouse\n    CLICK: 'click',\n    AUXCLICK: 'auxclick',\n    DBLCLICK: 'dblclick',\n    MOUSE_UP: 'mouseup',\n    MOUSE_DOWN: 'mousedown',\n    MOUSE_OVER: 'mouseover',\n    MOUSE_MOVE: 'mousemove',\n    MOUSE_OUT: 'mouseout',\n    MOUSE_ENTER: 'mouseenter',\n    MOUSE_LEAVE: 'mouseleave',\n    MOUSE_WHEEL: 'wheel',\n    POINTER_UP: 'pointerup',\n    POINTER_DOWN: 'pointerdown',\n    POINTER_MOVE: 'pointermove',\n    CONTEXT_MENU: 'contextmenu',\n    WHEEL: 'wheel',\n    // Keyboard\n    KEY_DOWN: 'keydown',\n    KEY_PRESS: 'keypress',\n    KEY_UP: 'keyup',\n    // HTML Document\n    LOAD: 'load',\n    BEFORE_UNLOAD: 'beforeunload',\n    UNLOAD: 'unload',\n    PAGE_SHOW: 'pageshow',\n    PAGE_HIDE: 'pagehide',\n    ABORT: 'abort',\n    ERROR: 'error',\n    RESIZE: 'resize',\n    SCROLL: 'scroll',\n    FULLSCREEN_CHANGE: 'fullscreenchange',\n    WK_FULLSCREEN_CHANGE: 'webkitfullscreenchange',\n    // Form\n    SELECT: 'select',\n    CHANGE: 'change',\n    SUBMIT: 'submit',\n    RESET: 'reset',\n    FOCUS: 'focus',\n    FOCUS_IN: 'focusin',\n    FOCUS_OUT: 'focusout',\n    BLUR: 'blur',\n    INPUT: 'input',\n    // Local Storage\n    STORAGE: 'storage',\n    // Drag\n    DRAG_START: 'dragstart',\n    DRAG: 'drag',\n    DRAG_ENTER: 'dragenter',\n    DRAG_LEAVE: 'dragleave',\n    DRAG_OVER: 'dragover',\n    DROP: 'drop',\n    DRAG_END: 'dragend',\n    // Animation\n    ANIMATION_START: browser.isWebKit ? 'webkitAnimationStart' : 'animationstart',\n    ANIMATION_END: browser.isWebKit ? 'webkitAnimationEnd' : 'animationend',\n    ANIMATION_ITERATION: browser.isWebKit ? 'webkitAnimationIteration' : 'animationiteration'\n};\nexport const EventHelper = {\n    stop: function (e, cancelBubble) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n        else {\n            // IE8\n            e.returnValue = false;\n        }\n        if (cancelBubble) {\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n            else {\n                // IE8\n                e.cancelBubble = true;\n            }\n        }\n    }\n};\nexport function saveParentsScrollTop(node) {\n    let r = [];\n    for (let i = 0; node && node.nodeType === node.ELEMENT_NODE; i++) {\n        r[i] = node.scrollTop;\n        node = node.parentNode;\n    }\n    return r;\n}\nexport function restoreParentsScrollTop(node, state) {\n    for (let i = 0; node && node.nodeType === node.ELEMENT_NODE; i++) {\n        if (node.scrollTop !== state[i]) {\n            node.scrollTop = state[i];\n        }\n        node = node.parentNode;\n    }\n}\nclass FocusTracker extends Disposable {\n    constructor(element) {\n        super();\n        this._onDidFocus = this._register(new event.Emitter());\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = this._register(new event.Emitter());\n        this.onDidBlur = this._onDidBlur.event;\n        let hasFocus = FocusTracker.hasFocusWithin(element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                window.setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            let currentNodeHasFocus = FocusTracker.hasFocusWithin(element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        this._register(addDisposableListener(element, EventType.FOCUS, onFocus, true));\n        this._register(addDisposableListener(element, EventType.BLUR, onBlur, true));\n        this._register(addDisposableListener(element, EventType.FOCUS_IN, () => this._refreshStateHandler()));\n        this._register(addDisposableListener(element, EventType.FOCUS_OUT, () => this._refreshStateHandler()));\n    }\n    static hasFocusWithin(element) {\n        const shadowRoot = getShadowRoot(element);\n        const activeElement = (shadowRoot ? shadowRoot.activeElement : document.activeElement);\n        return isAncestor(activeElement, element);\n    }\n}\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\nexport function append(parent, ...children) {\n    parent.append(...children);\n    if (children.length === 1 && typeof children[0] !== 'string') {\n        return children[0];\n    }\n}\nexport function prepend(parent, child) {\n    parent.insertBefore(child, parent.firstChild);\n    return child;\n}\n/**\n * Removes all children from `parent` and appends `children`\n */\nexport function reset(parent, ...children) {\n    parent.innerText = '';\n    append(parent, ...children);\n}\nconst SELECTOR_REGEX = /([\\w\\-]+)?(#([\\w\\-]+))?((\\.([\\w\\-]+))*)/;\nexport var Namespace;\n(function (Namespace) {\n    Namespace[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    Namespace[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n})(Namespace || (Namespace = {}));\nfunction _$(namespace, description, attrs, ...children) {\n    let match = SELECTOR_REGEX.exec(description);\n    if (!match) {\n        throw new Error('Bad use of emmet');\n    }\n    attrs = Object.assign({}, (attrs || {}));\n    let tagName = match[1] || 'div';\n    let result;\n    if (namespace !== Namespace.HTML) {\n        result = document.createElementNS(namespace, tagName);\n    }\n    else {\n        result = document.createElement(tagName);\n    }\n    if (match[3]) {\n        result.id = match[3];\n    }\n    if (match[4]) {\n        result.className = match[4].replace(/\\./g, ' ').trim();\n    }\n    Object.keys(attrs).forEach(name => {\n        const value = attrs[name];\n        if (typeof value === 'undefined') {\n            return;\n        }\n        if (/^on\\w+$/.test(name)) {\n            result[name] = value;\n        }\n        else if (name === 'selected') {\n            if (value) {\n                result.setAttribute(name, 'true');\n            }\n        }\n        else {\n            result.setAttribute(name, value);\n        }\n    });\n    result.append(...children);\n    return result;\n}\nexport function $(description, attrs, ...children) {\n    return _$(Namespace.HTML, description, attrs, ...children);\n}\n$.SVG = function (description, attrs, ...children) {\n    return _$(Namespace.SVG, description, attrs, ...children);\n};\nexport function show(...elements) {\n    for (let element of elements) {\n        element.style.display = '';\n        element.removeAttribute('aria-hidden');\n    }\n}\nexport function hide(...elements) {\n    for (let element of elements) {\n        element.style.display = 'none';\n        element.setAttribute('aria-hidden', 'true');\n    }\n}\nexport function getElementsByTagName(tag) {\n    return Array.prototype.slice.call(document.getElementsByTagName(tag), 0);\n}\n/**\n * Find a value usable for a dom node size such that the likelihood that it would be\n * displayed with constant screen pixels size is as high as possible.\n *\n * e.g. We would desire for the cursors to be 2px (CSS px) wide. Under a devicePixelRatio\n * of 1.25, the cursor will be 2.5 screen pixels wide. Depending on how the dom node aligns/\"snaps\"\n * with the screen pixels, it will sometimes be rendered with 2 screen pixels, and sometimes with 3 screen pixels.\n */\nexport function computeScreenAwareSize(cssPx) {\n    const screenPx = window.devicePixelRatio * cssPx;\n    return Math.max(1, Math.floor(screenPx)) / window.devicePixelRatio;\n}\n/**\n * Open safely a new window. This is the best way to do so, but you cannot tell\n * if the window was opened or if it was blocked by the browser's popup blocker.\n * If you want to tell if the browser blocked the new window, use {@link windowOpenWithSuccess}.\n *\n * See https://github.com/microsoft/monaco-editor/issues/601\n * To protect against malicious code in the linked site, particularly phishing attempts,\n * the window.opener should be set to null to prevent the linked site from having access\n * to change the location of the current page.\n * See https://mathiasbynens.github.io/rel-noopener/\n */\nexport function windowOpenNoOpener(url) {\n    // By using 'noopener' in the `windowFeatures` argument, the newly created window will\n    // not be able to use `window.opener` to reach back to the current page.\n    // See https://stackoverflow.com/a/46958731\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Window/open#noopener\n    // However, this also doesn't allow us to realize if the browser blocked\n    // the creation of the window.\n    window.open(url, '_blank', 'noopener');\n}\nexport function animate(fn) {\n    const step = () => {\n        fn();\n        stepDisposable = scheduleAtNextAnimationFrame(step);\n    };\n    let stepDisposable = scheduleAtNextAnimationFrame(step);\n    return toDisposable(() => stepDisposable.dispose());\n}\nRemoteAuthorities.setPreferredWebSchema(/^https:/.test(window.location.href) ? 'https' : 'http');\n/**\n * returns url('...')\n */\nexport function asCSSUrl(uri) {\n    if (!uri) {\n        return `url('')`;\n    }\n    return `url('${FileAccess.asBrowserUri(uri).toString(true).replace(/'/g, '%27')}')`;\n}\nexport function asCSSPropertyValue(value) {\n    return `'${value.replace(/'/g, '%27')}'`;\n}\nexport class ModifierKeyEmitter extends event.Emitter {\n    constructor() {\n        super();\n        this._subscriptions = new DisposableStore();\n        this._keyStatus = {\n            altKey: false,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false\n        };\n        this._subscriptions.add(addDisposableListener(window, 'keydown', e => {\n            if (e.defaultPrevented) {\n                return;\n            }\n            const event = new StandardKeyboardEvent(e);\n            // If Alt-key keydown event is repeated, ignore it #112347\n            // Only known to be necessary for Alt-Key at the moment #115810\n            if (event.keyCode === 6 /* Alt */ && e.repeat) {\n                return;\n            }\n            if (e.altKey && !this._keyStatus.altKey) {\n                this._keyStatus.lastKeyPressed = 'alt';\n            }\n            else if (e.ctrlKey && !this._keyStatus.ctrlKey) {\n                this._keyStatus.lastKeyPressed = 'ctrl';\n            }\n            else if (e.metaKey && !this._keyStatus.metaKey) {\n                this._keyStatus.lastKeyPressed = 'meta';\n            }\n            else if (e.shiftKey && !this._keyStatus.shiftKey) {\n                this._keyStatus.lastKeyPressed = 'shift';\n            }\n            else if (event.keyCode !== 6 /* Alt */) {\n                this._keyStatus.lastKeyPressed = undefined;\n            }\n            else {\n                return;\n            }\n            this._keyStatus.altKey = e.altKey;\n            this._keyStatus.ctrlKey = e.ctrlKey;\n            this._keyStatus.metaKey = e.metaKey;\n            this._keyStatus.shiftKey = e.shiftKey;\n            if (this._keyStatus.lastKeyPressed) {\n                this._keyStatus.event = e;\n                this.fire(this._keyStatus);\n            }\n        }, true));\n        this._subscriptions.add(addDisposableListener(window, 'keyup', e => {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (!e.altKey && this._keyStatus.altKey) {\n                this._keyStatus.lastKeyReleased = 'alt';\n            }\n            else if (!e.ctrlKey && this._keyStatus.ctrlKey) {\n                this._keyStatus.lastKeyReleased = 'ctrl';\n            }\n            else if (!e.metaKey && this._keyStatus.metaKey) {\n                this._keyStatus.lastKeyReleased = 'meta';\n            }\n            else if (!e.shiftKey && this._keyStatus.shiftKey) {\n                this._keyStatus.lastKeyReleased = 'shift';\n            }\n            else {\n                this._keyStatus.lastKeyReleased = undefined;\n            }\n            if (this._keyStatus.lastKeyPressed !== this._keyStatus.lastKeyReleased) {\n                this._keyStatus.lastKeyPressed = undefined;\n            }\n            this._keyStatus.altKey = e.altKey;\n            this._keyStatus.ctrlKey = e.ctrlKey;\n            this._keyStatus.metaKey = e.metaKey;\n            this._keyStatus.shiftKey = e.shiftKey;\n            if (this._keyStatus.lastKeyReleased) {\n                this._keyStatus.event = e;\n                this.fire(this._keyStatus);\n            }\n        }, true));\n        this._subscriptions.add(addDisposableListener(document.body, 'mousedown', () => {\n            this._keyStatus.lastKeyPressed = undefined;\n        }, true));\n        this._subscriptions.add(addDisposableListener(document.body, 'mouseup', () => {\n            this._keyStatus.lastKeyPressed = undefined;\n        }, true));\n        this._subscriptions.add(addDisposableListener(document.body, 'mousemove', e => {\n            if (e.buttons) {\n                this._keyStatus.lastKeyPressed = undefined;\n            }\n        }, true));\n        this._subscriptions.add(addDisposableListener(window, 'blur', () => {\n            this.resetKeyStatus();\n        }));\n    }\n    get keyStatus() {\n        return this._keyStatus;\n    }\n    /**\n     * Allows to explicitly reset the key status based on more knowledge (#109062)\n     */\n    resetKeyStatus() {\n        this.doResetKeyStatus();\n        this.fire(this._keyStatus);\n    }\n    doResetKeyStatus() {\n        this._keyStatus = {\n            altKey: false,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false\n        };\n    }\n    static getInstance() {\n        if (!ModifierKeyEmitter.instance) {\n            ModifierKeyEmitter.instance = new ModifierKeyEmitter();\n        }\n        return ModifierKeyEmitter.instance;\n    }\n    dispose() {\n        super.dispose();\n        this._subscriptions.dispose();\n    }\n}\nexport function addMatchMediaChangeListener(query, callback) {\n    const mediaQueryList = window.matchMedia(query);\n    mediaQueryList.addEventListener('change', callback);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './aria.css';\n// Use a max length since we are inserting the whole msg in the DOM and that can cause browsers to freeze for long messages #94233\nconst MAX_MESSAGE_LENGTH = 20000;\nlet ariaContainer;\nlet alertContainer;\nlet alertContainer2;\nlet statusContainer;\nlet statusContainer2;\nexport function setARIAContainer(parent) {\n    ariaContainer = document.createElement('div');\n    ariaContainer.className = 'monaco-aria-container';\n    const createAlertContainer = () => {\n        const element = document.createElement('div');\n        element.className = 'monaco-alert';\n        element.setAttribute('role', 'alert');\n        element.setAttribute('aria-atomic', 'true');\n        ariaContainer.appendChild(element);\n        return element;\n    };\n    alertContainer = createAlertContainer();\n    alertContainer2 = createAlertContainer();\n    const createStatusContainer = () => {\n        const element = document.createElement('div');\n        element.className = 'monaco-status';\n        element.setAttribute('role', 'complementary');\n        element.setAttribute('aria-live', 'polite');\n        element.setAttribute('aria-atomic', 'true');\n        ariaContainer.appendChild(element);\n        return element;\n    };\n    statusContainer = createStatusContainer();\n    statusContainer2 = createStatusContainer();\n    parent.appendChild(ariaContainer);\n}\n/**\n * Given the provided message, will make sure that it is read as alert to screen readers.\n */\nexport function alert(msg) {\n    if (!ariaContainer) {\n        return;\n    }\n    // Use alternate containers such that duplicated messages get read out by screen readers #99466\n    if (alertContainer.textContent !== msg) {\n        dom.clearNode(alertContainer2);\n        insertMessage(alertContainer, msg);\n    }\n    else {\n        dom.clearNode(alertContainer);\n        insertMessage(alertContainer2, msg);\n    }\n}\n/**\n * Given the provided message, will make sure that it is read as status to screen readers.\n */\nexport function status(msg) {\n    if (!ariaContainer) {\n        return;\n    }\n    if (isMacintosh) {\n        alert(msg); // VoiceOver does not seem to support status role\n    }\n    else {\n        if (statusContainer.textContent !== msg) {\n            dom.clearNode(statusContainer2);\n            insertMessage(statusContainer, msg);\n        }\n        else {\n            dom.clearNode(statusContainer);\n            insertMessage(statusContainer2, msg);\n        }\n    }\n}\nfunction insertMessage(target, msg) {\n    dom.clearNode(target);\n    if (msg.length > MAX_MESSAGE_LENGTH) {\n        msg = msg.substr(0, MAX_MESSAGE_LENGTH);\n    }\n    target.textContent = msg;\n    // See https://www.paciellogroup.com/blog/2012/06/html5-accessibility-chops-aria-rolealert-browser-support/\n    target.style.visibility = 'hidden';\n    target.style.visibility = 'visible';\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction roundFloat(number, decimalPoints) {\n    const decimal = Math.pow(10, decimalPoints);\n    return Math.round(number * decimal) / decimal;\n}\nexport class RGBA {\n    constructor(r, g, b, a = 1) {\n        this._rgbaBrand = undefined;\n        this.r = Math.min(255, Math.max(0, r)) | 0;\n        this.g = Math.min(255, Math.max(0, g)) | 0;\n        this.b = Math.min(255, Math.max(0, b)) | 0;\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n    }\n}\nexport class HSLA {\n    constructor(h, s, l, a) {\n        this._hslaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n    }\n    /**\n     * Converts an RGB color value to HSL. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes r, g, and b are contained in the set [0, 255] and\n     * returns h in the set [0, 360], s, and l in the set [0, 1].\n     */\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const a = rgba.a;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h = 0;\n        let s = 0;\n        const l = (min + max) / 2;\n        const chroma = max - min;\n        if (chroma > 0) {\n            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n            switch (max) {\n                case r:\n                    h = (g - b) / chroma + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / chroma + 2;\n                    break;\n                case b:\n                    h = (r - g) / chroma + 4;\n                    break;\n            }\n            h *= 60;\n            h = Math.round(h);\n        }\n        return new HSLA(h, s, l, a);\n    }\n    static _hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    /**\n     * Converts an HSL color value to RGB. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes h in the set [0, 360] s, and l are contained in the set [0, 1] and\n     * returns r, g, and b in the set [0, 255].\n     */\n    static toRGBA(hsla) {\n        const h = hsla.h / 360;\n        const { s, l, a } = hsla;\n        let r, g, b;\n        if (s === 0) {\n            r = g = b = l; // achromatic\n        }\n        else {\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = HSLA._hue2rgb(p, q, h + 1 / 3);\n            g = HSLA._hue2rgb(p, q, h);\n            b = HSLA._hue2rgb(p, q, h - 1 / 3);\n        }\n        return new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);\n    }\n}\nexport class HSVA {\n    constructor(h, s, v, a) {\n        this._hsvaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n    }\n    // from http://www.rapidtables.com/convert/color/rgb-to-hsv.htm\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const cmax = Math.max(r, g, b);\n        const cmin = Math.min(r, g, b);\n        const delta = cmax - cmin;\n        const s = cmax === 0 ? 0 : (delta / cmax);\n        let m;\n        if (delta === 0) {\n            m = 0;\n        }\n        else if (cmax === r) {\n            m = ((((g - b) / delta) % 6) + 6) % 6;\n        }\n        else if (cmax === g) {\n            m = ((b - r) / delta) + 2;\n        }\n        else {\n            m = ((r - g) / delta) + 4;\n        }\n        return new HSVA(Math.round(m * 60), s, cmax, rgba.a);\n    }\n    // from http://www.rapidtables.com/convert/color/hsv-to-rgb.htm\n    static toRGBA(hsva) {\n        const { h, s, v, a } = hsva;\n        const c = v * s;\n        const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        const m = v - c;\n        let [r, g, b] = [0, 0, 0];\n        if (h < 60) {\n            r = c;\n            g = x;\n        }\n        else if (h < 120) {\n            r = x;\n            g = c;\n        }\n        else if (h < 180) {\n            g = c;\n            b = x;\n        }\n        else if (h < 240) {\n            g = x;\n            b = c;\n        }\n        else if (h < 300) {\n            r = x;\n            b = c;\n        }\n        else if (h <= 360) {\n            r = c;\n            b = x;\n        }\n        r = Math.round((r + m) * 255);\n        g = Math.round((g + m) * 255);\n        b = Math.round((b + m) * 255);\n        return new RGBA(r, g, b, a);\n    }\n}\nexport class Color {\n    constructor(arg) {\n        if (!arg) {\n            throw new Error('Color needs a value');\n        }\n        else if (arg instanceof RGBA) {\n            this.rgba = arg;\n        }\n        else if (arg instanceof HSLA) {\n            this._hsla = arg;\n            this.rgba = HSLA.toRGBA(arg);\n        }\n        else if (arg instanceof HSVA) {\n            this._hsva = arg;\n            this.rgba = HSVA.toRGBA(arg);\n        }\n        else {\n            throw new Error('Invalid color ctor argument');\n        }\n    }\n    static fromHex(hex) {\n        return Color.Format.CSS.parseHex(hex) || Color.red;\n    }\n    get hsla() {\n        if (this._hsla) {\n            return this._hsla;\n        }\n        else {\n            return HSLA.fromRGBA(this.rgba);\n        }\n    }\n    get hsva() {\n        if (this._hsva) {\n            return this._hsva;\n        }\n        return HSVA.fromRGBA(this.rgba);\n    }\n    equals(other) {\n        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n    }\n    /**\n     * http://www.w3.org/TR/WCAG20/#relativeluminancedef\n     * Returns the number in the set [0, 1]. O => Darkest Black. 1 => Lightest white.\n     */\n    getRelativeLuminance() {\n        const R = Color._relativeLuminanceForComponent(this.rgba.r);\n        const G = Color._relativeLuminanceForComponent(this.rgba.g);\n        const B = Color._relativeLuminanceForComponent(this.rgba.b);\n        const luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n        return roundFloat(luminance, 4);\n    }\n    static _relativeLuminanceForComponent(color) {\n        const c = color / 255;\n        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n    }\n    /**\n     *\thttp://24ways.org/2010/calculating-color-contrast\n     *  Return 'true' if lighter color otherwise 'false'\n     */\n    isLighter() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq >= 128;\n    }\n    isLighterThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2;\n    }\n    isDarkerThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 < lum2;\n    }\n    lighten(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a));\n    }\n    darken(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a));\n    }\n    transparent(factor) {\n        const { r, g, b, a } = this.rgba;\n        return new Color(new RGBA(r, g, b, a * factor));\n    }\n    isTransparent() {\n        return this.rgba.a === 0;\n    }\n    isOpaque() {\n        return this.rgba.a === 1;\n    }\n    opposite() {\n        return new Color(new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));\n    }\n    toString() {\n        if (!this._toString) {\n            this._toString = Color.Format.CSS.format(this);\n        }\n        return this._toString;\n    }\n    static getLighterColor(of, relative, factor) {\n        if (of.isLighterThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum2 - lum1) / lum2;\n        return of.lighten(factor);\n    }\n    static getDarkerColor(of, relative, factor) {\n        if (of.isDarkerThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum1 - lum2) / lum1;\n        return of.darken(factor);\n    }\n}\nColor.white = new Color(new RGBA(255, 255, 255, 1));\nColor.black = new Color(new RGBA(0, 0, 0, 1));\nColor.red = new Color(new RGBA(255, 0, 0, 1));\nColor.blue = new Color(new RGBA(0, 0, 255, 1));\nColor.green = new Color(new RGBA(0, 255, 0, 1));\nColor.cyan = new Color(new RGBA(0, 255, 255, 1));\nColor.lightgrey = new Color(new RGBA(211, 211, 211, 1));\nColor.transparent = new Color(new RGBA(0, 0, 0, 0));\n(function (Color) {\n    let Format;\n    (function (Format) {\n        let CSS;\n        (function (CSS) {\n            function formatRGB(color) {\n                if (color.rgba.a === 1) {\n                    return `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.formatRGB = formatRGB;\n            function formatRGBA(color) {\n                return `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n            }\n            CSS.formatRGBA = formatRGBA;\n            function formatHSL(color) {\n                if (color.hsla.a === 1) {\n                    return `hsl(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%)`;\n                }\n                return Color.Format.CSS.formatHSLA(color);\n            }\n            CSS.formatHSL = formatHSL;\n            function formatHSLA(color) {\n                return `hsla(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%, ${color.hsla.a.toFixed(2)})`;\n            }\n            CSS.formatHSLA = formatHSLA;\n            function _toTwoDigitHex(n) {\n                const r = n.toString(16);\n                return r.length !== 2 ? '0' + r : r;\n            }\n            /**\n             * Formats the color as #RRGGBB\n             */\n            function formatHex(color) {\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n            }\n            CSS.formatHex = formatHex;\n            /**\n             * Formats the color as #RRGGBBAA\n             * If 'compact' is set, colors without transparancy will be printed as #RRGGBB\n             */\n            function formatHexA(color, compact = false) {\n                if (compact && color.rgba.a === 1) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n            }\n            CSS.formatHexA = formatHexA;\n            /**\n             * The default format will use HEX if opaque and RGBA otherwise.\n             */\n            function format(color) {\n                if (color.isOpaque()) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.format = format;\n            /**\n             * Converts an Hex color value to a Color.\n             * returns r, g, and b are contained in the set [0, 255]\n             * @param hex string (#RGB, #RGBA, #RRGGBB or #RRGGBBAA).\n             */\n            function parseHex(hex) {\n                const length = hex.length;\n                if (length === 0) {\n                    // Invalid color\n                    return null;\n                }\n                if (hex.charCodeAt(0) !== 35 /* Hash */) {\n                    // Does not begin with a #\n                    return null;\n                }\n                if (length === 7) {\n                    // #RRGGBB format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    return new Color(new RGBA(r, g, b, 1));\n                }\n                if (length === 9) {\n                    // #RRGGBBAA format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    const a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n                    return new Color(new RGBA(r, g, b, a / 255));\n                }\n                if (length === 4) {\n                    // #RGB format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b));\n                }\n                if (length === 5) {\n                    // #RGBA format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    const a = _parseHexDigit(hex.charCodeAt(4));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255));\n                }\n                // Invalid color\n                return null;\n            }\n            CSS.parseHex = parseHex;\n            function _parseHexDigit(charCode) {\n                switch (charCode) {\n                    case 48 /* Digit0 */: return 0;\n                    case 49 /* Digit1 */: return 1;\n                    case 50 /* Digit2 */: return 2;\n                    case 51 /* Digit3 */: return 3;\n                    case 52 /* Digit4 */: return 4;\n                    case 53 /* Digit5 */: return 5;\n                    case 54 /* Digit6 */: return 6;\n                    case 55 /* Digit7 */: return 7;\n                    case 56 /* Digit8 */: return 8;\n                    case 57 /* Digit9 */: return 9;\n                    case 97 /* a */: return 10;\n                    case 65 /* A */: return 10;\n                    case 98 /* b */: return 11;\n                    case 66 /* B */: return 11;\n                    case 99 /* c */: return 12;\n                    case 67 /* C */: return 12;\n                    case 100 /* d */: return 13;\n                    case 68 /* D */: return 13;\n                    case 101 /* e */: return 14;\n                    case 69 /* E */: return 14;\n                    case 102 /* f */: return 15;\n                    case 70 /* F */: return 15;\n                }\n                return 0;\n            }\n        })(CSS = Format.CSS || (Format.CSS = {}));\n    })(Format = Color.Format || (Color.Format = {}));\n})(Color || (Color = {}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport * as platform from '../../registry/common/platform.js';\nexport const Extensions = {\n    JSONContribution: 'base.contributions.json'\n};\nfunction normalizeId(id) {\n    if (id.length > 0 && id.charAt(id.length - 1) === '#') {\n        return id.substring(0, id.length - 1);\n    }\n    return id;\n}\nclass JSONContributionRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.schemasById = {};\n    }\n    registerSchema(uri, unresolvedSchemaContent) {\n        this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n        this._onDidChangeSchema.fire(uri);\n    }\n    notifySchemaChanged(uri) {\n        this._onDidChangeSchema.fire(uri);\n    }\n}\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { assertNever } from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n    return `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\n// color registry\nexport const Extensions = {\n    ColorContribution: 'base.contributions.colors'\n};\nclass ColorRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\n        this.colorSchema = { type: 'object', properties: {} };\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\n        this.colorsById = {};\n    }\n    registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n        let colorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n        this.colorsById[id] = colorContribution;\n        let propertySchema = { type: 'string', description, format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        this.colorSchema.properties[id] = propertySchema;\n        this.colorReferenceSchema.enum.push(id);\n        this.colorReferenceSchema.enumDescriptions.push(description);\n        this._onDidChangeSchema.fire();\n        return id;\n    }\n    getColors() {\n        return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n    }\n    resolveDefaultColor(id, theme) {\n        const colorDesc = this.colorsById[id];\n        if (colorDesc && colorDesc.defaults) {\n            const colorValue = colorDesc.defaults[theme.type];\n            return resolveColorValue(colorValue, theme);\n        }\n        return undefined;\n    }\n    getColorSchema() {\n        return this.colorSchema;\n    }\n    toString() {\n        let sorter = (a, b) => {\n            let cat1 = a.indexOf('.') === -1 ? 0 : 1;\n            let cat2 = b.indexOf('.') === -1 ? 0 : 1;\n            if (cat1 !== cat2) {\n                return cat1 - cat2;\n            }\n            return a.localeCompare(b);\n        };\n        return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n    }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n    return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n}\n// ----- base colors\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hc: '#FFFFFF' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hc: '#F48771' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hc: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hc: '#FFFFFF' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hc: '#F38518' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hc: '#6FC3DF' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hc: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport const selectionBackground = registerColor('selection.background', { light: null, dark: null, hc: null }, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text colors\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hc: Color.black }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hc: '#3794FF' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hc: '#3794FF' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hc: '#D7BA7D' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#7f7f7f1a', dark: '#7f7f7f1a', hc: null }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hc: Color.white }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hc: Color.black }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n// ----- widgets\nexport const widgetShadow = registerColor('widget.shadow', { dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hc: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hc: Color.black }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', { dark: foreground, light: foreground, hc: foreground }, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC00', light: '#007ACC00', hc: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hc: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hc: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hc: null }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hc: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hc: Color.black }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hc: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hc: Color.black }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hc: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hc: Color.black }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hc: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hc: Color.black }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hc: Color.black }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: null, hc: Color.white }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hc: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\nexport const simpleCheckboxBackground = registerColor('checkbox.background', { dark: selectBackground, light: selectBackground, hc: selectBackground }, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const simpleCheckboxForeground = registerColor('checkbox.foreground', { dark: selectForeground, light: selectForeground, hc: selectForeground }, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const simpleCheckboxBorder = registerColor('checkbox.border', { dark: selectBorder, light: selectBorder, hc: selectBorder }, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const buttonForeground = registerColor('button.foreground', { dark: Color.white, light: Color.white, hc: Color.white }, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hc: null }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hc: null }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', { dark: contrastBorder, light: contrastBorder, hc: contrastBorder }, nls.localize('buttonBorder', \"Button border color.\"));\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hc: Color.white }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hc: null }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hc: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hc: Color.black }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hc: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hc: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hc: transparent(contrastBorder, 0.6) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hc: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hc: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hc: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\nexport const editorErrorBackground = registerColor('editorError.background', { dark: null, light: null, hc: null }, nls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorErrorForeground = registerColor('editorError.foreground', { dark: '#F14C4C', light: '#E51400', hc: null }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport const editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hc: Color.fromHex('#E47777').transparent(0.8) }, nls.localize('errorBorder', 'Border color of error boxes in the editor.'));\nexport const editorWarningBackground = registerColor('editorWarning.background', { dark: null, light: null, hc: null }, nls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#BF8803', hc: null }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport const editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hc: Color.fromHex('#FFCC00').transparent(0.8) }, nls.localize('warningBorder', 'Border color of warning boxes in the editor.'));\nexport const editorInfoBackground = registerColor('editorInfo.background', { dark: null, light: null, hc: null }, nls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#3794FF', light: '#1a85ff', hc: '#3794FF' }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport const editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hc: Color.fromHex('#3794FF').transparent(0.8) }, nls.localize('infoBorder', 'Border color of info boxes in the editor.'));\nexport const editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hc: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport const editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hc: Color.fromHex('#eeeeee').transparent(0.8) }, nls.localize('hintBorder', 'Border color of hint boxes in the editor.'));\nexport const sashHoverBorder = registerColor('sash.hoverBorder', { dark: focusBorder, light: focusBorder, hc: focusBorder }, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n/**\n * Editor background color.\n * Because of bug https://monacotools.visualstudio.com/DefaultCollection/Monaco/_workitems/edit/13254\n * we are *not* using the color white (or #ffffff, rgba(255,255,255)) but something very close to white.\n */\nexport const editorBackground = registerColor('editor.background', { light: '#fffffe', dark: '#1E1E1E', hc: Color.black }, nls.localize('editorBackground', \"Editor background color.\"));\n/**\n * Editor foreground color.\n */\nexport const editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hc: Color.white }, nls.localize('editorForeground', \"Editor default foreground color.\"));\n/**\n * Editor widgets\n */\nexport const editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hc: '#0C141F' }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport const editorWidgetForeground = registerColor('editorWidget.foreground', { dark: foreground, light: foreground, hc: foreground }, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport const editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hc: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', { light: null, dark: null, hc: null }, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\n/**\n * Quick pick widget\n */\nexport const quickInputBackground = registerColor('quickInput.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', { dark: editorWidgetForeground, light: editorWidgetForeground, hc: editorWidgetForeground }, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hc: '#000000' }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hc: Color.white }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hc: Color.white }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\n/**\n * Keybinding label\n */\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hc: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hc: Color.white }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hc: new Color(new RGBA(111, 195, 223)) }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hc: new Color(new RGBA(111, 195, 223)) }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n/**\n * Editor selection colors.\n */\nexport const editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hc: '#f3f518' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport const editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hc: '#000000' }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hc: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hc: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n/**\n * Editor find match colors.\n */\nexport const editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hc: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hc: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hc: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hc: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n/**\n * Search Editor query match colors.\n *\n * Distinct from normal editor find match to allow for better differentiation\n */\nexport const searchEditorFindMatch = registerColor('searchEditor.findMatchBackground', { light: transparent(editorFindMatchHighlight, 0.66), dark: transparent(editorFindMatchHighlight, 0.66), hc: editorFindMatchHighlight }, nls.localize('searchEditor.queryMatch', \"Color of the Search Editor query matches.\"));\nexport const searchEditorFindMatchBorder = registerColor('searchEditor.findMatchBorder', { light: transparent(editorFindMatchHighlightBorder, 0.66), dark: transparent(editorFindMatchHighlightBorder, 0.66), hc: editorFindMatchHighlightBorder }, nls.localize('searchEditor.editorFindMatchBorder', \"Border color of the Search Editor query matches.\"));\n/**\n * Editor hover\n */\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hc: '#ADD6FF26' }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorHoverBackground = registerColor('editorHoverWidget.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground', { light: editorWidgetForeground, dark: editorWidgetForeground, hc: editorWidgetForeground }, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport const editorHoverBorder = registerColor('editorHoverWidget.border', { light: editorWidgetBorder, dark: editorWidgetBorder, hc: editorWidgetBorder }, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hc: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n/**\n * Editor link colors\n */\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hc: Color.cyan }, nls.localize('activeLinkForeground', 'Color of active links.'));\n/**\n * Inline hints\n */\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground', { dark: transparent(badgeForeground, .8), light: transparent(badgeForeground, .8), hc: badgeForeground }, nls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background', { dark: transparent(badgeBackground, .6), light: transparent(badgeBackground, .3), hc: badgeBackground }, nls.localize('editorInlayHintBackground', 'Background color of inline hints'));\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hc: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hc: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hc: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hc: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n/**\n * Editor lighbulb icon colors\n */\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hc: '#FFCC00' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hc: '#75BEFF' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\n/**\n * Diff Editor Colors\n */\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, 0.2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, 0.2));\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: defaultInsertColor, light: defaultInsertColor, hc: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hc: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLine = registerColor('diffEditor.insertedLineBackground', { dark: null, light: null, hc: null }, nls.localize('diffEditorInsertedLines', 'Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemovedLine = registerColor('diffEditor.removedLineBackground', { dark: null, light: null, hc: null }, nls.localize('diffEditorRemovedLines', 'Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLineGutter = registerColor('diffEditorGutter.insertedLineBackground', { dark: null, light: null, hc: null }, nls.localize('diffEditorInsertedLineGutter', 'Background color for the margin where lines got inserted.'));\nexport const diffRemovedLineGutter = registerColor('diffEditorGutter.removedLineBackground', { dark: null, light: null, hc: null }, nls.localize('diffEditorRemovedLineGutter', 'Background color for the margin where lines got removed.'));\nexport const diffOverviewRulerInserted = registerColor('diffEditorOverview.insertedForeground', { dark: null, light: null, hc: null }, nls.localize('diffEditorOverviewInserted', 'Diff overview ruler foreground for inserted content.'));\nexport const diffOverviewRulerRemoved = registerColor('diffEditorOverview.removedForeground', { dark: null, light: null, hc: null }, nls.localize('diffEditorOverviewRemoved', 'Diff overview ruler foreground for removed content.'));\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hc: '#33ff2eff' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hc: '#FF008F' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport const diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill', { dark: '#cccccc33', light: '#22222233', hc: null }, nls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\n/**\n * List and tree colors\n */\nexport const listFocusBackground = registerColor('list.focusBackground', { dark: null, light: null, hc: null }, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', { dark: null, light: null, hc: null }, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hc: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#094771', light: '#0060C0', hc: null }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hc: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', { dark: null, light: null, hc: null }, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hc: null }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', { dark: null, light: null, hc: null }, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', { dark: null, light: null, hc: null }, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', { dark: null, light: null, hc: null }, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', { dark: null, light: null, hc: null }, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hc: null }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', { dark: null, light: null, hc: null }, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hc: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items around using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#18A3FF', light: '#0066BF', hc: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#9DDDFF'), hc: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hc: '#B89500' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hc: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hc: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: '#efc1ad', dark: '#653723', hc: Color.black }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hc: '#f38518' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hc: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hc: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hc: contrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hc: '#a9a9a9' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hc: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hc: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hc: '#A7A8A9' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized. \"));\n/**\n * Quick pick widget (dependent on List and tree colors)\n */\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', { dark: null, light: null, hc: null }, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hc: listActiveSelectionForeground }, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', { dark: listActiveSelectionIconForeground, light: listActiveSelectionIconForeground, hc: listActiveSelectionIconForeground }, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hc: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n/**\n * Menu colors\n */\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', { dark: selectForeground, light: foreground, hc: selectForeground }, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', { dark: selectBackground, light: selectBackground, hc: selectBackground }, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hc: listActiveSelectionForeground }, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', { dark: listActiveSelectionBackground, light: listActiveSelectionBackground, hc: listActiveSelectionBackground }, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#BBBBBB', light: '#888888', hc: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n/**\n * Toolbar colors\n */\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground', { dark: '#5a5d5e50', light: '#b8b8b850', hc: null }, nls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground', { dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hc: null }, nls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n/**\n * Snippet placeholder colors\n */\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hc: new Color(new RGBA(124, 124, 124, 0.3)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', { dark: null, light: null, hc: null }, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', { dark: null, light: null, hc: null }, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hc: '#525252' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n/**\n * Breadcrumb colors\n */\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground', { light: transparent(foreground, 0.8), dark: transparent(foreground, 0.8), hc: transparent(foreground, 0.8) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsBackground = registerColor('breadcrumb.background', { light: editorBackground, dark: editorBackground, hc: editorBackground }, nls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hc: lighten(foreground, 0.1) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hc: lighten(foreground, 0.1) }, nls.localize('breadcrumbsSelectedForegound', \"Color of selected breadcrumb items.\"));\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n/**\n * Merge-conflict colors\n */\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground', { dark: currentBaseColor, light: currentBaseColor, hc: null }, nls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground', { dark: transparent(mergeCurrentHeaderBackground, contentTransparency), light: transparent(mergeCurrentHeaderBackground, contentTransparency), hc: transparent(mergeCurrentHeaderBackground, contentTransparency) }, nls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground', { dark: incomingBaseColor, light: incomingBaseColor, hc: null }, nls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground', { dark: transparent(mergeIncomingHeaderBackground, contentTransparency), light: transparent(mergeIncomingHeaderBackground, contentTransparency), hc: transparent(mergeIncomingHeaderBackground, contentTransparency) }, nls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground', { dark: commonBaseColor, light: commonBaseColor, hc: null }, nls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground', { dark: transparent(mergeCommonHeaderBackground, contentTransparency), light: transparent(mergeCommonHeaderBackground, contentTransparency), hc: transparent(mergeCommonHeaderBackground, contentTransparency) }, nls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeBorder = registerColor('merge.border', { dark: null, light: null, hc: '#C3DF6F' }, nls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground', { dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hc: mergeBorder }, nls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground', { dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hc: mergeBorder }, nls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground', { dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hc: mergeBorder }, nls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hc: '#AB5A00' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hc: '#A0A0A0CC' }, nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hc: '#AB5A00' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hc: '#ffffff' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\nexport const minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hc: '#ffffff' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport const minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hc: new Color(new RGBA(255, 50, 50, 1)) }, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport const minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport const minimapBackground = registerColor('minimap.background', { dark: null, light: null, hc: null }, nls.localize('minimapBackground', \"Minimap background color.\"));\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity', { dark: Color.fromHex('#000f'), light: Color.fromHex('#000f'), hc: Color.fromHex('#000f') }, nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\nexport const minimapSliderBackground = registerColor('minimapSlider.background', { light: transparent(scrollbarSliderBackground, 0.5), dark: transparent(scrollbarSliderBackground, 0.5), hc: transparent(scrollbarSliderBackground, 0.5) }, nls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground', { light: transparent(scrollbarSliderHoverBackground, 0.5), dark: transparent(scrollbarSliderHoverBackground, 0.5), hc: transparent(scrollbarSliderHoverBackground, 0.5) }, nls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground', { light: transparent(scrollbarSliderActiveBackground, 0.5), dark: transparent(scrollbarSliderActiveBackground, 0.5), hc: transparent(scrollbarSliderActiveBackground, 0.5) }, nls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', { dark: editorErrorForeground, light: editorErrorForeground, hc: editorErrorForeground }, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningForeground }, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', { dark: editorInfoForeground, light: editorInfoForeground, hc: editorInfoForeground }, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n/**\n * Chart colors\n */\nexport const chartsForeground = registerColor('charts.foreground', { dark: foreground, light: foreground, hc: foreground }, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', { dark: transparent(foreground, .5), light: transparent(foreground, .5), hc: transparent(foreground, .5) }, nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', { dark: editorErrorForeground, light: editorErrorForeground, hc: editorErrorForeground }, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', { dark: editorInfoForeground, light: editorInfoForeground, hc: editorInfoForeground }, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningForeground }, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', { dark: minimapFindMatch, light: minimapFindMatch, hc: minimapFindMatch }, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hc: '#89D185' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hc: '#B180D7' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n// ----- color functions\nexport function executeTransform(transform, theme) {\n    var _a, _b, _c;\n    switch (transform.op) {\n        case 0 /* Darken */:\n            return (_a = resolveColorValue(transform.value, theme)) === null || _a === void 0 ? void 0 : _a.darken(transform.factor);\n        case 1 /* Lighten */:\n            return (_b = resolveColorValue(transform.value, theme)) === null || _b === void 0 ? void 0 : _b.lighten(transform.factor);\n        case 2 /* Transparent */:\n            return (_c = resolveColorValue(transform.value, theme)) === null || _c === void 0 ? void 0 : _c.transparent(transform.factor);\n        case 3 /* OneOf */:\n            for (const candidate of transform.values) {\n                const color = resolveColorValue(candidate, theme);\n                if (color) {\n                    return color;\n                }\n            }\n            return undefined;\n        case 5 /* IfDefinedThenElse */:\n            return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n        case 4 /* LessProminent */: {\n            const from = resolveColorValue(transform.value, theme);\n            if (!from) {\n                return undefined;\n            }\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return from.transparent(transform.factor * transform.transparency);\n            }\n            return from.isDarkerThan(backgroundColor)\n                ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n                : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n        }\n        default:\n            throw assertNever(transform);\n    }\n}\nexport function darken(colorValue, factor) {\n    return { op: 0 /* Darken */, value: colorValue, factor };\n}\nexport function lighten(colorValue, factor) {\n    return { op: 1 /* Lighten */, value: colorValue, factor };\n}\nexport function transparent(colorValue, factor) {\n    return { op: 2 /* Transparent */, value: colorValue, factor };\n}\nexport function oneOf(...colorValues) {\n    return { op: 3 /* OneOf */, values: colorValues };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n    return { op: 5 /* IfDefinedThenElse */, if: ifArg, then: thenArg, else: elseArg };\n}\nfunction lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n    return { op: 4 /* LessProminent */, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n    if (colorValue === null) {\n        return undefined;\n    }\n    else if (typeof colorValue === 'string') {\n        if (colorValue[0] === '#') {\n            return Color.fromHex(colorValue);\n        }\n        return theme.getColor(colorValue);\n    }\n    else if (colorValue instanceof Color) {\n        return colorValue;\n    }\n    else if (typeof colorValue === 'object') {\n        return executeTransform(colorValue, theme);\n    }\n    return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nlet schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../core/selection.js';\nexport class ReplaceCommand {\n    constructor(range, text, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getEndPosition());\n    }\n}\nexport class ReplaceCommandThatSelectsText {\n    constructor(range, text) {\n        this._range = range;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromRange(srcRange, 0 /* LTR */);\n    }\n}\nexport class ReplaceCommandWithoutChangingPosition {\n    constructor(range, text, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getStartPosition());\n    }\n}\nexport class ReplaceCommandWithOffsetCursorState {\n    constructor(range, text, lineNumberDeltaOffset, columnDeltaOffset, insertsAutoWhitespace = false) {\n        this._range = range;\n        this._text = text;\n        this._columnDeltaOffset = columnDeltaOffset;\n        this._lineNumberDeltaOffset = lineNumberDeltaOffset;\n        this.insertsAutoWhitespace = insertsAutoWhitespace;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        return Selection.fromPositions(srcRange.getEndPosition().delta(this._lineNumberDeltaOffset, this._columnDeltaOffset));\n    }\n}\nexport class ReplaceCommandThatPreservesSelection {\n    constructor(editRange, text, initialSelection, forceMoveMarkers = false) {\n        this._range = editRange;\n        this._text = text;\n        this._initialSelection = initialSelection;\n        this._forceMoveMarkers = forceMoveMarkers;\n        this._selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._range, this._text, this._forceMoveMarkers);\n        this._selectionId = builder.trackSelection(this._initialSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\n", "export function memoize(_target, key, descriptor) {\n    let fnKey = null;\n    let fn = null;\n    if (typeof descriptor.value === 'function') {\n        fnKey = 'value';\n        fn = descriptor.value;\n        if (fn.length !== 0) {\n            console.warn('Memoize should only be used in functions with zero parameters');\n        }\n    }\n    else if (typeof descriptor.get === 'function') {\n        fnKey = 'get';\n        fn = descriptor.get;\n    }\n    if (!fn) {\n        throw new Error('not supported');\n    }\n    const memoizeKey = `$memoize$${key}`;\n    descriptor[fnKey] = function (...args) {\n        if (!this.hasOwnProperty(memoizeKey)) {\n            Object.defineProperty(this, memoizeKey, {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: fn.apply(this, args)\n            });\n        }\n        return this[memoizeKey];\n    };\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport * as DomUtils from './dom.js';\nimport * as arrays from '../common/arrays.js';\nimport { memoize } from '../common/decorators.js';\nimport { Disposable } from '../common/lifecycle.js';\nexport var EventType;\n(function (EventType) {\n    EventType.Tap = '-monaco-gesturetap';\n    EventType.Change = '-monaco-gesturechange';\n    EventType.Start = '-monaco-gesturestart';\n    EventType.End = '-monaco-gesturesend';\n    EventType.Contextmenu = '-monaco-gesturecontextmenu';\n})(EventType || (EventType = {}));\nexport class Gesture extends Disposable {\n    constructor() {\n        super();\n        this.dispatched = false;\n        this.activeTouches = {};\n        this.handle = null;\n        this.targets = [];\n        this.ignoreTargets = [];\n        this._lastSetTapCountTime = 0;\n        this._register(DomUtils.addDisposableListener(document, 'touchstart', (e) => this.onTouchStart(e), { passive: false }));\n        this._register(DomUtils.addDisposableListener(document, 'touchend', (e) => this.onTouchEnd(e)));\n        this._register(DomUtils.addDisposableListener(document, 'touchmove', (e) => this.onTouchMove(e), { passive: false }));\n    }\n    static addTarget(element) {\n        if (!Gesture.isTouchDevice()) {\n            return Disposable.None;\n        }\n        if (!Gesture.INSTANCE) {\n            Gesture.INSTANCE = new Gesture();\n        }\n        Gesture.INSTANCE.targets.push(element);\n        return {\n            dispose: () => {\n                Gesture.INSTANCE.targets = Gesture.INSTANCE.targets.filter(t => t !== element);\n            }\n        };\n    }\n    static ignoreTarget(element) {\n        if (!Gesture.isTouchDevice()) {\n            return Disposable.None;\n        }\n        if (!Gesture.INSTANCE) {\n            Gesture.INSTANCE = new Gesture();\n        }\n        Gesture.INSTANCE.ignoreTargets.push(element);\n        return {\n            dispose: () => {\n                Gesture.INSTANCE.ignoreTargets = Gesture.INSTANCE.ignoreTargets.filter(t => t !== element);\n            }\n        };\n    }\n    static isTouchDevice() {\n        // `'ontouchstart' in window` always evaluates to true with typescript's modern typings. This causes `window` to be\n        // `never` later in `window.navigator`. That's why we need the explicit `window as Window` cast\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    }\n    dispose() {\n        if (this.handle) {\n            this.handle.dispose();\n            this.handle = null;\n        }\n        super.dispose();\n    }\n    onTouchStart(e) {\n        let timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n        if (this.handle) {\n            this.handle.dispose();\n            this.handle = null;\n        }\n        for (let i = 0, len = e.targetTouches.length; i < len; i++) {\n            let touch = e.targetTouches.item(i);\n            this.activeTouches[touch.identifier] = {\n                id: touch.identifier,\n                initialTarget: touch.target,\n                initialTimeStamp: timestamp,\n                initialPageX: touch.pageX,\n                initialPageY: touch.pageY,\n                rollingTimestamps: [timestamp],\n                rollingPageX: [touch.pageX],\n                rollingPageY: [touch.pageY]\n            };\n            let evt = this.newGestureEvent(EventType.Start, touch.target);\n            evt.pageX = touch.pageX;\n            evt.pageY = touch.pageY;\n            this.dispatchEvent(evt);\n        }\n        if (this.dispatched) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.dispatched = false;\n        }\n    }\n    onTouchEnd(e) {\n        let timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n        let activeTouchCount = Object.keys(this.activeTouches).length;\n        for (let i = 0, len = e.changedTouches.length; i < len; i++) {\n            let touch = e.changedTouches.item(i);\n            if (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {\n                console.warn('move of an UNKNOWN touch', touch);\n                continue;\n            }\n            let data = this.activeTouches[touch.identifier], holdTime = Date.now() - data.initialTimeStamp;\n            if (holdTime < Gesture.HOLD_DELAY\n                && Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)) < 30\n                && Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)) < 30) {\n                let evt = this.newGestureEvent(EventType.Tap, data.initialTarget);\n                evt.pageX = arrays.tail(data.rollingPageX);\n                evt.pageY = arrays.tail(data.rollingPageY);\n                this.dispatchEvent(evt);\n            }\n            else if (holdTime >= Gesture.HOLD_DELAY\n                && Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)) < 30\n                && Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)) < 30) {\n                let evt = this.newGestureEvent(EventType.Contextmenu, data.initialTarget);\n                evt.pageX = arrays.tail(data.rollingPageX);\n                evt.pageY = arrays.tail(data.rollingPageY);\n                this.dispatchEvent(evt);\n            }\n            else if (activeTouchCount === 1) {\n                let finalX = arrays.tail(data.rollingPageX);\n                let finalY = arrays.tail(data.rollingPageY);\n                let deltaT = arrays.tail(data.rollingTimestamps) - data.rollingTimestamps[0];\n                let deltaX = finalX - data.rollingPageX[0];\n                let deltaY = finalY - data.rollingPageY[0];\n                // We need to get all the dispatch targets on the start of the inertia event\n                const dispatchTo = this.targets.filter(t => data.initialTarget instanceof Node && t.contains(data.initialTarget));\n                this.inertia(dispatchTo, timestamp, // time now\n                Math.abs(deltaX) / deltaT, // speed\n                deltaX > 0 ? 1 : -1, // x direction\n                finalX, // x now\n                Math.abs(deltaY) / deltaT, // y speed\n                deltaY > 0 ? 1 : -1, // y direction\n                finalY // y now\n                );\n            }\n            this.dispatchEvent(this.newGestureEvent(EventType.End, data.initialTarget));\n            // forget about this touch\n            delete this.activeTouches[touch.identifier];\n        }\n        if (this.dispatched) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.dispatched = false;\n        }\n    }\n    newGestureEvent(type, initialTarget) {\n        let event = document.createEvent('CustomEvent');\n        event.initEvent(type, false, true);\n        event.initialTarget = initialTarget;\n        event.tapCount = 0;\n        return event;\n    }\n    dispatchEvent(event) {\n        if (event.type === EventType.Tap) {\n            const currentTime = (new Date()).getTime();\n            let setTapCount = 0;\n            if (currentTime - this._lastSetTapCountTime > Gesture.CLEAR_TAP_COUNT_TIME) {\n                setTapCount = 1;\n            }\n            else {\n                setTapCount = 2;\n            }\n            this._lastSetTapCountTime = currentTime;\n            event.tapCount = setTapCount;\n        }\n        else if (event.type === EventType.Change || event.type === EventType.Contextmenu) {\n            // tap is canceled by scrolling or context menu\n            this._lastSetTapCountTime = 0;\n        }\n        for (let i = 0; i < this.ignoreTargets.length; i++) {\n            if (event.initialTarget instanceof Node && this.ignoreTargets[i].contains(event.initialTarget)) {\n                return;\n            }\n        }\n        this.targets.forEach(target => {\n            if (event.initialTarget instanceof Node && target.contains(event.initialTarget)) {\n                target.dispatchEvent(event);\n                this.dispatched = true;\n            }\n        });\n    }\n    inertia(dispatchTo, t1, vX, dirX, x, vY, dirY, y) {\n        this.handle = DomUtils.scheduleAtNextAnimationFrame(() => {\n            let now = Date.now();\n            // velocity: old speed + accel_over_time\n            let deltaT = now - t1, delta_pos_x = 0, delta_pos_y = 0, stopped = true;\n            vX += Gesture.SCROLL_FRICTION * deltaT;\n            vY += Gesture.SCROLL_FRICTION * deltaT;\n            if (vX > 0) {\n                stopped = false;\n                delta_pos_x = dirX * vX * deltaT;\n            }\n            if (vY > 0) {\n                stopped = false;\n                delta_pos_y = dirY * vY * deltaT;\n            }\n            // dispatch translation event\n            let evt = this.newGestureEvent(EventType.Change);\n            evt.translationX = delta_pos_x;\n            evt.translationY = delta_pos_y;\n            dispatchTo.forEach(d => d.dispatchEvent(evt));\n            if (!stopped) {\n                this.inertia(dispatchTo, now, vX, dirX, x + delta_pos_x, vY, dirY, y + delta_pos_y);\n            }\n        });\n    }\n    onTouchMove(e) {\n        let timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n        for (let i = 0, len = e.changedTouches.length; i < len; i++) {\n            let touch = e.changedTouches.item(i);\n            if (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {\n                console.warn('end of an UNKNOWN touch', touch);\n                continue;\n            }\n            let data = this.activeTouches[touch.identifier];\n            let evt = this.newGestureEvent(EventType.Change, data.initialTarget);\n            evt.translationX = touch.pageX - arrays.tail(data.rollingPageX);\n            evt.translationY = touch.pageY - arrays.tail(data.rollingPageY);\n            evt.pageX = touch.pageX;\n            evt.pageY = touch.pageY;\n            this.dispatchEvent(evt);\n            // only keep a few data points, to average the final speed\n            if (data.rollingPageX.length > 3) {\n                data.rollingPageX.shift();\n                data.rollingPageY.shift();\n                data.rollingTimestamps.shift();\n            }\n            data.rollingPageX.push(touch.pageX);\n            data.rollingPageY.push(touch.pageY);\n            data.rollingTimestamps.push(timestamp);\n        }\n        if (this.dispatched) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.dispatched = false;\n        }\n    }\n}\nGesture.SCROLL_FRICTION = -0.005;\nGesture.HOLD_DELAY = 700;\nGesture.CLEAR_TAP_COUNT_TIME = 400; // ms\n__decorate([\n    memoize\n], Gesture, \"isTouchDevice\", null);\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../dom.js';\nimport { StandardKeyboardEvent } from '../keyboardEvent.js';\nimport { StandardMouseEvent } from '../mouseEvent.js';\nimport { Gesture } from '../touch.js';\nimport { Disposable } from '../../common/lifecycle.js';\nexport class Widget extends Disposable {\n    onclick(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.CLICK, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onmousedown(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_DOWN, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onmouseover(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_OVER, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onnonbubblingmouseout(domNode, listener) {\n        this._register(dom.addDisposableNonBubblingMouseOutListener(domNode, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onkeydown(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => listener(new StandardKeyboardEvent(e))));\n    }\n    onkeyup(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e) => listener(new StandardKeyboardEvent(e))));\n    }\n    oninput(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.INPUT, listener));\n    }\n    onblur(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.BLUR, listener));\n    }\n    onfocus(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.FOCUS, listener));\n    }\n    ignoreGesture(domNode) {\n        Gesture.ignoreTarget(domNode);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../common/event.js';\nexport class DomEmitter {\n    constructor(element, type, useCapture) {\n        const fn = (e) => this.emitter.fire(e);\n        this.emitter = new Emitter({\n            onFirstListenerAdd: () => element.addEventListener(type, fn, useCapture),\n            onLastListenerRemove: () => element.removeEventListener(type, fn, useCapture)\n        });\n    }\n    get event() {\n        return this.emitter.event;\n    }\n    dispose() {\n        this.emitter.dispose();\n    }\n}\nexport function stopEvent(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    return event;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { $, append, createStyleSheet, EventHelper, getElementsByTagName } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { EventType, Gesture } from '../../touch.js';\nimport { Delayer } from '../../../common/async.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../common/lifecycle.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './sash.css';\n/**\n * Allow the sashes to be visible at runtime.\n * @remark Use for development purposes only.\n */\nlet DEBUG = false;\nexport var OrthogonalEdge;\n(function (OrthogonalEdge) {\n    OrthogonalEdge[\"North\"] = \"north\";\n    OrthogonalEdge[\"South\"] = \"south\";\n    OrthogonalEdge[\"East\"] = \"east\";\n    OrthogonalEdge[\"West\"] = \"west\";\n})(OrthogonalEdge || (OrthogonalEdge = {}));\nlet globalSize = 4;\nconst onDidChangeGlobalSize = new Emitter();\nlet globalHoverDelay = 300;\nconst onDidChangeHoverDelay = new Emitter();\nclass MouseEventFactory {\n    constructor() {\n        this.disposables = new DisposableStore();\n    }\n    get onPointerMove() {\n        return this.disposables.add(new DomEmitter(window, 'mousemove')).event;\n    }\n    get onPointerUp() {\n        return this.disposables.add(new DomEmitter(window, 'mouseup')).event;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\n__decorate([\n    memoize\n], MouseEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], MouseEventFactory.prototype, \"onPointerUp\", null);\nclass GestureEventFactory {\n    constructor(el) {\n        this.el = el;\n        this.disposables = new DisposableStore();\n    }\n    get onPointerMove() {\n        return this.disposables.add(new DomEmitter(this.el, EventType.Change)).event;\n    }\n    get onPointerUp() {\n        return this.disposables.add(new DomEmitter(this.el, EventType.End)).event;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\n__decorate([\n    memoize\n], GestureEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], GestureEventFactory.prototype, \"onPointerUp\", null);\nclass OrthogonalPointerEventFactory {\n    constructor(factory) {\n        this.factory = factory;\n    }\n    get onPointerMove() {\n        return this.factory.onPointerMove;\n    }\n    get onPointerUp() {\n        return this.factory.onPointerUp;\n    }\n    dispose() {\n        // noop\n    }\n}\n__decorate([\n    memoize\n], OrthogonalPointerEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], OrthogonalPointerEventFactory.prototype, \"onPointerUp\", null);\nconst PointerEventsDisabledCssClass = 'pointer-events-disabled';\n/**\n * The {@link Sash} is the UI component which allows the user to resize other\n * components. It's usually an invisible horizontal or vertical line which, when\n * hovered, becomes highlighted and can be dragged along the perpendicular dimension\n * to its direction.\n *\n * Features:\n * - Touch event handling\n * - Corner sash support\n * - Hover with different mouse cursor support\n * - Configurable hover size\n * - Linked sash support, for 2x2 corner sashes\n */\nexport class Sash extends Disposable {\n    constructor(container, layoutProvider, options) {\n        super();\n        this.hoverDelay = globalHoverDelay;\n        this.hoverDelayer = this._register(new Delayer(this.hoverDelay));\n        this._state = 3 /* Enabled */;\n        this.onDidEnablementChange = this._register(new Emitter());\n        this._onDidStart = this._register(new Emitter());\n        this._onDidChange = this._register(new Emitter());\n        this._onDidReset = this._register(new Emitter());\n        this._onDidEnd = this._register(new Emitter());\n        this.orthogonalStartSashDisposables = this._register(new DisposableStore());\n        this.orthogonalStartDragHandleDisposables = this._register(new DisposableStore());\n        this.orthogonalEndSashDisposables = this._register(new DisposableStore());\n        this.orthogonalEndDragHandleDisposables = this._register(new DisposableStore());\n        /**\n         * An event which fires whenever the user starts dragging this sash.\n         */\n        this.onDidStart = this._onDidStart.event;\n        /**\n         * An event which fires whenever the user moves the mouse while\n         * dragging this sash.\n         */\n        this.onDidChange = this._onDidChange.event;\n        /**\n         * An event which fires whenever the user double clicks this sash.\n         */\n        this.onDidReset = this._onDidReset.event;\n        /**\n         * An event which fires whenever the user stops dragging this sash.\n         */\n        this.onDidEnd = this._onDidEnd.event;\n        /**\n         * A linked sash will be forwarded the same user interactions and events\n         * so it moves exactly the same way as this sash.\n         *\n         * Useful in 2x2 grids. Not meant for widespread usage.\n         */\n        this.linkedSash = undefined;\n        this.el = append(container, $('.monaco-sash'));\n        if (options.orthogonalEdge) {\n            this.el.classList.add(`orthogonal-edge-${options.orthogonalEdge}`);\n        }\n        if (isMacintosh) {\n            this.el.classList.add('mac');\n        }\n        const onMouseDown = this._register(new DomEmitter(this.el, 'mousedown')).event;\n        this._register(onMouseDown(e => this.onPointerStart(e, new MouseEventFactory()), this));\n        const onMouseDoubleClick = this._register(new DomEmitter(this.el, 'dblclick')).event;\n        this._register(onMouseDoubleClick(this.onPointerDoublePress, this));\n        const onMouseEnter = this._register(new DomEmitter(this.el, 'mouseenter')).event;\n        this._register(onMouseEnter(() => Sash.onMouseEnter(this)));\n        const onMouseLeave = this._register(new DomEmitter(this.el, 'mouseleave')).event;\n        this._register(onMouseLeave(() => Sash.onMouseLeave(this)));\n        this._register(Gesture.addTarget(this.el));\n        const onTouchStart = Event.map(this._register(new DomEmitter(this.el, EventType.Start)).event, e => { var _a; return (Object.assign(Object.assign({}, e), { target: (_a = e.initialTarget) !== null && _a !== void 0 ? _a : null })); });\n        this._register(onTouchStart(e => this.onPointerStart(e, new GestureEventFactory(this.el)), this));\n        const onTap = this._register(new DomEmitter(this.el, EventType.Tap)).event;\n        const onDoubleTap = Event.map(Event.filter(Event.debounce(onTap, (res, event) => { var _a; return ({ event, count: ((_a = res === null || res === void 0 ? void 0 : res.count) !== null && _a !== void 0 ? _a : 0) + 1 }); }, 250), ({ count }) => count === 2), ({ event }) => { var _a; return (Object.assign(Object.assign({}, event), { target: (_a = event.initialTarget) !== null && _a !== void 0 ? _a : null })); });\n        this._register(onDoubleTap(this.onPointerDoublePress, this));\n        if (typeof options.size === 'number') {\n            this.size = options.size;\n            if (options.orientation === 0 /* VERTICAL */) {\n                this.el.style.width = `${this.size}px`;\n            }\n            else {\n                this.el.style.height = `${this.size}px`;\n            }\n        }\n        else {\n            this.size = globalSize;\n            this._register(onDidChangeGlobalSize.event(size => {\n                this.size = size;\n                this.layout();\n            }));\n        }\n        this._register(onDidChangeHoverDelay.event(delay => this.hoverDelay = delay));\n        this.layoutProvider = layoutProvider;\n        this.orthogonalStartSash = options.orthogonalStartSash;\n        this.orthogonalEndSash = options.orthogonalEndSash;\n        this.orientation = options.orientation || 0 /* VERTICAL */;\n        if (this.orientation === 1 /* HORIZONTAL */) {\n            this.el.classList.add('horizontal');\n            this.el.classList.remove('vertical');\n        }\n        else {\n            this.el.classList.remove('horizontal');\n            this.el.classList.add('vertical');\n        }\n        this.el.classList.toggle('debug', DEBUG);\n        this.layout();\n    }\n    get state() { return this._state; }\n    get orthogonalStartSash() { return this._orthogonalStartSash; }\n    get orthogonalEndSash() { return this._orthogonalEndSash; }\n    /**\n     * The state of a sash defines whether it can be interacted with by the user\n     * as well as what mouse cursor to use, when hovered.\n     */\n    set state(state) {\n        if (this._state === state) {\n            return;\n        }\n        this.el.classList.toggle('disabled', state === 0 /* Disabled */);\n        this.el.classList.toggle('minimum', state === 1 /* AtMinimum */);\n        this.el.classList.toggle('maximum', state === 2 /* AtMaximum */);\n        this._state = state;\n        this.onDidEnablementChange.fire(state);\n    }\n    /**\n     * A reference to another sash, perpendicular to this one, which\n     * aligns at the start of this one. A corner sash will be created\n     * automatically at that location.\n     *\n     * The start of a horizontal sash is its left-most position.\n     * The start of a vertical sash is its top-most position.\n     */\n    set orthogonalStartSash(sash) {\n        this.orthogonalStartDragHandleDisposables.clear();\n        this.orthogonalStartSashDisposables.clear();\n        if (sash) {\n            const onChange = (state) => {\n                this.orthogonalStartDragHandleDisposables.clear();\n                if (state !== 0 /* Disabled */) {\n                    this._orthogonalStartDragHandle = append(this.el, $('.orthogonal-drag-handle.start'));\n                    this.orthogonalStartDragHandleDisposables.add(toDisposable(() => this._orthogonalStartDragHandle.remove()));\n                    this.orthogonalStartDragHandleDisposables.add(new DomEmitter(this._orthogonalStartDragHandle, 'mouseenter')).event(() => Sash.onMouseEnter(sash), undefined, this.orthogonalStartDragHandleDisposables);\n                    this.orthogonalStartDragHandleDisposables.add(new DomEmitter(this._orthogonalStartDragHandle, 'mouseleave')).event(() => Sash.onMouseLeave(sash), undefined, this.orthogonalStartDragHandleDisposables);\n                }\n            };\n            this.orthogonalStartSashDisposables.add(sash.onDidEnablementChange.event(onChange, this));\n            onChange(sash.state);\n        }\n        this._orthogonalStartSash = sash;\n    }\n    /**\n     * A reference to another sash, perpendicular to this one, which\n     * aligns at the end of this one. A corner sash will be created\n     * automatically at that location.\n     *\n     * The end of a horizontal sash is its right-most position.\n     * The end of a vertical sash is its bottom-most position.\n     */\n    set orthogonalEndSash(sash) {\n        this.orthogonalEndDragHandleDisposables.clear();\n        this.orthogonalEndSashDisposables.clear();\n        if (sash) {\n            const onChange = (state) => {\n                this.orthogonalEndDragHandleDisposables.clear();\n                if (state !== 0 /* Disabled */) {\n                    this._orthogonalEndDragHandle = append(this.el, $('.orthogonal-drag-handle.end'));\n                    this.orthogonalEndDragHandleDisposables.add(toDisposable(() => this._orthogonalEndDragHandle.remove()));\n                    this.orthogonalEndDragHandleDisposables.add(new DomEmitter(this._orthogonalEndDragHandle, 'mouseenter')).event(() => Sash.onMouseEnter(sash), undefined, this.orthogonalEndDragHandleDisposables);\n                    this.orthogonalEndDragHandleDisposables.add(new DomEmitter(this._orthogonalEndDragHandle, 'mouseleave')).event(() => Sash.onMouseLeave(sash), undefined, this.orthogonalEndDragHandleDisposables);\n                }\n            };\n            this.orthogonalEndSashDisposables.add(sash.onDidEnablementChange.event(onChange, this));\n            onChange(sash.state);\n        }\n        this._orthogonalEndSash = sash;\n    }\n    onPointerStart(event, pointerEventFactory) {\n        EventHelper.stop(event);\n        let isMultisashResize = false;\n        if (!event.__orthogonalSashEvent) {\n            const orthogonalSash = this.getOrthogonalSash(event);\n            if (orthogonalSash) {\n                isMultisashResize = true;\n                event.__orthogonalSashEvent = true;\n                orthogonalSash.onPointerStart(event, new OrthogonalPointerEventFactory(pointerEventFactory));\n            }\n        }\n        if (this.linkedSash && !event.__linkedSashEvent) {\n            event.__linkedSashEvent = true;\n            this.linkedSash.onPointerStart(event, new OrthogonalPointerEventFactory(pointerEventFactory));\n        }\n        if (!this.state) {\n            return;\n        }\n        const iframes = getElementsByTagName('iframe');\n        for (const iframe of iframes) {\n            iframe.classList.add(PointerEventsDisabledCssClass); // disable mouse events on iframes as long as we drag the sash\n        }\n        const startX = event.pageX;\n        const startY = event.pageY;\n        const altKey = event.altKey;\n        const startEvent = { startX, currentX: startX, startY, currentY: startY, altKey };\n        this.el.classList.add('active');\n        this._onDidStart.fire(startEvent);\n        // fix https://github.com/microsoft/vscode/issues/21675\n        const style = createStyleSheet(this.el);\n        const updateStyle = () => {\n            let cursor = '';\n            if (isMultisashResize) {\n                cursor = 'all-scroll';\n            }\n            else if (this.orientation === 1 /* HORIZONTAL */) {\n                if (this.state === 1 /* AtMinimum */) {\n                    cursor = 's-resize';\n                }\n                else if (this.state === 2 /* AtMaximum */) {\n                    cursor = 'n-resize';\n                }\n                else {\n                    cursor = isMacintosh ? 'row-resize' : 'ns-resize';\n                }\n            }\n            else {\n                if (this.state === 1 /* AtMinimum */) {\n                    cursor = 'e-resize';\n                }\n                else if (this.state === 2 /* AtMaximum */) {\n                    cursor = 'w-resize';\n                }\n                else {\n                    cursor = isMacintosh ? 'col-resize' : 'ew-resize';\n                }\n            }\n            style.textContent = `* { cursor: ${cursor} !important; }`;\n        };\n        const disposables = new DisposableStore();\n        updateStyle();\n        if (!isMultisashResize) {\n            this.onDidEnablementChange.event(updateStyle, null, disposables);\n        }\n        const onPointerMove = (e) => {\n            EventHelper.stop(e, false);\n            const event = { startX, currentX: e.pageX, startY, currentY: e.pageY, altKey };\n            this._onDidChange.fire(event);\n        };\n        const onPointerUp = (e) => {\n            EventHelper.stop(e, false);\n            this.el.removeChild(style);\n            this.el.classList.remove('active');\n            this._onDidEnd.fire();\n            disposables.dispose();\n            for (const iframe of iframes) {\n                iframe.classList.remove(PointerEventsDisabledCssClass);\n            }\n        };\n        pointerEventFactory.onPointerMove(onPointerMove, null, disposables);\n        pointerEventFactory.onPointerUp(onPointerUp, null, disposables);\n        disposables.add(pointerEventFactory);\n    }\n    onPointerDoublePress(e) {\n        const orthogonalSash = this.getOrthogonalSash(e);\n        if (orthogonalSash) {\n            orthogonalSash._onDidReset.fire();\n        }\n        if (this.linkedSash) {\n            this.linkedSash._onDidReset.fire();\n        }\n        this._onDidReset.fire();\n    }\n    static onMouseEnter(sash, fromLinkedSash = false) {\n        if (sash.el.classList.contains('active')) {\n            sash.hoverDelayer.cancel();\n            sash.el.classList.add('hover');\n        }\n        else {\n            sash.hoverDelayer.trigger(() => sash.el.classList.add('hover'), sash.hoverDelay).then(undefined, () => { });\n        }\n        if (!fromLinkedSash && sash.linkedSash) {\n            Sash.onMouseEnter(sash.linkedSash, true);\n        }\n    }\n    static onMouseLeave(sash, fromLinkedSash = false) {\n        sash.hoverDelayer.cancel();\n        sash.el.classList.remove('hover');\n        if (!fromLinkedSash && sash.linkedSash) {\n            Sash.onMouseLeave(sash.linkedSash, true);\n        }\n    }\n    /**\n     * Forcefully stop any user interactions with this sash.\n     * Useful when hiding a parent component, while the user is still\n     * interacting with the sash.\n     */\n    clearSashHoverState() {\n        Sash.onMouseLeave(this);\n    }\n    /**\n     * Layout the sash. The sash will size and position itself\n     * based on its provided {@link ISashLayoutProvider layout provider}.\n     */\n    layout() {\n        if (this.orientation === 0 /* VERTICAL */) {\n            const verticalProvider = this.layoutProvider;\n            this.el.style.left = verticalProvider.getVerticalSashLeft(this) - (this.size / 2) + 'px';\n            if (verticalProvider.getVerticalSashTop) {\n                this.el.style.top = verticalProvider.getVerticalSashTop(this) + 'px';\n            }\n            if (verticalProvider.getVerticalSashHeight) {\n                this.el.style.height = verticalProvider.getVerticalSashHeight(this) + 'px';\n            }\n        }\n        else {\n            const horizontalProvider = this.layoutProvider;\n            this.el.style.top = horizontalProvider.getHorizontalSashTop(this) - (this.size / 2) + 'px';\n            if (horizontalProvider.getHorizontalSashLeft) {\n                this.el.style.left = horizontalProvider.getHorizontalSashLeft(this) + 'px';\n            }\n            if (horizontalProvider.getHorizontalSashWidth) {\n                this.el.style.width = horizontalProvider.getHorizontalSashWidth(this) + 'px';\n            }\n        }\n    }\n    getOrthogonalSash(e) {\n        if (!e.target || !(e.target instanceof HTMLElement)) {\n            return undefined;\n        }\n        if (e.target.classList.contains('orthogonal-drag-handle')) {\n            return e.target.classList.contains('start') ? this.orthogonalStartSash : this.orthogonalEndSash;\n        }\n        return undefined;\n    }\n    dispose() {\n        super.dispose();\n        this.el.remove();\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon, CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ThemeIcon } from './themeService.js';\n// icon registry\nexport const Extensions = {\n    IconContribution: 'base.contributions.icons'\n};\nexport var IconContribution;\n(function (IconContribution) {\n    function getDefinition(contribution, registry) {\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n    IconContribution.getDefinition = getDefinition;\n})(IconContribution || (IconContribution = {}));\nclass IconRegistry {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.iconSchema = {\n            definitions: {\n                icons: {\n                    type: 'object',\n                    properties: {\n                        fontId: { type: 'string', description: localize('iconDefinition.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\n                        fontCharacter: { type: 'string', description: localize('iconDefinition.fontCharacter', 'The font character associated with the icon definition.') }\n                    },\n                    additionalProperties: false,\n                    defaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\n                }\n            },\n            type: 'object',\n            properties: {}\n        };\n        this.iconReferenceSchema = { type: 'string', pattern: `^${CSSIcon.iconNameExpression}$`, enum: [], enumDescriptions: [] };\n        this.iconsById = {};\n        this.iconFontsById = {};\n    }\n    registerIcon(id, defaults, description, deprecationMessage) {\n        const existing = this.iconsById[id];\n        if (existing) {\n            if (description && !existing.description) {\n                existing.description = description;\n                this.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n                const enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n                if (enumIndex !== -1) {\n                    this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n                }\n                this._onDidChange.fire();\n            }\n            return existing;\n        }\n        let iconContribution = { id, description, defaults, deprecationMessage };\n        this.iconsById[id] = iconContribution;\n        let propertySchema = { $ref: '#/definitions/icons' };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (description) {\n            propertySchema.markdownDescription = `${description}: $(${id})`;\n        }\n        this.iconSchema.properties[id] = propertySchema;\n        this.iconReferenceSchema.enum.push(id);\n        this.iconReferenceSchema.enumDescriptions.push(description || '');\n        this._onDidChange.fire();\n        return { id };\n    }\n    getIcons() {\n        return Object.keys(this.iconsById).map(id => this.iconsById[id]);\n    }\n    getIcon(id) {\n        return this.iconsById[id];\n    }\n    getIconSchema() {\n        return this.iconSchema;\n    }\n    toString() {\n        const sorter = (i1, i2) => {\n            return i1.id.localeCompare(i2.id);\n        };\n        const classNames = (i) => {\n            while (ThemeIcon.isThemeIcon(i.defaults)) {\n                i = this.iconsById[i.defaults.id];\n            }\n            return `codicon codicon-${i ? i.id : ''}`;\n        };\n        let reference = [];\n        reference.push(`| preview     | identifier                        | default codicon ID                | description`);\n        reference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n        const contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n        for (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n        }\n        reference.push(`| preview     | identifier                        `);\n        reference.push(`| ----------- | --------------------------------- |`);\n        for (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n        }\n        return reference.join('\\n');\n    }\n}\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\nexport function registerIcon(id, defaults, description, deprecationMessage) {\n    return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\nexport function getIconRegistry() {\n    return iconRegistry;\n}\nfunction initialize() {\n    for (const icon of Codicon.getAll()) {\n        iconRegistry.registerIcon(icon.id, icon.definition, icon.description);\n    }\n}\ninitialize();\nexport const iconsSchemaId = 'vscode://schemas/icons';\nlet schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n// common icons\nexport const widgetClose = registerIcon('widget-close', Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\nexport const syncing = ThemeIcon.modify(Codicon.sync, 'spin');\nexport const spinningLoading = ThemeIcon.modify(Codicon.loading, 'spin');\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TokenMetadata } from '../languages.js';\nexport class LineTokens {\n    constructor(tokens, text, decoder) {\n        this._lineTokensBrand = undefined;\n        this._tokens = tokens;\n        this._tokensCount = (this._tokens.length >>> 1);\n        this._text = text;\n        this._languageIdCodec = decoder;\n    }\n    static createEmpty(lineContent, decoder) {\n        const defaultMetadata = LineTokens.defaultTokenMetadata;\n        const tokens = new Uint32Array(2);\n        tokens[0] = lineContent.length;\n        tokens[1] = defaultMetadata;\n        return new LineTokens(tokens, lineContent, decoder);\n    }\n    equals(other) {\n        if (other instanceof LineTokens) {\n            return this.slicedEquals(other, 0, this._tokensCount);\n        }\n        return false;\n    }\n    slicedEquals(other, sliceFromTokenIndex, sliceTokenCount) {\n        if (this._text !== other._text) {\n            return false;\n        }\n        if (this._tokensCount !== other._tokensCount) {\n            return false;\n        }\n        const from = (sliceFromTokenIndex << 1);\n        const to = from + (sliceTokenCount << 1);\n        for (let i = from; i < to; i++) {\n            if (this._tokens[i] !== other._tokens[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    getLineContent() {\n        return this._text;\n    }\n    getCount() {\n        return this._tokensCount;\n    }\n    getStartOffset(tokenIndex) {\n        if (tokenIndex > 0) {\n            return this._tokens[(tokenIndex - 1) << 1];\n        }\n        return 0;\n    }\n    getMetadata(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return metadata;\n    }\n    getLanguageId(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        const languageId = TokenMetadata.getLanguageId(metadata);\n        return this._languageIdCodec.decodeLanguageId(languageId);\n    }\n    getStandardTokenType(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getTokenType(metadata);\n    }\n    getForeground(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getForeground(metadata);\n    }\n    getClassName(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getClassNameFromMetadata(metadata);\n    }\n    getInlineStyle(tokenIndex, colorMap) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getInlineStyleFromMetadata(metadata, colorMap);\n    }\n    getPresentation(tokenIndex) {\n        const metadata = this._tokens[(tokenIndex << 1) + 1];\n        return TokenMetadata.getPresentationFromMetadata(metadata);\n    }\n    getEndOffset(tokenIndex) {\n        return this._tokens[tokenIndex << 1];\n    }\n    /**\n     * Find the token containing offset `offset`.\n     * @param offset The search offset\n     * @return The index of the token containing the offset.\n     */\n    findTokenIndexAtOffset(offset) {\n        return LineTokens.findIndexInTokensArray(this._tokens, offset);\n    }\n    inflate() {\n        return this;\n    }\n    sliceAndInflate(startOffset, endOffset, deltaOffset) {\n        return new SliceLineTokens(this, startOffset, endOffset, deltaOffset);\n    }\n    static convertToEndOffset(tokens, lineTextLength) {\n        const tokenCount = (tokens.length >>> 1);\n        const lastTokenIndex = tokenCount - 1;\n        for (let tokenIndex = 0; tokenIndex < lastTokenIndex; tokenIndex++) {\n            tokens[tokenIndex << 1] = tokens[(tokenIndex + 1) << 1];\n        }\n        tokens[lastTokenIndex << 1] = lineTextLength;\n    }\n    static findIndexInTokensArray(tokens, desiredIndex) {\n        if (tokens.length <= 2) {\n            return 0;\n        }\n        let low = 0;\n        let high = (tokens.length >>> 1) - 1;\n        while (low < high) {\n            const mid = low + Math.floor((high - low) / 2);\n            const endOffset = tokens[(mid << 1)];\n            if (endOffset === desiredIndex) {\n                return mid + 1;\n            }\n            else if (endOffset < desiredIndex) {\n                low = mid + 1;\n            }\n            else if (endOffset > desiredIndex) {\n                high = mid;\n            }\n        }\n        return low;\n    }\n    /**\n     * @pure\n     * @param insertTokens Must be sorted by offset.\n    */\n    withInserted(insertTokens) {\n        if (insertTokens.length === 0) {\n            return this;\n        }\n        let nextOriginalTokenIdx = 0;\n        let nextInsertTokenIdx = 0;\n        let text = '';\n        const newTokens = new Array();\n        let originalEndOffset = 0;\n        while (true) {\n            const nextOriginalTokenEndOffset = nextOriginalTokenIdx < this._tokensCount ? this._tokens[nextOriginalTokenIdx << 1] : -1;\n            const nextInsertToken = nextInsertTokenIdx < insertTokens.length ? insertTokens[nextInsertTokenIdx] : null;\n            if (nextOriginalTokenEndOffset !== -1 && (nextInsertToken === null || nextOriginalTokenEndOffset <= nextInsertToken.offset)) {\n                // original token ends before next insert token\n                text += this._text.substring(originalEndOffset, nextOriginalTokenEndOffset);\n                const metadata = this._tokens[(nextOriginalTokenIdx << 1) + 1];\n                newTokens.push(text.length, metadata);\n                nextOriginalTokenIdx++;\n                originalEndOffset = nextOriginalTokenEndOffset;\n            }\n            else if (nextInsertToken) {\n                if (nextInsertToken.offset > originalEndOffset) {\n                    // insert token is in the middle of the next token.\n                    text += this._text.substring(originalEndOffset, nextInsertToken.offset);\n                    const metadata = this._tokens[(nextOriginalTokenIdx << 1) + 1];\n                    newTokens.push(text.length, metadata);\n                    originalEndOffset = nextInsertToken.offset;\n                }\n                text += nextInsertToken.text;\n                newTokens.push(text.length, nextInsertToken.tokenMetadata);\n                nextInsertTokenIdx++;\n            }\n            else {\n                break;\n            }\n        }\n        return new LineTokens(new Uint32Array(newTokens), text, this._languageIdCodec);\n    }\n}\nLineTokens.defaultTokenMetadata = ((0 /* None */ << 10 /* FONT_STYLE_OFFSET */)\n    | (1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */)\n    | (2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */)) >>> 0;\nclass SliceLineTokens {\n    constructor(source, startOffset, endOffset, deltaOffset) {\n        this._source = source;\n        this._startOffset = startOffset;\n        this._endOffset = endOffset;\n        this._deltaOffset = deltaOffset;\n        this._firstTokenIndex = source.findTokenIndexAtOffset(startOffset);\n        this._tokensCount = 0;\n        for (let i = this._firstTokenIndex, len = source.getCount(); i < len; i++) {\n            const tokenStartOffset = source.getStartOffset(i);\n            if (tokenStartOffset >= endOffset) {\n                break;\n            }\n            this._tokensCount++;\n        }\n    }\n    getMetadata(tokenIndex) {\n        return this._source.getMetadata(this._firstTokenIndex + tokenIndex);\n    }\n    getLanguageId(tokenIndex) {\n        return this._source.getLanguageId(this._firstTokenIndex + tokenIndex);\n    }\n    getLineContent() {\n        return this._source.getLineContent().substring(this._startOffset, this._endOffset);\n    }\n    equals(other) {\n        if (other instanceof SliceLineTokens) {\n            return (this._startOffset === other._startOffset\n                && this._endOffset === other._endOffset\n                && this._deltaOffset === other._deltaOffset\n                && this._source.slicedEquals(other._source, this._firstTokenIndex, this._tokensCount));\n        }\n        return false;\n    }\n    getCount() {\n        return this._tokensCount;\n    }\n    getForeground(tokenIndex) {\n        return this._source.getForeground(this._firstTokenIndex + tokenIndex);\n    }\n    getEndOffset(tokenIndex) {\n        const tokenEndOffset = this._source.getEndOffset(this._firstTokenIndex + tokenIndex);\n        return Math.min(this._endOffset, tokenEndOffset) - this._startOffset + this._deltaOffset;\n    }\n    getClassName(tokenIndex) {\n        return this._source.getClassName(this._firstTokenIndex + tokenIndex);\n    }\n    getInlineStyle(tokenIndex, colorMap) {\n        return this._source.getInlineStyle(this._firstTokenIndex + tokenIndex, colorMap);\n    }\n    getPresentation(tokenIndex) {\n        return this._source.getPresentation(this._firstTokenIndex + tokenIndex);\n    }\n    findTokenIndexAtOffset(offset) {\n        return this._source.findTokenIndexAtOffset(offset + this._startOffset - this._deltaOffset) - this._firstTokenIndex;\n    }\n}\n", "export var Mimes;\n(function (Mimes) {\n    Mimes.text = 'text/plain';\n    Mimes.binary = 'application/octet-stream';\n    Mimes.unknown = 'application/unknown';\n    Mimes.markdown = 'text/markdown';\n    Mimes.latex = 'text/latex';\n    Mimes.uriList = 'text/uri-list';\n})(Mimes || (Mimes = {}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BracketInfo {\n    constructor(range, \n    /** 0-based level */\n    nestingLevel, isInvalid) {\n        this.range = range;\n        this.nestingLevel = nestingLevel;\n        this.isInvalid = isInvalid;\n    }\n}\nexport class BracketPairInfo {\n    constructor(range, openingBracketRange, closingBracketRange, \n    /**\n     * 0-based\n    */\n    nestingLevel) {\n        this.range = range;\n        this.openingBracketRange = openingBracketRange;\n        this.closingBracketRange = closingBracketRange;\n        this.nestingLevel = nestingLevel;\n    }\n}\nexport class BracketPairWithMinIndentationInfo extends BracketPairInfo {\n    constructor(range, openingBracketRange, closingBracketRange, \n    /**\n     * 0-based\n    */\n    nestingLevel, \n    /**\n     * -1 if not requested, otherwise the size of the minimum indentation in the bracket pair in terms of visible columns.\n    */\n    minVisibleColumnIndentation) {\n        super(range, openingBracketRange, closingBracketRange, nestingLevel);\n        this.minVisibleColumnIndentation = minVisibleColumnIndentation;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../../../base/common/strings.js';\nimport { Range } from '../../../core/range.js';\n/**\n * Represents a non-negative length in terms of line and column count.\n * Prefer using {@link Length} for performance reasons.\n*/\nexport class LengthObj {\n    constructor(lineCount, columnCount) {\n        this.lineCount = lineCount;\n        this.columnCount = columnCount;\n    }\n    toString() {\n        return `${this.lineCount},${this.columnCount}`;\n    }\n}\nLengthObj.zero = new LengthObj(0, 0);\n/**\n * The end must be greater than or equal to the start.\n*/\nexport function lengthDiff(startLineCount, startColumnCount, endLineCount, endColumnCount) {\n    return (startLineCount !== endLineCount)\n        ? toLength(endLineCount - startLineCount, endColumnCount)\n        : toLength(0, endColumnCount - startColumnCount);\n}\nexport const lengthZero = 0;\nexport function lengthIsZero(length) {\n    return length === 0;\n}\n/*\n * We have 52 bits available in a JS number.\n * We use the upper 26 bits to store the line and the lower 26 bits to store the column.\n *\n * Set boolean to `true` when debugging, so that debugging is easier.\n */\nconst factor = /* is debug: */ false ? 100000 : Math.pow(2, 26);\nexport function toLength(lineCount, columnCount) {\n    // llllllllllllllllllllllllllcccccccccccccccccccccccccc (52 bits)\n    //       line count (26 bits)    column count (26 bits)\n    // If there is no overflow (all values/sums below 2^26 = 67108864),\n    // we have `toLength(lns1, cols1) + toLength(lns2, cols2) = toLength(lns1 + lns2, cols1 + cols2)`.\n    return (lineCount * factor + columnCount);\n}\nexport function lengthToObj(length) {\n    const l = length;\n    const lineCount = Math.floor(l / factor);\n    const columnCount = l - lineCount * factor;\n    return new LengthObj(lineCount, columnCount);\n}\nexport function lengthGetLineCount(length) {\n    return Math.floor(length / factor);\n}\n/**\n * Returns the amount of columns of the given length, assuming that it does not span any line.\n*/\nexport function lengthGetColumnCountIfZeroLineCount(length) {\n    return length;\n}\nexport function lengthAdd(l1, l2) {\n    return ((l2 < factor)\n        ? (l1 + l2) // l2 is the amount of columns (zero line count). Keep the column count from l1.\n        : (l1 - (l1 % factor) + l2)); // l1 - (l1 % factor) equals toLength(l1.lineCount, 0)\n}\n/**\n * Returns a non negative length `result` such that `lengthAdd(length1, result) = length2`, or zero if such length does not exist.\n */\nexport function lengthDiffNonNegative(length1, length2) {\n    const l1 = length1;\n    const l2 = length2;\n    const diff = l2 - l1;\n    if (diff <= 0) {\n        // line-count of length1 is higher than line-count of length2\n        // or they are equal and column-count of length1 is higher than column-count of length2\n        return lengthZero;\n    }\n    const lineCount1 = Math.floor(l1 / factor);\n    const lineCount2 = Math.floor(l2 / factor);\n    const colCount2 = l2 - lineCount2 * factor;\n    if (lineCount1 === lineCount2) {\n        const colCount1 = l1 - lineCount1 * factor;\n        return toLength(0, colCount2 - colCount1);\n    }\n    else {\n        return toLength(lineCount2 - lineCount1, colCount2);\n    }\n}\nexport function lengthLessThan(length1, length2) {\n    // First, compare line counts, then column counts.\n    return length1 < length2;\n}\nexport function lengthLessThanEqual(length1, length2) {\n    return length1 <= length2;\n}\nexport function lengthGreaterThanEqual(length1, length2) {\n    return length1 >= length2;\n}\nexport function positionToLength(position) {\n    return toLength(position.lineNumber - 1, position.column - 1);\n}\nexport function lengthsToRange(lengthStart, lengthEnd) {\n    const l = lengthStart;\n    const lineCount = Math.floor(l / factor);\n    const colCount = l - lineCount * factor;\n    const l2 = lengthEnd;\n    const lineCount2 = Math.floor(l2 / factor);\n    const colCount2 = l2 - lineCount2 * factor;\n    return new Range(lineCount + 1, colCount + 1, lineCount2 + 1, colCount2 + 1);\n}\nexport function lengthOfString(str) {\n    const lines = splitLines(str);\n    return toLength(lines.length - 1, lines[lines.length - 1].length);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { lengthAdd, lengthDiffNonNegative, lengthLessThanEqual, lengthToObj, toLength } from './length.js';\nexport class TextEditInfo {\n    constructor(startOffset, endOffset, newLength) {\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n        this.newLength = newLength;\n    }\n}\nexport class BeforeEditPositionMapper {\n    /**\n     * @param edits Must be sorted by offset in ascending order.\n    */\n    constructor(edits, documentLength) {\n        this.documentLength = documentLength;\n        this.nextEditIdx = 0;\n        this.deltaOldToNewLineCount = 0;\n        this.deltaOldToNewColumnCount = 0;\n        this.deltaLineIdxInOld = -1;\n        this.edits = edits.map(edit => TextEditInfoCache.from(edit));\n    }\n    /**\n     * @param offset Must be equal to or greater than the last offset this method has been called with.\n    */\n    getOffsetBeforeChange(offset) {\n        this.adjustNextEdit(offset);\n        return this.translateCurToOld(offset);\n    }\n    /**\n     * @param offset Must be equal to or greater than the last offset this method has been called with.\n    */\n    getDistanceToNextChange(offset) {\n        this.adjustNextEdit(offset);\n        const nextEdit = this.edits[this.nextEditIdx];\n        const nextChangeOffset = nextEdit ? this.translateOldToCur(nextEdit.offsetObj) : this.documentLength;\n        return lengthDiffNonNegative(offset, nextChangeOffset);\n    }\n    translateOldToCur(oldOffsetObj) {\n        if (oldOffsetObj.lineCount === this.deltaLineIdxInOld) {\n            return toLength(oldOffsetObj.lineCount + this.deltaOldToNewLineCount, oldOffsetObj.columnCount + this.deltaOldToNewColumnCount);\n        }\n        else {\n            return toLength(oldOffsetObj.lineCount + this.deltaOldToNewLineCount, oldOffsetObj.columnCount);\n        }\n    }\n    translateCurToOld(newOffset) {\n        const offsetObj = lengthToObj(newOffset);\n        if (offsetObj.lineCount - this.deltaOldToNewLineCount === this.deltaLineIdxInOld) {\n            return toLength(offsetObj.lineCount - this.deltaOldToNewLineCount, offsetObj.columnCount - this.deltaOldToNewColumnCount);\n        }\n        else {\n            return toLength(offsetObj.lineCount - this.deltaOldToNewLineCount, offsetObj.columnCount);\n        }\n    }\n    adjustNextEdit(offset) {\n        while (this.nextEditIdx < this.edits.length) {\n            const nextEdit = this.edits[this.nextEditIdx];\n            // After applying the edit, what is its end offset (considering all previous edits)?\n            const nextEditEndOffsetInCur = this.translateOldToCur(nextEdit.endOffsetAfterObj);\n            if (lengthLessThanEqual(nextEditEndOffsetInCur, offset)) {\n                // We are after the edit, skip it\n                this.nextEditIdx++;\n                const nextEditEndOffsetInCurObj = lengthToObj(nextEditEndOffsetInCur);\n                // Before applying the edit, what is its end offset (considering all previous edits)?\n                const nextEditEndOffsetBeforeInCurObj = lengthToObj(this.translateOldToCur(nextEdit.endOffsetBeforeObj));\n                const lineDelta = nextEditEndOffsetInCurObj.lineCount - nextEditEndOffsetBeforeInCurObj.lineCount;\n                this.deltaOldToNewLineCount += lineDelta;\n                const previousColumnDelta = this.deltaLineIdxInOld === nextEdit.endOffsetBeforeObj.lineCount ? this.deltaOldToNewColumnCount : 0;\n                const columnDelta = nextEditEndOffsetInCurObj.columnCount - nextEditEndOffsetBeforeInCurObj.columnCount;\n                this.deltaOldToNewColumnCount = previousColumnDelta + columnDelta;\n                this.deltaLineIdxInOld = nextEdit.endOffsetBeforeObj.lineCount;\n            }\n            else {\n                // We are in or before the edit.\n                break;\n            }\n        }\n    }\n}\nclass TextEditInfoCache {\n    constructor(startOffset, endOffset, textLength) {\n        this.endOffsetBeforeObj = lengthToObj(endOffset);\n        this.endOffsetAfterObj = lengthToObj(lengthAdd(startOffset, textLength));\n        this.offsetObj = lengthToObj(startOffset);\n    }\n    static from(edit) {\n        return new TextEditInfoCache(edit.startOffset, edit.endOffset, edit.newLength);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\n/**\n * A column in a position is the gap between two adjacent characters. The methods here\n * work with a concept called \"visible column\". A visible column is a very rough approximation\n * of the horizontal screen position of a column. For example, using a tab size of 4:\n * ```txt\n * |<TAB>|<TAB>|T|ext\n * |     |     | \\---- column = 4, visible column = 9\n * |     |     \\------ column = 3, visible column = 8\n * |     \\------------ column = 2, visible column = 4\n * \\------------------ column = 1, visible column = 0\n * ```\n *\n * **NOTE**: Visual columns do not work well for RTL text or variable-width fonts or characters.\n *\n * **NOTE**: These methods work and make sense both on the model and on the view model.\n */\nexport class CursorColumns {\n    static _nextVisibleColumn(codePoint, visibleColumn, tabSize) {\n        if (codePoint === 9 /* Tab */) {\n            return CursorColumns.nextRenderTabStop(visibleColumn, tabSize);\n        }\n        if (strings.isFullWidthCharacter(codePoint) || strings.isEmojiImprecise(codePoint)) {\n            return visibleColumn + 2;\n        }\n        return visibleColumn + 1;\n    }\n    /**\n     * Returns a visible column from a column.\n     * @see {@link CursorColumns}\n     */\n    static visibleColumnFromColumn(lineContent, column, tabSize) {\n        const textLen = Math.min(column - 1, lineContent.length);\n        const text = lineContent.substring(0, textLen);\n        const iterator = new strings.GraphemeIterator(text);\n        let result = 0;\n        while (!iterator.eol()) {\n            const codePoint = strings.getNextCodePoint(text, textLen, iterator.offset);\n            iterator.nextGraphemeLength();\n            result = this._nextVisibleColumn(codePoint, result, tabSize);\n        }\n        return result;\n    }\n    /**\n     * Returns a column from a visible column.\n     * @see {@link CursorColumns}\n     */\n    static columnFromVisibleColumn(lineContent, visibleColumn, tabSize) {\n        if (visibleColumn <= 0) {\n            return 1;\n        }\n        const lineContentLength = lineContent.length;\n        const iterator = new strings.GraphemeIterator(lineContent);\n        let beforeVisibleColumn = 0;\n        let beforeColumn = 1;\n        while (!iterator.eol()) {\n            const codePoint = strings.getNextCodePoint(lineContent, lineContentLength, iterator.offset);\n            iterator.nextGraphemeLength();\n            const afterVisibleColumn = this._nextVisibleColumn(codePoint, beforeVisibleColumn, tabSize);\n            const afterColumn = iterator.offset + 1;\n            if (afterVisibleColumn >= visibleColumn) {\n                const beforeDelta = visibleColumn - beforeVisibleColumn;\n                const afterDelta = afterVisibleColumn - visibleColumn;\n                if (afterDelta < beforeDelta) {\n                    return afterColumn;\n                }\n                else {\n                    return beforeColumn;\n                }\n            }\n            beforeVisibleColumn = afterVisibleColumn;\n            beforeColumn = afterColumn;\n        }\n        // walked the entire string\n        return lineContentLength + 1;\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as oposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static nextRenderTabStop(visibleColumn, tabSize) {\n        return visibleColumn + tabSize - visibleColumn % tabSize;\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as oposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static nextIndentTabStop(visibleColumn, indentSize) {\n        return visibleColumn + indentSize - visibleColumn % indentSize;\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as opposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static prevRenderTabStop(column, tabSize) {\n        return Math.max(0, column - 1 - (column - 1) % tabSize);\n    }\n    /**\n     * ATTENTION: This works with 0-based columns (as opposed to the regular 1-based columns)\n     * @see {@link CursorColumns}\n     */\n    static prevIndentTabStop(column, indentSize) {\n        return Math.max(0, column - 1 - (column - 1) % indentSize);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst emptyArr = new Array();\n/**\n * Represents an immutable set that works best for a small number of elements (less than 32).\n * It uses bits to encode element membership efficiently.\n*/\nexport class SmallImmutableSet {\n    constructor(items, additionalItems) {\n        this.items = items;\n        this.additionalItems = additionalItems;\n    }\n    static create(items, additionalItems) {\n        if (items <= 128 && additionalItems.length === 0) {\n            // We create a cache of 128=2^7 elements to cover all sets with up to 7 (dense) elements.\n            let cached = SmallImmutableSet.cache[items];\n            if (!cached) {\n                cached = new SmallImmutableSet(items, additionalItems);\n                SmallImmutableSet.cache[items] = cached;\n            }\n            return cached;\n        }\n        return new SmallImmutableSet(items, additionalItems);\n    }\n    static getEmpty() {\n        return this.empty;\n    }\n    add(value, keyProvider) {\n        const key = keyProvider.getKey(value);\n        let idx = key >> 5; // divided by 32\n        if (idx === 0) {\n            // fast path\n            const newItem = (1 << key) | this.items;\n            if (newItem === this.items) {\n                return this;\n            }\n            return SmallImmutableSet.create(newItem, this.additionalItems);\n        }\n        idx--;\n        const newItems = this.additionalItems.slice(0);\n        while (newItems.length < idx) {\n            newItems.push(0);\n        }\n        newItems[idx] |= 1 << (key & 31);\n        return SmallImmutableSet.create(this.items, newItems);\n    }\n    merge(other) {\n        const merged = this.items | other.items;\n        if (this.additionalItems === emptyArr && other.additionalItems === emptyArr) {\n            // fast path\n            if (merged === this.items) {\n                return this;\n            }\n            if (merged === other.items) {\n                return other;\n            }\n            return SmallImmutableSet.create(merged, emptyArr);\n        }\n        // This can be optimized, but it's not a common case\n        const newItems = new Array();\n        for (let i = 0; i < Math.max(this.additionalItems.length, other.additionalItems.length); i++) {\n            const item1 = this.additionalItems[i] || 0;\n            const item2 = other.additionalItems[i] || 0;\n            newItems.push(item1 | item2);\n        }\n        return SmallImmutableSet.create(merged, newItems);\n    }\n    intersects(other) {\n        if ((this.items & other.items) !== 0) {\n            return true;\n        }\n        for (let i = 0; i < Math.min(this.additionalItems.length, other.additionalItems.length); i++) {\n            if ((this.additionalItems[i] & other.additionalItems[i]) !== 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSmallImmutableSet.cache = new Array(129);\nSmallImmutableSet.empty = SmallImmutableSet.create(0, emptyArr);\nexport const identityKeyProvider = {\n    getKey(value) {\n        return value;\n    }\n};\n/**\n * Assigns values a unique incrementing key.\n*/\nexport class DenseKeyProvider {\n    constructor() {\n        this.items = new Map();\n    }\n    getKey(value) {\n        let existing = this.items.get(value);\n        if (existing === undefined) {\n            existing = this.items.size;\n            this.items.set(value, existing);\n        }\n        return existing;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CursorColumns } from '../../../core/cursorColumns.js';\nimport { lengthAdd, lengthGetLineCount, lengthToObj, lengthZero } from './length.js';\nimport { SmallImmutableSet } from './smallImmutableSet.js';\n/**\n * The base implementation for all AST nodes.\n*/\nclass BaseAstNode {\n    constructor(length) {\n        this._length = length;\n    }\n    /**\n     * The length of the entire node, which should equal the sum of lengths of all children.\n    */\n    get length() {\n        return this._length;\n    }\n}\n/**\n * Represents a bracket pair including its child (e.g. `{ ... }`).\n * Might be unclosed.\n * Immutable, if all children are immutable.\n*/\nexport class PairAstNode extends BaseAstNode {\n    constructor(length, openingBracket, child, closingBracket, missingOpeningBracketIds) {\n        super(length);\n        this.openingBracket = openingBracket;\n        this.child = child;\n        this.closingBracket = closingBracket;\n        this.missingOpeningBracketIds = missingOpeningBracketIds;\n    }\n    static create(openingBracket, child, closingBracket) {\n        let length = openingBracket.length;\n        if (child) {\n            length = lengthAdd(length, child.length);\n        }\n        if (closingBracket) {\n            length = lengthAdd(length, closingBracket.length);\n        }\n        return new PairAstNode(length, openingBracket, child, closingBracket, child ? child.missingOpeningBracketIds : SmallImmutableSet.getEmpty());\n    }\n    get kind() {\n        return 2 /* Pair */;\n    }\n    get listHeight() {\n        return 0;\n    }\n    get childrenLength() {\n        return 3;\n    }\n    getChild(idx) {\n        switch (idx) {\n            case 0: return this.openingBracket;\n            case 1: return this.child;\n            case 2: return this.closingBracket;\n        }\n        throw new Error('Invalid child index');\n    }\n    /**\n     * Avoid using this property, it allocates an array!\n    */\n    get children() {\n        const result = new Array();\n        result.push(this.openingBracket);\n        if (this.child) {\n            result.push(this.child);\n        }\n        if (this.closingBracket) {\n            result.push(this.closingBracket);\n        }\n        return result;\n    }\n    canBeReused(openBracketIds) {\n        if (this.closingBracket === null) {\n            // Unclosed pair ast nodes only\n            // end at the end of the document\n            // or when a parent node is closed.\n            // This could be improved:\n            // Only return false if some next token is neither \"undefined\" nor a bracket that closes a parent.\n            return false;\n        }\n        if (openBracketIds.intersects(this.missingOpeningBracketIds)) {\n            return false;\n        }\n        return true;\n    }\n    deepClone() {\n        return new PairAstNode(this.length, this.openingBracket.deepClone(), this.child && this.child.deepClone(), this.closingBracket && this.closingBracket.deepClone(), this.missingOpeningBracketIds);\n    }\n    computeMinIndentation(offset, textModel) {\n        return this.child ? this.child.computeMinIndentation(lengthAdd(offset, this.openingBracket.length), textModel) : Number.MAX_SAFE_INTEGER;\n    }\n}\nexport class ListAstNode extends BaseAstNode {\n    /**\n     * Use ListAstNode.create.\n    */\n    constructor(length, listHeight, _missingOpeningBracketIds) {\n        super(length);\n        this.listHeight = listHeight;\n        this._missingOpeningBracketIds = _missingOpeningBracketIds;\n        this.cachedMinIndentation = -1;\n    }\n    /**\n     * This method uses more memory-efficient list nodes that can only store 2 or 3 children.\n    */\n    static create23(item1, item2, item3, immutable = false) {\n        let length = item1.length;\n        let missingBracketIds = item1.missingOpeningBracketIds;\n        if (item1.listHeight !== item2.listHeight) {\n            throw new Error('Invalid list heights');\n        }\n        length = lengthAdd(length, item2.length);\n        missingBracketIds = missingBracketIds.merge(item2.missingOpeningBracketIds);\n        if (item3) {\n            if (item1.listHeight !== item3.listHeight) {\n                throw new Error('Invalid list heights');\n            }\n            length = lengthAdd(length, item3.length);\n            missingBracketIds = missingBracketIds.merge(item3.missingOpeningBracketIds);\n        }\n        return immutable\n            ? new Immutable23ListAstNode(length, item1.listHeight + 1, item1, item2, item3, missingBracketIds)\n            : new TwoThreeListAstNode(length, item1.listHeight + 1, item1, item2, item3, missingBracketIds);\n    }\n    static getEmpty() {\n        return new ImmutableArrayListAstNode(lengthZero, 0, [], SmallImmutableSet.getEmpty());\n    }\n    get kind() {\n        return 4 /* List */;\n    }\n    get missingOpeningBracketIds() {\n        return this._missingOpeningBracketIds;\n    }\n    throwIfImmutable() {\n        // NOOP\n    }\n    makeLastElementMutable() {\n        this.throwIfImmutable();\n        const childCount = this.childrenLength;\n        if (childCount === 0) {\n            return undefined;\n        }\n        const lastChild = this.getChild(childCount - 1);\n        const mutable = lastChild.kind === 4 /* List */ ? lastChild.toMutable() : lastChild;\n        if (lastChild !== mutable) {\n            this.setChild(childCount - 1, mutable);\n        }\n        return mutable;\n    }\n    makeFirstElementMutable() {\n        this.throwIfImmutable();\n        const childCount = this.childrenLength;\n        if (childCount === 0) {\n            return undefined;\n        }\n        const firstChild = this.getChild(0);\n        const mutable = firstChild.kind === 4 /* List */ ? firstChild.toMutable() : firstChild;\n        if (firstChild !== mutable) {\n            this.setChild(0, mutable);\n        }\n        return mutable;\n    }\n    canBeReused(openBracketIds) {\n        if (openBracketIds.intersects(this.missingOpeningBracketIds)) {\n            return false;\n        }\n        let lastChild = this;\n        let lastLength;\n        while (lastChild.kind === 4 /* List */ && (lastLength = lastChild.childrenLength) > 0) {\n            lastChild = lastChild.getChild(lastLength - 1);\n        }\n        return lastChild.canBeReused(openBracketIds);\n    }\n    handleChildrenChanged() {\n        this.throwIfImmutable();\n        const count = this.childrenLength;\n        let length = this.getChild(0).length;\n        let unopenedBrackets = this.getChild(0).missingOpeningBracketIds;\n        for (let i = 1; i < count; i++) {\n            const child = this.getChild(i);\n            length = lengthAdd(length, child.length);\n            unopenedBrackets = unopenedBrackets.merge(child.missingOpeningBracketIds);\n        }\n        this._length = length;\n        this._missingOpeningBracketIds = unopenedBrackets;\n        this.cachedMinIndentation = -1;\n    }\n    computeMinIndentation(offset, textModel) {\n        if (this.cachedMinIndentation !== -1) {\n            return this.cachedMinIndentation;\n        }\n        let minIndentation = Number.MAX_SAFE_INTEGER;\n        let childOffset = offset;\n        for (let i = 0; i < this.childrenLength; i++) {\n            const child = this.getChild(i);\n            if (child) {\n                minIndentation = Math.min(minIndentation, child.computeMinIndentation(childOffset, textModel));\n                childOffset = lengthAdd(childOffset, child.length);\n            }\n        }\n        this.cachedMinIndentation = minIndentation;\n        return minIndentation;\n    }\n}\nclass TwoThreeListAstNode extends ListAstNode {\n    constructor(length, listHeight, _item1, _item2, _item3, missingOpeningBracketIds) {\n        super(length, listHeight, missingOpeningBracketIds);\n        this._item1 = _item1;\n        this._item2 = _item2;\n        this._item3 = _item3;\n    }\n    get childrenLength() {\n        return this._item3 !== null ? 3 : 2;\n    }\n    getChild(idx) {\n        switch (idx) {\n            case 0: return this._item1;\n            case 1: return this._item2;\n            case 2: return this._item3;\n        }\n        throw new Error('Invalid child index');\n    }\n    setChild(idx, node) {\n        switch (idx) {\n            case 0:\n                this._item1 = node;\n                return;\n            case 1:\n                this._item2 = node;\n                return;\n            case 2:\n                this._item3 = node;\n                return;\n        }\n        throw new Error('Invalid child index');\n    }\n    get children() {\n        return this._item3 ? [this._item1, this._item2, this._item3] : [this._item1, this._item2];\n    }\n    get item1() {\n        return this._item1;\n    }\n    get item2() {\n        return this._item2;\n    }\n    get item3() {\n        return this._item3;\n    }\n    deepClone() {\n        return new TwoThreeListAstNode(this.length, this.listHeight, this._item1.deepClone(), this._item2.deepClone(), this._item3 ? this._item3.deepClone() : null, this.missingOpeningBracketIds);\n    }\n    appendChildOfSameHeight(node) {\n        if (this._item3) {\n            throw new Error('Cannot append to a full (2,3) tree node');\n        }\n        this.throwIfImmutable();\n        this._item3 = node;\n        this.handleChildrenChanged();\n    }\n    unappendChild() {\n        if (!this._item3) {\n            throw new Error('Cannot remove from a non-full (2,3) tree node');\n        }\n        this.throwIfImmutable();\n        const result = this._item3;\n        this._item3 = null;\n        this.handleChildrenChanged();\n        return result;\n    }\n    prependChildOfSameHeight(node) {\n        if (this._item3) {\n            throw new Error('Cannot prepend to a full (2,3) tree node');\n        }\n        this.throwIfImmutable();\n        this._item3 = this._item2;\n        this._item2 = this._item1;\n        this._item1 = node;\n        this.handleChildrenChanged();\n    }\n    unprependChild() {\n        if (!this._item3) {\n            throw new Error('Cannot remove from a non-full (2,3) tree node');\n        }\n        this.throwIfImmutable();\n        const result = this._item1;\n        this._item1 = this._item2;\n        this._item2 = this._item3;\n        this._item3 = null;\n        this.handleChildrenChanged();\n        return result;\n    }\n    toMutable() {\n        return this;\n    }\n}\n/**\n * Immutable, if all children are immutable.\n*/\nclass Immutable23ListAstNode extends TwoThreeListAstNode {\n    toMutable() {\n        return new TwoThreeListAstNode(this.length, this.listHeight, this.item1, this.item2, this.item3, this.missingOpeningBracketIds);\n    }\n    throwIfImmutable() {\n        throw new Error('this instance is immutable');\n    }\n}\n/**\n * For debugging.\n*/\nclass ArrayListAstNode extends ListAstNode {\n    constructor(length, listHeight, _children, missingOpeningBracketIds) {\n        super(length, listHeight, missingOpeningBracketIds);\n        this._children = _children;\n    }\n    get childrenLength() {\n        return this._children.length;\n    }\n    getChild(idx) {\n        return this._children[idx];\n    }\n    setChild(idx, child) {\n        this._children[idx] = child;\n    }\n    get children() {\n        return this._children;\n    }\n    deepClone() {\n        const children = new Array(this._children.length);\n        for (let i = 0; i < this._children.length; i++) {\n            children[i] = this._children[i].deepClone();\n        }\n        return new ArrayListAstNode(this.length, this.listHeight, children, this.missingOpeningBracketIds);\n    }\n    appendChildOfSameHeight(node) {\n        this.throwIfImmutable();\n        this._children.push(node);\n        this.handleChildrenChanged();\n    }\n    unappendChild() {\n        this.throwIfImmutable();\n        const item = this._children.pop();\n        this.handleChildrenChanged();\n        return item;\n    }\n    prependChildOfSameHeight(node) {\n        this.throwIfImmutable();\n        this._children.unshift(node);\n        this.handleChildrenChanged();\n    }\n    unprependChild() {\n        this.throwIfImmutable();\n        const item = this._children.shift();\n        this.handleChildrenChanged();\n        return item;\n    }\n    toMutable() {\n        return this;\n    }\n}\n/**\n * Immutable, if all children are immutable.\n*/\nclass ImmutableArrayListAstNode extends ArrayListAstNode {\n    toMutable() {\n        return new ArrayListAstNode(this.length, this.listHeight, [...this.children], this.missingOpeningBracketIds);\n    }\n    throwIfImmutable() {\n        throw new Error('this instance is immutable');\n    }\n}\nconst emptyArray = [];\nclass ImmutableLeafAstNode extends BaseAstNode {\n    get listHeight() {\n        return 0;\n    }\n    get childrenLength() {\n        return 0;\n    }\n    getChild(idx) {\n        return null;\n    }\n    get children() {\n        return emptyArray;\n    }\n    deepClone() {\n        return this;\n    }\n}\nexport class TextAstNode extends ImmutableLeafAstNode {\n    get kind() {\n        return 0 /* Text */;\n    }\n    get missingOpeningBracketIds() {\n        return SmallImmutableSet.getEmpty();\n    }\n    canBeReused(_openedBracketIds) {\n        return true;\n    }\n    computeMinIndentation(offset, textModel) {\n        const start = lengthToObj(offset);\n        // Text ast nodes don't have partial indentation (ensured by the tokenizer).\n        // Thus, if this text node does not start at column 0, the first line cannot have any indentation at all.\n        const startLineNumber = (start.columnCount === 0 ? start.lineCount : start.lineCount + 1) + 1;\n        const endLineNumber = lengthGetLineCount(lengthAdd(offset, this.length)) + 1;\n        let result = Number.MAX_SAFE_INTEGER;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const firstNonWsColumn = textModel.getLineFirstNonWhitespaceColumn(lineNumber);\n            const lineContent = textModel.getLineContent(lineNumber);\n            if (firstNonWsColumn === 0) {\n                continue;\n            }\n            const visibleColumn = CursorColumns.visibleColumnFromColumn(lineContent, firstNonWsColumn, textModel.getOptions().tabSize);\n            result = Math.min(result, visibleColumn);\n        }\n        return result;\n    }\n}\nexport class BracketAstNode extends ImmutableLeafAstNode {\n    constructor(length, languageId, \n    /**\n     * In case of a opening bracket, this is the id of the opening bracket.\n     * In case of a closing bracket, this contains the ids of all opening brackets it can close.\n    */\n    bracketIds) {\n        super(length);\n        this.languageId = languageId;\n        this.bracketIds = bracketIds;\n    }\n    static create(length, languageId, bracketIds) {\n        const node = new BracketAstNode(length, languageId, bracketIds);\n        return node;\n    }\n    get kind() {\n        return 1 /* Bracket */;\n    }\n    get missingOpeningBracketIds() {\n        return SmallImmutableSet.getEmpty();\n    }\n    canBeReused(_openedBracketIds) {\n        // These nodes could be reused,\n        // but not in a general way.\n        // Their parent may be reused.\n        return false;\n    }\n    computeMinIndentation(offset, textModel) {\n        return Number.MAX_SAFE_INTEGER;\n    }\n}\nexport class InvalidBracketAstNode extends ImmutableLeafAstNode {\n    constructor(closingBrackets, length) {\n        super(length);\n        this.missingOpeningBracketIds = closingBrackets;\n    }\n    get kind() {\n        return 3 /* UnexpectedClosingBracket */;\n    }\n    canBeReused(openedBracketIds) {\n        return !openedBracketIds.intersects(this.missingOpeningBracketIds);\n    }\n    computeMinIndentation(offset, textModel) {\n        return Number.MAX_SAFE_INTEGER;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { NotSupportedError } from '../../../../../base/common/errors.js';\nimport { TokenMetadata } from '../../../languages.js';\nimport { TextAstNode } from './ast.js';\nimport { lengthAdd, lengthDiff, lengthGetColumnCountIfZeroLineCount, lengthToObj, lengthZero, toLength } from './length.js';\nimport { SmallImmutableSet } from './smallImmutableSet.js';\nexport class Token {\n    constructor(length, kind, \n    /**\n     * If this token is an opening bracket, this is the id of the opening bracket.\n     * If this token is a closing bracket, this is the id of the first opening bracket that is closed by this bracket.\n     * Otherwise, it is -1.\n     */\n    bracketId, \n    /**\n     * If this token is an opening bracket, this just contains `bracketId`.\n     * If this token is a closing bracket, this lists all opening bracket ids, that it closes.\n     * Otherwise, it is empty.\n     */\n    bracketIds, astNode) {\n        this.length = length;\n        this.kind = kind;\n        this.bracketId = bracketId;\n        this.bracketIds = bracketIds;\n        this.astNode = astNode;\n    }\n}\nexport class TextBufferTokenizer {\n    constructor(textModel, bracketTokens) {\n        this.textModel = textModel;\n        this.bracketTokens = bracketTokens;\n        this.reader = new NonPeekableTextBufferTokenizer(this.textModel, this.bracketTokens);\n        this._offset = lengthZero;\n        this.didPeek = false;\n        this.peeked = null;\n        this.textBufferLineCount = textModel.getLineCount();\n        this.textBufferLastLineLength = textModel.getLineLength(this.textBufferLineCount);\n    }\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return toLength(this.textBufferLineCount, this.textBufferLastLineLength);\n    }\n    skip(length) {\n        this.didPeek = false;\n        this._offset = lengthAdd(this._offset, length);\n        const obj = lengthToObj(this._offset);\n        this.reader.setPosition(obj.lineCount, obj.columnCount);\n    }\n    read() {\n        let token;\n        if (this.peeked) {\n            this.didPeek = false;\n            token = this.peeked;\n        }\n        else {\n            token = this.reader.read();\n        }\n        if (token) {\n            this._offset = lengthAdd(this._offset, token.length);\n        }\n        return token;\n    }\n    peek() {\n        if (!this.didPeek) {\n            this.peeked = this.reader.read();\n            this.didPeek = true;\n        }\n        return this.peeked;\n    }\n}\n/**\n * Does not support peek.\n*/\nclass NonPeekableTextBufferTokenizer {\n    constructor(textModel, bracketTokens) {\n        this.textModel = textModel;\n        this.bracketTokens = bracketTokens;\n        this.lineIdx = 0;\n        this.line = null;\n        this.lineCharOffset = 0;\n        this.lineTokens = null;\n        this.lineTokenOffset = 0;\n        /** Must be a zero line token. The end of the document cannot be peeked. */\n        this.peekedToken = null;\n        this.textBufferLineCount = textModel.getLineCount();\n        this.textBufferLastLineLength = textModel.getLineLength(this.textBufferLineCount);\n    }\n    setPosition(lineIdx, column) {\n        // We must not jump into a token!\n        if (lineIdx === this.lineIdx) {\n            this.lineCharOffset = column;\n            this.lineTokenOffset = this.lineCharOffset === 0 ? 0 : this.lineTokens.findTokenIndexAtOffset(this.lineCharOffset);\n        }\n        else {\n            this.lineIdx = lineIdx;\n            this.lineCharOffset = column;\n            this.line = null;\n        }\n        this.peekedToken = null;\n    }\n    read() {\n        if (this.peekedToken) {\n            const token = this.peekedToken;\n            this.peekedToken = null;\n            this.lineCharOffset += lengthGetColumnCountIfZeroLineCount(token.length);\n            return token;\n        }\n        if (this.lineIdx > this.textBufferLineCount - 1 || (this.lineIdx === this.textBufferLineCount - 1 && this.lineCharOffset >= this.textBufferLastLineLength)) {\n            // We are after the end\n            return null;\n        }\n        if (this.line === null) {\n            this.lineTokens = this.textModel.getLineTokens(this.lineIdx + 1);\n            this.line = this.lineTokens.getLineContent();\n            this.lineTokenOffset = this.lineCharOffset === 0 ? 0 : this.lineTokens.findTokenIndexAtOffset(this.lineCharOffset);\n        }\n        const startLineIdx = this.lineIdx;\n        const startLineCharOffset = this.lineCharOffset;\n        // limits the length of text tokens.\n        // If text tokens get too long, incremental updates will be slow\n        let lengthHeuristic = 0;\n        while (true) {\n            const lineTokens = this.lineTokens;\n            const tokenCount = lineTokens.getCount();\n            let peekedBracketToken = null;\n            if (this.lineTokenOffset < tokenCount) {\n                const tokenMetadata = lineTokens.getMetadata(this.lineTokenOffset);\n                while (this.lineTokenOffset + 1 < tokenCount && tokenMetadata === lineTokens.getMetadata(this.lineTokenOffset + 1)) {\n                    // Skip tokens that are identical.\n                    // Sometimes, (bracket) identifiers are split up into multiple tokens.\n                    this.lineTokenOffset++;\n                }\n                const isOther = TokenMetadata.getTokenType(tokenMetadata) === 0 /* Other */;\n                const endOffset = lineTokens.getEndOffset(this.lineTokenOffset);\n                // Is there a bracket token next? Only consume text.\n                if (isOther && endOffset !== this.lineCharOffset) {\n                    const languageId = lineTokens.getLanguageId(this.lineTokenOffset);\n                    const text = this.line.substring(this.lineCharOffset, endOffset);\n                    const brackets = this.bracketTokens.getSingleLanguageBracketTokens(languageId);\n                    const regexp = brackets.regExpGlobal;\n                    if (regexp) {\n                        regexp.lastIndex = 0;\n                        const match = regexp.exec(text);\n                        if (match) {\n                            peekedBracketToken = brackets.getToken(match[0]);\n                            if (peekedBracketToken) {\n                                // Consume leading text of the token\n                                this.lineCharOffset += match.index;\n                            }\n                        }\n                    }\n                }\n                lengthHeuristic += endOffset - this.lineCharOffset;\n                if (peekedBracketToken) {\n                    // Don't skip the entire token, as a single token could contain multiple brackets.\n                    if (startLineIdx !== this.lineIdx || startLineCharOffset !== this.lineCharOffset) {\n                        // There is text before the bracket\n                        this.peekedToken = peekedBracketToken;\n                        break;\n                    }\n                    else {\n                        // Consume the peeked token\n                        this.lineCharOffset += lengthGetColumnCountIfZeroLineCount(peekedBracketToken.length);\n                        return peekedBracketToken;\n                    }\n                }\n                else {\n                    // Skip the entire token, as the token contains no brackets at all.\n                    this.lineTokenOffset++;\n                    this.lineCharOffset = endOffset;\n                }\n            }\n            else {\n                if (this.lineIdx === this.textBufferLineCount - 1) {\n                    break;\n                }\n                this.lineIdx++;\n                this.lineTokens = this.textModel.getLineTokens(this.lineIdx + 1);\n                this.lineTokenOffset = 0;\n                this.line = this.lineTokens.getLineContent();\n                this.lineCharOffset = 0;\n                lengthHeuristic += 33; // max 1000/33 = 30 lines\n                // This limits the amount of work to recompute min-indentation\n                if (lengthHeuristic > 1000) {\n                    // only break (automatically) at the end of line.\n                    break;\n                }\n            }\n            if (lengthHeuristic > 1500) {\n                // Eventually break regardless of the line length so that\n                // very long lines do not cause bad performance.\n                // This effective limits max indentation to 500, as\n                // indentation is not computed across multiple text nodes.\n                break;\n            }\n        }\n        // If a token contains some proper indentation, it also contains \\n{INDENTATION+}(?!{INDENTATION}),\n        // unless the line is too long.\n        // Thus, the min indentation of the document is the minimum min indentation of every text node.\n        const length = lengthDiff(startLineIdx, startLineCharOffset, this.lineIdx, this.lineCharOffset);\n        return new Token(length, 0 /* Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(length));\n    }\n}\nexport class FastTokenizer {\n    constructor(text, brackets) {\n        this.text = text;\n        this._offset = lengthZero;\n        this.idx = 0;\n        const regExpStr = brackets.getRegExpStr();\n        const regexp = regExpStr ? new RegExp(brackets.getRegExpStr() + '|\\n', 'g') : null;\n        const tokens = [];\n        let match;\n        let curLineCount = 0;\n        let lastLineBreakOffset = 0;\n        let lastTokenEndOffset = 0;\n        let lastTokenEndLine = 0;\n        const smallTextTokens0Line = new Array();\n        for (let i = 0; i < 60; i++) {\n            smallTextTokens0Line.push(new Token(toLength(0, i), 0 /* Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(toLength(0, i))));\n        }\n        const smallTextTokens1Line = new Array();\n        for (let i = 0; i < 60; i++) {\n            smallTextTokens1Line.push(new Token(toLength(1, i), 0 /* Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(toLength(1, i))));\n        }\n        if (regexp) {\n            regexp.lastIndex = 0;\n            // If a token contains indentation, it also contains \\n{INDENTATION+}(?!{INDENTATION})\n            while ((match = regexp.exec(text)) !== null) {\n                const curOffset = match.index;\n                const value = match[0];\n                if (value === '\\n') {\n                    curLineCount++;\n                    lastLineBreakOffset = curOffset + 1;\n                }\n                else {\n                    if (lastTokenEndOffset !== curOffset) {\n                        let token;\n                        if (lastTokenEndLine === curLineCount) {\n                            const colCount = curOffset - lastTokenEndOffset;\n                            if (colCount < smallTextTokens0Line.length) {\n                                token = smallTextTokens0Line[colCount];\n                            }\n                            else {\n                                const length = toLength(0, colCount);\n                                token = new Token(length, 0 /* Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(length));\n                            }\n                        }\n                        else {\n                            const lineCount = curLineCount - lastTokenEndLine;\n                            const colCount = curOffset - lastLineBreakOffset;\n                            if (lineCount === 1 && colCount < smallTextTokens1Line.length) {\n                                token = smallTextTokens1Line[colCount];\n                            }\n                            else {\n                                const length = toLength(lineCount, colCount);\n                                token = new Token(length, 0 /* Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(length));\n                            }\n                        }\n                        tokens.push(token);\n                    }\n                    // value is matched by regexp, so the token must exist\n                    tokens.push(brackets.getToken(value));\n                    lastTokenEndOffset = curOffset + value.length;\n                    lastTokenEndLine = curLineCount;\n                }\n            }\n        }\n        const offset = text.length;\n        if (lastTokenEndOffset !== offset) {\n            const length = (lastTokenEndLine === curLineCount)\n                ? toLength(0, offset - lastTokenEndOffset)\n                : toLength(curLineCount - lastTokenEndLine, offset - lastLineBreakOffset);\n            tokens.push(new Token(length, 0 /* Text */, -1, SmallImmutableSet.getEmpty(), new TextAstNode(length)));\n        }\n        this.length = toLength(curLineCount, offset - lastLineBreakOffset);\n        this.tokens = tokens;\n    }\n    get offset() {\n        return this._offset;\n    }\n    read() {\n        return this.tokens[this.idx++] || null;\n    }\n    peek() {\n        return this.tokens[this.idx] || null;\n    }\n    skip(length) {\n        throw new NotSupportedError();\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { escapeRegExpCharacters } from '../../../../../base/common/strings.js';\nimport { BracketAstNode } from './ast.js';\nimport { toLength } from './length.js';\nimport { identityKeyProvider, SmallImmutableSet } from './smallImmutableSet.js';\nimport { Token } from './tokenizer.js';\nexport class BracketTokens {\n    constructor(map) {\n        this.map = map;\n        this.hasRegExp = false;\n        this._regExpGlobal = null;\n    }\n    static createFromLanguage(configuration, denseKeyProvider) {\n        function getId(languageId, openingText) {\n            return denseKeyProvider.getKey(`${languageId}:::${openingText}`);\n        }\n        const brackets = configuration.characterPair.getColorizedBrackets();\n        const closingBrackets = new Map();\n        const openingBrackets = new Set();\n        for (const [openingText, closingText] of brackets) {\n            openingBrackets.add(openingText);\n            let info = closingBrackets.get(closingText);\n            const openingTextId = getId(configuration.languageId, openingText);\n            if (!info) {\n                info = { openingBrackets: SmallImmutableSet.getEmpty(), first: openingTextId };\n                closingBrackets.set(closingText, info);\n            }\n            info.openingBrackets = info.openingBrackets.add(openingTextId, identityKeyProvider);\n        }\n        const map = new Map();\n        for (const [closingText, info] of closingBrackets) {\n            const length = toLength(0, closingText.length);\n            map.set(closingText, new Token(length, 2 /* ClosingBracket */, info.first, info.openingBrackets, BracketAstNode.create(length, configuration.languageId, info.openingBrackets)));\n        }\n        for (const openingText of openingBrackets) {\n            const length = toLength(0, openingText.length);\n            const openingTextId = getId(configuration.languageId, openingText);\n            const bracketIds = SmallImmutableSet.getEmpty().add(openingTextId, identityKeyProvider);\n            map.set(openingText, new Token(length, 1 /* OpeningBracket */, openingTextId, bracketIds, BracketAstNode.create(length, configuration.languageId, bracketIds)));\n        }\n        return new BracketTokens(map);\n    }\n    getRegExpStr() {\n        if (this.isEmpty) {\n            return null;\n        }\n        else {\n            const keys = [...this.map.keys()];\n            keys.sort();\n            keys.reverse();\n            return keys.map(k => prepareBracketForRegExp(k)).join('|');\n        }\n    }\n    /**\n     * Returns null if there is no such regexp (because there are no brackets).\n    */\n    get regExpGlobal() {\n        if (!this.hasRegExp) {\n            const regExpStr = this.getRegExpStr();\n            this._regExpGlobal = regExpStr ? new RegExp(regExpStr, 'g') : null;\n            this.hasRegExp = true;\n        }\n        return this._regExpGlobal;\n    }\n    getToken(value) {\n        return this.map.get(value);\n    }\n    findClosingTokenText(openingBracketIds) {\n        for (const [closingText, info] of this.map) {\n            if (info.bracketIds.intersects(openingBracketIds)) {\n                return closingText;\n            }\n        }\n        return undefined;\n    }\n    get isEmpty() {\n        return this.map.size === 0;\n    }\n}\nfunction prepareBracketForRegExp(str) {\n    const escaped = escapeRegExpCharacters(str);\n    // This bracket pair uses letters like e.g. \"begin\" - \"end\" (see https://github.com/microsoft/vscode/issues/132162)\n    const needsWordBoundaries = (/^[\\w ]+$/.test(str));\n    return (needsWordBoundaries ? `\\\\b${escaped}\\\\b` : escaped);\n}\nexport class LanguageAgnosticBracketTokens {\n    constructor(denseKeyProvider, getLanguageConfiguration) {\n        this.denseKeyProvider = denseKeyProvider;\n        this.getLanguageConfiguration = getLanguageConfiguration;\n        this.languageIdToBracketTokens = new Map();\n    }\n    didLanguageChange(languageId) {\n        const existing = this.languageIdToBracketTokens.get(languageId);\n        if (!existing) {\n            return false;\n        }\n        const newRegExpStr = BracketTokens.createFromLanguage(this.getLanguageConfiguration(languageId), this.denseKeyProvider).getRegExpStr();\n        return existing.getRegExpStr() !== newRegExpStr;\n    }\n    getSingleLanguageBracketTokens(languageId) {\n        let singleLanguageBracketTokens = this.languageIdToBracketTokens.get(languageId);\n        if (!singleLanguageBracketTokens) {\n            singleLanguageBracketTokens = BracketTokens.createFromLanguage(this.getLanguageConfiguration(languageId), this.denseKeyProvider);\n            this.languageIdToBracketTokens.set(languageId, singleLanguageBracketTokens);\n        }\n        return singleLanguageBracketTokens;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ListAstNode } from './ast.js';\n/**\n * Concatenates a list of (2,3) AstNode's into a single (2,3) AstNode.\n * This mutates the items of the input array!\n * If all items have the same height, this method has runtime O(items.length).\n * Otherwise, it has runtime O(items.length * max(log(items.length), items.max(i => i.height))).\n*/\nexport function concat23Trees(items) {\n    if (items.length === 0) {\n        return null;\n    }\n    if (items.length === 1) {\n        return items[0];\n    }\n    let i = 0;\n    /**\n     * Reads nodes of same height and concatenates them to a single node.\n    */\n    function readNode() {\n        if (i >= items.length) {\n            return null;\n        }\n        const start = i;\n        const height = items[start].listHeight;\n        i++;\n        while (i < items.length && items[i].listHeight === height) {\n            i++;\n        }\n        if (i - start >= 2) {\n            return concat23TreesOfSameHeight(start === 0 && i === items.length ? items : items.slice(start, i), false);\n        }\n        else {\n            return items[start];\n        }\n    }\n    // The items might not have the same height.\n    // We merge all items by using a binary concat operator.\n    let first = readNode(); // There must be a first item\n    let second = readNode();\n    if (!second) {\n        return first;\n    }\n    for (let item = readNode(); item; item = readNode()) {\n        // Prefer concatenating smaller trees, as the runtime of concat depends on the tree height.\n        if (heightDiff(first, second) <= heightDiff(second, item)) {\n            first = concat(first, second);\n            second = item;\n        }\n        else {\n            second = concat(second, item);\n        }\n    }\n    const result = concat(first, second);\n    return result;\n}\nexport function concat23TreesOfSameHeight(items, createImmutableLists = false) {\n    if (items.length === 0) {\n        return null;\n    }\n    if (items.length === 1) {\n        return items[0];\n    }\n    let length = items.length;\n    // All trees have same height, just create parent nodes.\n    while (length > 3) {\n        const newLength = length >> 1;\n        for (let i = 0; i < newLength; i++) {\n            const j = i << 1;\n            items[i] = ListAstNode.create23(items[j], items[j + 1], j + 3 === length ? items[j + 2] : null, createImmutableLists);\n        }\n        length = newLength;\n    }\n    return ListAstNode.create23(items[0], items[1], length >= 3 ? items[2] : null, createImmutableLists);\n}\nfunction heightDiff(node1, node2) {\n    return Math.abs(node1.listHeight - node2.listHeight);\n}\nfunction concat(node1, node2) {\n    if (node1.listHeight === node2.listHeight) {\n        return ListAstNode.create23(node1, node2, null, false);\n    }\n    else if (node1.listHeight > node2.listHeight) {\n        // node1 is the tree we want to insert into\n        return append(node1, node2);\n    }\n    else {\n        return prepend(node2, node1);\n    }\n}\n/**\n * Appends the given node to the end of this (2,3) tree.\n * Returns the new root.\n*/\nfunction append(list, nodeToAppend) {\n    list = list.toMutable();\n    let curNode = list;\n    const parents = new Array();\n    let nodeToAppendOfCorrectHeight;\n    while (true) {\n        // assert nodeToInsert.listHeight <= curNode.listHeight\n        if (nodeToAppend.listHeight === curNode.listHeight) {\n            nodeToAppendOfCorrectHeight = nodeToAppend;\n            break;\n        }\n        // assert 0 <= nodeToInsert.listHeight < curNode.listHeight\n        if (curNode.kind !== 4 /* List */) {\n            throw new Error('unexpected');\n        }\n        parents.push(curNode);\n        // assert 2 <= curNode.childrenLength <= 3\n        curNode = curNode.makeLastElementMutable();\n    }\n    // assert nodeToAppendOfCorrectHeight!.listHeight === curNode.listHeight\n    for (let i = parents.length - 1; i >= 0; i--) {\n        const parent = parents[i];\n        if (nodeToAppendOfCorrectHeight) {\n            // Can we take the element?\n            if (parent.childrenLength >= 3) {\n                // assert parent.childrenLength === 3 && parent.listHeight === nodeToAppendOfCorrectHeight.listHeight + 1\n                // we need to split to maintain (2,3)-tree property.\n                // Send the third element + the new element to the parent.\n                nodeToAppendOfCorrectHeight = ListAstNode.create23(parent.unappendChild(), nodeToAppendOfCorrectHeight, null, false);\n            }\n            else {\n                parent.appendChildOfSameHeight(nodeToAppendOfCorrectHeight);\n                nodeToAppendOfCorrectHeight = undefined;\n            }\n        }\n        else {\n            parent.handleChildrenChanged();\n        }\n    }\n    if (nodeToAppendOfCorrectHeight) {\n        return ListAstNode.create23(list, nodeToAppendOfCorrectHeight, null, false);\n    }\n    else {\n        return list;\n    }\n}\n/**\n * Prepends the given node to the end of this (2,3) tree.\n * Returns the new root.\n*/\nfunction prepend(list, nodeToAppend) {\n    list = list.toMutable();\n    let curNode = list;\n    const parents = new Array();\n    // assert nodeToInsert.listHeight <= curNode.listHeight\n    while (nodeToAppend.listHeight !== curNode.listHeight) {\n        // assert 0 <= nodeToInsert.listHeight < curNode.listHeight\n        if (curNode.kind !== 4 /* List */) {\n            throw new Error('unexpected');\n        }\n        parents.push(curNode);\n        // assert 2 <= curNode.childrenFast.length <= 3\n        curNode = curNode.makeFirstElementMutable();\n    }\n    let nodeToPrependOfCorrectHeight = nodeToAppend;\n    // assert nodeToAppendOfCorrectHeight!.listHeight === curNode.listHeight\n    for (let i = parents.length - 1; i >= 0; i--) {\n        const parent = parents[i];\n        if (nodeToPrependOfCorrectHeight) {\n            // Can we take the element?\n            if (parent.childrenLength >= 3) {\n                // assert parent.childrenLength === 3 && parent.listHeight === nodeToAppendOfCorrectHeight.listHeight + 1\n                // we need to split to maintain (2,3)-tree property.\n                // Send the third element + the new element to the parent.\n                nodeToPrependOfCorrectHeight = ListAstNode.create23(nodeToPrependOfCorrectHeight, parent.unprependChild(), null, false);\n            }\n            else {\n                parent.prependChildOfSameHeight(nodeToPrependOfCorrectHeight);\n                nodeToPrependOfCorrectHeight = undefined;\n            }\n        }\n        else {\n            parent.handleChildrenChanged();\n        }\n    }\n    if (nodeToPrependOfCorrectHeight) {\n        return ListAstNode.create23(nodeToPrependOfCorrectHeight, list, null, false);\n    }\n    else {\n        return list;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { lengthAdd, lengthZero, lengthLessThan } from './length.js';\n/**\n * Allows to efficiently find a longest child at a given offset in a fixed node.\n * The requested offsets must increase monotonously.\n*/\nexport class NodeReader {\n    constructor(node) {\n        this.lastOffset = lengthZero;\n        this.nextNodes = [node];\n        this.offsets = [lengthZero];\n        this.idxs = [];\n    }\n    /**\n     * Returns the longest node at `offset` that satisfies the predicate.\n     * @param offset must be greater than or equal to the last offset this method has been called with!\n    */\n    readLongestNodeAt(offset, predicate) {\n        if (lengthLessThan(offset, this.lastOffset)) {\n            throw new Error('Invalid offset');\n        }\n        this.lastOffset = offset;\n        // Find the longest node of all those that are closest to the current offset.\n        while (true) {\n            const curNode = lastOrUndefined(this.nextNodes);\n            if (!curNode) {\n                return undefined;\n            }\n            const curNodeOffset = lastOrUndefined(this.offsets);\n            if (lengthLessThan(offset, curNodeOffset)) {\n                // The next best node is not here yet.\n                // The reader must advance before a cached node is hit.\n                return undefined;\n            }\n            if (lengthLessThan(curNodeOffset, offset)) {\n                // The reader is ahead of the current node.\n                if (lengthAdd(curNodeOffset, curNode.length) <= offset) {\n                    // The reader is after the end of the current node.\n                    this.nextNodeAfterCurrent();\n                }\n                else {\n                    // The reader is somewhere in the current node.\n                    const nextChildIdx = getNextChildIdx(curNode);\n                    if (nextChildIdx !== -1) {\n                        // Go to the first child and repeat.\n                        this.nextNodes.push(curNode.getChild(nextChildIdx));\n                        this.offsets.push(curNodeOffset);\n                        this.idxs.push(nextChildIdx);\n                    }\n                    else {\n                        // We don't have children\n                        this.nextNodeAfterCurrent();\n                    }\n                }\n            }\n            else {\n                // readerOffsetBeforeChange === curNodeOffset\n                if (predicate(curNode)) {\n                    this.nextNodeAfterCurrent();\n                    return curNode;\n                }\n                else {\n                    const nextChildIdx = getNextChildIdx(curNode);\n                    // look for shorter node\n                    if (nextChildIdx === -1) {\n                        // There is no shorter node.\n                        this.nextNodeAfterCurrent();\n                        return undefined;\n                    }\n                    else {\n                        // Descend into first child & repeat.\n                        this.nextNodes.push(curNode.getChild(nextChildIdx));\n                        this.offsets.push(curNodeOffset);\n                        this.idxs.push(nextChildIdx);\n                    }\n                }\n            }\n        }\n    }\n    // Navigates to the longest node that continues after the current node.\n    nextNodeAfterCurrent() {\n        while (true) {\n            const currentOffset = lastOrUndefined(this.offsets);\n            const currentNode = lastOrUndefined(this.nextNodes);\n            this.nextNodes.pop();\n            this.offsets.pop();\n            if (this.idxs.length === 0) {\n                // We just popped the root node, there is no next node.\n                break;\n            }\n            // Parent is not undefined, because idxs is not empty\n            const parent = lastOrUndefined(this.nextNodes);\n            const nextChildIdx = getNextChildIdx(parent, this.idxs[this.idxs.length - 1]);\n            if (nextChildIdx !== -1) {\n                this.nextNodes.push(parent.getChild(nextChildIdx));\n                this.offsets.push(lengthAdd(currentOffset, currentNode.length));\n                this.idxs[this.idxs.length - 1] = nextChildIdx;\n                break;\n            }\n            else {\n                this.idxs.pop();\n            }\n            // We fully consumed the parent.\n            // Current node is now parent, so call nextNodeAfterCurrent again\n        }\n    }\n}\nfunction getNextChildIdx(node, curIdx = -1) {\n    while (true) {\n        curIdx++;\n        if (curIdx >= node.childrenLength) {\n            return -1;\n        }\n        if (node.getChild(curIdx)) {\n            return curIdx;\n        }\n    }\n}\nfunction lastOrUndefined(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { InvalidBracketAstNode, ListAstNode, PairAstNode } from './ast.js';\nimport { BeforeEditPositionMapper } from './beforeEditPositionMapper.js';\nimport { SmallImmutableSet } from './smallImmutableSet.js';\nimport { lengthIsZero, lengthLessThan } from './length.js';\nimport { concat23Trees, concat23TreesOfSameHeight } from './concat23Trees.js';\nimport { NodeReader } from './nodeReader.js';\n/**\n * Non incrementally built ASTs are immutable.\n*/\nexport function parseDocument(tokenizer, edits, oldNode, createImmutableLists) {\n    const parser = new Parser(tokenizer, edits, oldNode, createImmutableLists);\n    return parser.parseDocument();\n}\n/**\n * Non incrementally built ASTs are immutable.\n*/\nclass Parser {\n    constructor(tokenizer, edits, oldNode, createImmutableLists) {\n        this.tokenizer = tokenizer;\n        this.createImmutableLists = createImmutableLists;\n        this._itemsConstructed = 0;\n        this._itemsFromCache = 0;\n        if (oldNode && createImmutableLists) {\n            throw new Error('Not supported');\n        }\n        this.oldNodeReader = oldNode ? new NodeReader(oldNode) : undefined;\n        this.positionMapper = new BeforeEditPositionMapper(edits, tokenizer.length);\n    }\n    parseDocument() {\n        this._itemsConstructed = 0;\n        this._itemsFromCache = 0;\n        let result = this.parseList(SmallImmutableSet.getEmpty());\n        if (!result) {\n            result = ListAstNode.getEmpty();\n        }\n        return result;\n    }\n    parseList(openedBracketIds) {\n        const items = new Array();\n        while (true) {\n            const token = this.tokenizer.peek();\n            if (!token ||\n                (token.kind === 2 /* ClosingBracket */ &&\n                    token.bracketIds.intersects(openedBracketIds))) {\n                break;\n            }\n            const child = this.parseChild(openedBracketIds);\n            if (child.kind === 4 /* List */ && child.childrenLength === 0) {\n                continue;\n            }\n            items.push(child);\n        }\n        // When there is no oldNodeReader, all items are created from scratch and must have the same height.\n        const result = this.oldNodeReader ? concat23Trees(items) : concat23TreesOfSameHeight(items, this.createImmutableLists);\n        return result;\n    }\n    parseChild(openedBracketIds) {\n        if (this.oldNodeReader) {\n            const maxCacheableLength = this.positionMapper.getDistanceToNextChange(this.tokenizer.offset);\n            if (!lengthIsZero(maxCacheableLength)) {\n                const cachedNode = this.oldNodeReader.readLongestNodeAt(this.positionMapper.getOffsetBeforeChange(this.tokenizer.offset), curNode => {\n                    if (!lengthLessThan(curNode.length, maxCacheableLength)) {\n                        // Either the node contains edited text or touches edited text.\n                        // In the latter case, brackets might have been extended (`end` -> `ending`), so even touching nodes cannot be reused.\n                        return false;\n                    }\n                    const canBeReused = curNode.canBeReused(openedBracketIds);\n                    return canBeReused;\n                });\n                if (cachedNode) {\n                    this._itemsFromCache++;\n                    this.tokenizer.skip(cachedNode.length);\n                    return cachedNode;\n                }\n            }\n        }\n        this._itemsConstructed++;\n        const token = this.tokenizer.read();\n        switch (token.kind) {\n            case 2 /* ClosingBracket */:\n                return new InvalidBracketAstNode(token.bracketIds, token.length);\n            case 0 /* Text */:\n                return token.astNode;\n            case 1 /* OpeningBracket */: {\n                const set = openedBracketIds.merge(token.bracketIds);\n                const child = this.parseList(set);\n                const nextToken = this.tokenizer.peek();\n                if (nextToken &&\n                    nextToken.kind === 2 /* ClosingBracket */ &&\n                    (nextToken.bracketId === token.bracketId || nextToken.bracketIds.intersects(token.bracketIds))) {\n                    this.tokenizer.read();\n                    return PairAstNode.create(token.astNode, child, nextToken.astNode);\n                }\n                else {\n                    return PairAstNode.create(token.astNode, child, null);\n                }\n            }\n            default:\n                throw new Error('unexpected');\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { Range } from '../../../core/range.js';\nimport { BracketInfo, BracketPairWithMinIndentationInfo } from '../../../textModelBracketPairs.js';\nimport { TextEditInfo } from './beforeEditPositionMapper.js';\nimport { LanguageAgnosticBracketTokens } from './brackets.js';\nimport { lengthAdd, lengthGreaterThanEqual, lengthLessThanEqual, lengthOfString, lengthsToRange, lengthZero, positionToLength, toLength } from './length.js';\nimport { parseDocument } from './parser.js';\nimport { DenseKeyProvider } from './smallImmutableSet.js';\nimport { FastTokenizer, TextBufferTokenizer } from './tokenizer.js';\nexport class BracketPairsTree extends Disposable {\n    constructor(textModel, getLanguageConfiguration) {\n        super();\n        this.textModel = textModel;\n        this.getLanguageConfiguration = getLanguageConfiguration;\n        this.didChangeEmitter = new Emitter();\n        this.denseKeyProvider = new DenseKeyProvider();\n        this.brackets = new LanguageAgnosticBracketTokens(this.denseKeyProvider, this.getLanguageConfiguration);\n        this.onDidChange = this.didChangeEmitter.event;\n        if (textModel.backgroundTokenizationState === 0 /* Uninitialized */) {\n            // There are no token information yet\n            const brackets = this.brackets.getSingleLanguageBracketTokens(this.textModel.getLanguageId());\n            const tokenizer = new FastTokenizer(this.textModel.getValue(), brackets);\n            this.initialAstWithoutTokens = parseDocument(tokenizer, [], undefined, true);\n            this.astWithTokens = this.initialAstWithoutTokens;\n        }\n        else if (textModel.backgroundTokenizationState === 2 /* Completed */) {\n            // Skip the initial ast, as there is no flickering.\n            // Directly create the tree with token information.\n            this.initialAstWithoutTokens = undefined;\n            this.astWithTokens = this.parseDocumentFromTextBuffer([], undefined, false);\n        }\n        else if (textModel.backgroundTokenizationState === 1 /* InProgress */) {\n            this.initialAstWithoutTokens = this.parseDocumentFromTextBuffer([], undefined, true);\n            this.astWithTokens = this.initialAstWithoutTokens;\n        }\n    }\n    didLanguageChange(languageId) {\n        return this.brackets.didLanguageChange(languageId);\n    }\n    //#region TextModel events\n    handleDidChangeBackgroundTokenizationState() {\n        if (this.textModel.backgroundTokenizationState === 2 /* Completed */) {\n            const wasUndefined = this.initialAstWithoutTokens === undefined;\n            // Clear the initial tree as we can use the tree with token information now.\n            this.initialAstWithoutTokens = undefined;\n            if (!wasUndefined) {\n                this.didChangeEmitter.fire();\n            }\n        }\n    }\n    handleDidChangeTokens({ ranges }) {\n        const edits = ranges.map(r => new TextEditInfo(toLength(r.fromLineNumber - 1, 0), toLength(r.toLineNumber, 0), toLength(r.toLineNumber - r.fromLineNumber + 1, 0)));\n        this.astWithTokens = this.parseDocumentFromTextBuffer(edits, this.astWithTokens, false);\n        if (!this.initialAstWithoutTokens) {\n            this.didChangeEmitter.fire();\n        }\n    }\n    handleContentChanged(change) {\n        const edits = change.changes.map(c => {\n            const range = Range.lift(c.range);\n            return new TextEditInfo(positionToLength(range.getStartPosition()), positionToLength(range.getEndPosition()), lengthOfString(c.text));\n        }).reverse();\n        this.astWithTokens = this.parseDocumentFromTextBuffer(edits, this.astWithTokens, false);\n        if (this.initialAstWithoutTokens) {\n            this.initialAstWithoutTokens = this.parseDocumentFromTextBuffer(edits, this.initialAstWithoutTokens, false);\n        }\n    }\n    //#endregion\n    /**\n     * @pure (only if isPure = true)\n    */\n    parseDocumentFromTextBuffer(edits, previousAst, immutable) {\n        // Is much faster if `isPure = false`.\n        const isPure = false;\n        const previousAstClone = isPure ? previousAst === null || previousAst === void 0 ? void 0 : previousAst.deepClone() : previousAst;\n        const tokenizer = new TextBufferTokenizer(this.textModel, this.brackets);\n        const result = parseDocument(tokenizer, edits, previousAstClone, immutable);\n        return result;\n    }\n    getBracketsInRange(range) {\n        const startOffset = toLength(range.startLineNumber - 1, range.startColumn - 1);\n        const endOffset = toLength(range.endLineNumber - 1, range.endColumn - 1);\n        const result = new Array();\n        const node = this.initialAstWithoutTokens || this.astWithTokens;\n        collectBrackets(node, lengthZero, node.length, startOffset, endOffset, result);\n        return result;\n    }\n    getBracketPairsInRange(range, includeMinIndentation) {\n        const result = new Array();\n        const startLength = positionToLength(range.getStartPosition());\n        const endLength = positionToLength(range.getEndPosition());\n        const node = this.initialAstWithoutTokens || this.astWithTokens;\n        const context = new CollectBracketPairsContext(result, includeMinIndentation, this.textModel);\n        collectBracketPairs(node, lengthZero, node.length, startLength, endLength, context);\n        return result;\n    }\n}\nfunction collectBrackets(node, nodeOffsetStart, nodeOffsetEnd, startOffset, endOffset, result, level = 0) {\n    if (node.kind === 4 /* List */) {\n        for (const child of node.children) {\n            nodeOffsetEnd = lengthAdd(nodeOffsetStart, child.length);\n            if (lengthLessThanEqual(nodeOffsetStart, endOffset) && lengthGreaterThanEqual(nodeOffsetEnd, startOffset)) {\n                collectBrackets(child, nodeOffsetStart, nodeOffsetEnd, startOffset, endOffset, result, level);\n            }\n            nodeOffsetStart = nodeOffsetEnd;\n        }\n    }\n    else if (node.kind === 2 /* Pair */) {\n        // Don't use node.children here to improve performance\n        level++;\n        {\n            const child = node.openingBracket;\n            nodeOffsetEnd = lengthAdd(nodeOffsetStart, child.length);\n            if (lengthLessThanEqual(nodeOffsetStart, endOffset) && lengthGreaterThanEqual(nodeOffsetEnd, startOffset)) {\n                const range = lengthsToRange(nodeOffsetStart, nodeOffsetEnd);\n                result.push(new BracketInfo(range, level - 1, !node.closingBracket));\n            }\n            nodeOffsetStart = nodeOffsetEnd;\n        }\n        if (node.child) {\n            const child = node.child;\n            nodeOffsetEnd = lengthAdd(nodeOffsetStart, child.length);\n            if (lengthLessThanEqual(nodeOffsetStart, endOffset) && lengthGreaterThanEqual(nodeOffsetEnd, startOffset)) {\n                collectBrackets(child, nodeOffsetStart, nodeOffsetEnd, startOffset, endOffset, result, level);\n            }\n            nodeOffsetStart = nodeOffsetEnd;\n        }\n        if (node.closingBracket) {\n            const child = node.closingBracket;\n            nodeOffsetEnd = lengthAdd(nodeOffsetStart, child.length);\n            if (lengthLessThanEqual(nodeOffsetStart, endOffset) && lengthGreaterThanEqual(nodeOffsetEnd, startOffset)) {\n                const range = lengthsToRange(nodeOffsetStart, nodeOffsetEnd);\n                result.push(new BracketInfo(range, level - 1, false));\n            }\n            nodeOffsetStart = nodeOffsetEnd;\n        }\n    }\n    else if (node.kind === 3 /* UnexpectedClosingBracket */) {\n        const range = lengthsToRange(nodeOffsetStart, nodeOffsetEnd);\n        result.push(new BracketInfo(range, level - 1, true));\n    }\n    else if (node.kind === 1 /* Bracket */) {\n        const range = lengthsToRange(nodeOffsetStart, nodeOffsetEnd);\n        result.push(new BracketInfo(range, level - 1, false));\n    }\n}\nclass CollectBracketPairsContext {\n    constructor(result, includeMinIndentation, textModel) {\n        this.result = result;\n        this.includeMinIndentation = includeMinIndentation;\n        this.textModel = textModel;\n    }\n}\nfunction collectBracketPairs(node, nodeOffset, nodeOffsetEnd, startOffset, endOffset, context, level = 0) {\n    var _a;\n    if (node.kind === 2 /* Pair */) {\n        const openingBracketEnd = lengthAdd(nodeOffset, node.openingBracket.length);\n        let minIndentation = -1;\n        if (context.includeMinIndentation) {\n            minIndentation = node.computeMinIndentation(nodeOffset, context.textModel);\n        }\n        context.result.push(new BracketPairWithMinIndentationInfo(lengthsToRange(nodeOffset, nodeOffsetEnd), lengthsToRange(nodeOffset, openingBracketEnd), node.closingBracket\n            ? lengthsToRange(lengthAdd(openingBracketEnd, ((_a = node.child) === null || _a === void 0 ? void 0 : _a.length) || lengthZero), nodeOffsetEnd)\n            : undefined, level, minIndentation));\n        level++;\n    }\n    let curOffset = nodeOffset;\n    for (const child of node.children) {\n        const childOffset = curOffset;\n        curOffset = lengthAdd(curOffset, child.length);\n        if (lengthLessThanEqual(childOffset, endOffset) && lengthLessThanEqual(startOffset, curOffset)) {\n            collectBracketPairs(child, childOffset, curOffset, startOffset, endOffset, context, level);\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { BracketPairsTree } from './bracketPairsTree/bracketPairsTree.js';\nimport { ignoreBracketsInToken } from '../../languages/supports.js';\nimport { BracketsUtils } from '../../languages/supports/richEditBrackets.js';\nexport class BracketPairsTextModelPart extends Disposable {\n    constructor(textModel, languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.languageConfigurationService = languageConfigurationService;\n        this.bracketPairsTree = this._register(new MutableDisposable());\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.bracketsRequested = false;\n        this._register(this.languageConfigurationService.onDidChange(e => {\n            var _a;\n            if (!e.languageId || ((_a = this.bracketPairsTree.value) === null || _a === void 0 ? void 0 : _a.object.didLanguageChange(e.languageId))) {\n                this.bracketPairsTree.clear();\n                this.updateBracketPairsTree();\n            }\n        }));\n    }\n    get isDocumentSupported() {\n        const maxSupportedDocumentLength = /* max lines */ 50000 * /* average column count */ 100;\n        return this.textModel.getValueLength() <= maxSupportedDocumentLength;\n    }\n    //#region TextModel events\n    handleDidChangeOptions(e) {\n        this.bracketPairsTree.clear();\n        this.updateBracketPairsTree();\n    }\n    handleDidChangeLanguage(e) {\n        this.bracketPairsTree.clear();\n        this.updateBracketPairsTree();\n    }\n    handleDidChangeContent(change) {\n        var _a;\n        (_a = this.bracketPairsTree.value) === null || _a === void 0 ? void 0 : _a.object.handleContentChanged(change);\n    }\n    handleDidChangeBackgroundTokenizationState() {\n        var _a;\n        (_a = this.bracketPairsTree.value) === null || _a === void 0 ? void 0 : _a.object.handleDidChangeBackgroundTokenizationState();\n    }\n    handleDidChangeTokens(e) {\n        var _a;\n        (_a = this.bracketPairsTree.value) === null || _a === void 0 ? void 0 : _a.object.handleDidChangeTokens(e);\n    }\n    //#endregion\n    updateBracketPairsTree() {\n        if (this.bracketsRequested && this.isDocumentSupported) {\n            if (!this.bracketPairsTree.value) {\n                const store = new DisposableStore();\n                this.bracketPairsTree.value = createDisposableRef(store.add(new BracketPairsTree(this.textModel, (languageId) => {\n                    return this.languageConfigurationService.getLanguageConfiguration(languageId);\n                })), store);\n                store.add(this.bracketPairsTree.value.object.onDidChange(e => this.onDidChangeEmitter.fire(e)));\n                this.onDidChangeEmitter.fire();\n            }\n        }\n        else {\n            if (this.bracketPairsTree.value) {\n                this.bracketPairsTree.clear();\n                // Important: Don't call fire if there was no change!\n                this.onDidChangeEmitter.fire();\n            }\n        }\n    }\n    /**\n     * Returns all bracket pairs that intersect the given range.\n     * The result is sorted by the start position.\n    */\n    getBracketPairsInRange(range) {\n        var _a;\n        this.bracketsRequested = true;\n        this.updateBracketPairsTree();\n        return ((_a = this.bracketPairsTree.value) === null || _a === void 0 ? void 0 : _a.object.getBracketPairsInRange(range, false)) || [];\n    }\n    getBracketPairsInRangeWithMinIndentation(range) {\n        var _a;\n        this.bracketsRequested = true;\n        this.updateBracketPairsTree();\n        return ((_a = this.bracketPairsTree.value) === null || _a === void 0 ? void 0 : _a.object.getBracketPairsInRange(range, true)) || [];\n    }\n    getBracketsInRange(range) {\n        var _a;\n        this.bracketsRequested = true;\n        this.updateBracketPairsTree();\n        return ((_a = this.bracketPairsTree.value) === null || _a === void 0 ? void 0 : _a.object.getBracketsInRange(range)) || [];\n    }\n    findMatchingBracketUp(_bracket, _position, maxDuration) {\n        const bracket = _bracket.toLowerCase();\n        const position = this.textModel.validatePosition(_position);\n        const languageId = this.textModel.getLanguageIdAtPosition(position.lineNumber, position.column);\n        const bracketsSupport = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n        if (!bracketsSupport) {\n            return null;\n        }\n        const data = bracketsSupport.textIsBracket[bracket];\n        if (!data) {\n            return null;\n        }\n        return stripBracketSearchCanceled(this._findMatchingBracketUp(data, position, createTimeBasedContinueBracketSearchPredicate(maxDuration)));\n    }\n    matchBracket(position, maxDuration) {\n        const continueSearchPredicate = createTimeBasedContinueBracketSearchPredicate(maxDuration);\n        return this._matchBracket(this.textModel.validatePosition(position), continueSearchPredicate);\n    }\n    _establishBracketSearchOffsets(position, lineTokens, modeBrackets, tokenIndex) {\n        const tokenCount = lineTokens.getCount();\n        const currentLanguageId = lineTokens.getLanguageId(tokenIndex);\n        // limit search to not go before `maxBracketLength`\n        let searchStartOffset = Math.max(0, position.column - 1 - modeBrackets.maxBracketLength);\n        for (let i = tokenIndex - 1; i >= 0; i--) {\n            const tokenEndOffset = lineTokens.getEndOffset(i);\n            if (tokenEndOffset <= searchStartOffset) {\n                break;\n            }\n            if (ignoreBracketsInToken(lineTokens.getStandardTokenType(i)) || lineTokens.getLanguageId(i) !== currentLanguageId) {\n                searchStartOffset = tokenEndOffset;\n                break;\n            }\n        }\n        // limit search to not go after `maxBracketLength`\n        let searchEndOffset = Math.min(lineTokens.getLineContent().length, position.column - 1 + modeBrackets.maxBracketLength);\n        for (let i = tokenIndex + 1; i < tokenCount; i++) {\n            const tokenStartOffset = lineTokens.getStartOffset(i);\n            if (tokenStartOffset >= searchEndOffset) {\n                break;\n            }\n            if (ignoreBracketsInToken(lineTokens.getStandardTokenType(i)) || lineTokens.getLanguageId(i) !== currentLanguageId) {\n                searchEndOffset = tokenStartOffset;\n                break;\n            }\n        }\n        return { searchStartOffset, searchEndOffset };\n    }\n    _matchBracket(position, continueSearchPredicate) {\n        const lineNumber = position.lineNumber;\n        const lineTokens = this.textModel.getLineTokens(lineNumber);\n        const lineText = this.textModel.getLineContent(lineNumber);\n        const tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n        if (tokenIndex < 0) {\n            return null;\n        }\n        const currentModeBrackets = this.languageConfigurationService.getLanguageConfiguration(lineTokens.getLanguageId(tokenIndex)).brackets;\n        // check that the token is not to be ignored\n        if (currentModeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex))) {\n            let { searchStartOffset, searchEndOffset } = this._establishBracketSearchOffsets(position, lineTokens, currentModeBrackets, tokenIndex);\n            // it might be the case that [currentTokenStart -> currentTokenEnd] contains multiple brackets\n            // `bestResult` will contain the most right-side result\n            let bestResult = null;\n            while (true) {\n                const foundBracket = BracketsUtils.findNextBracketInRange(currentModeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (!foundBracket) {\n                    // there are no more brackets in this text\n                    break;\n                }\n                // check that we didn't hit a bracket too far away from position\n                if (foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n                    const foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1).toLowerCase();\n                    const r = this._matchFoundBracket(foundBracket, currentModeBrackets.textIsBracket[foundBracketText], currentModeBrackets.textIsOpenBracket[foundBracketText], continueSearchPredicate);\n                    if (r) {\n                        if (r instanceof BracketSearchCanceled) {\n                            return null;\n                        }\n                        bestResult = r;\n                    }\n                }\n                searchStartOffset = foundBracket.endColumn - 1;\n            }\n            if (bestResult) {\n                return bestResult;\n            }\n        }\n        // If position is in between two tokens, try also looking in the previous token\n        if (tokenIndex > 0 && lineTokens.getStartOffset(tokenIndex) === position.column - 1) {\n            const prevTokenIndex = tokenIndex - 1;\n            const prevModeBrackets = this.languageConfigurationService.getLanguageConfiguration(lineTokens.getLanguageId(prevTokenIndex)).brackets;\n            // check that previous token is not to be ignored\n            if (prevModeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(prevTokenIndex))) {\n                const { searchStartOffset, searchEndOffset } = this._establishBracketSearchOffsets(position, lineTokens, prevModeBrackets, prevTokenIndex);\n                const foundBracket = BracketsUtils.findPrevBracketInRange(prevModeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                // check that we didn't hit a bracket too far away from position\n                if (foundBracket && foundBracket.startColumn <= position.column && position.column <= foundBracket.endColumn) {\n                    const foundBracketText = lineText.substring(foundBracket.startColumn - 1, foundBracket.endColumn - 1).toLowerCase();\n                    const r = this._matchFoundBracket(foundBracket, prevModeBrackets.textIsBracket[foundBracketText], prevModeBrackets.textIsOpenBracket[foundBracketText], continueSearchPredicate);\n                    if (r) {\n                        if (r instanceof BracketSearchCanceled) {\n                            return null;\n                        }\n                        return r;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    _matchFoundBracket(foundBracket, data, isOpen, continueSearchPredicate) {\n        if (!data) {\n            return null;\n        }\n        const matched = (isOpen\n            ? this._findMatchingBracketDown(data, foundBracket.getEndPosition(), continueSearchPredicate)\n            : this._findMatchingBracketUp(data, foundBracket.getStartPosition(), continueSearchPredicate));\n        if (!matched) {\n            return null;\n        }\n        if (matched instanceof BracketSearchCanceled) {\n            return matched;\n        }\n        return [foundBracket, matched];\n    }\n    _findMatchingBracketUp(bracket, position, continueSearchPredicate) {\n        // console.log('_findMatchingBracketUp: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n        const languageId = bracket.languageId;\n        const reversedBracketRegex = bracket.reversedRegex;\n        let count = -1;\n        let totalCallCount = 0;\n        const searchPrevMatchingBracketInRange = (lineNumber, lineText, searchStartOffset, searchEndOffset) => {\n            while (true) {\n                if (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n                    return BracketSearchCanceled.INSTANCE;\n                }\n                const r = BracketsUtils.findPrevBracketInRange(reversedBracketRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (!r) {\n                    break;\n                }\n                const hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n                if (bracket.isOpen(hitText)) {\n                    count++;\n                }\n                else if (bracket.isClose(hitText)) {\n                    count--;\n                }\n                if (count === 0) {\n                    return r;\n                }\n                searchEndOffset = r.startColumn - 1;\n            }\n            return null;\n        };\n        for (let lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n            const lineTokens = this.textModel.getLineTokens(lineNumber);\n            const tokenCount = lineTokens.getCount();\n            const lineText = this.textModel.getLineContent(lineNumber);\n            let tokenIndex = tokenCount - 1;\n            let searchStartOffset = lineText.length;\n            let searchEndOffset = lineText.length;\n            if (lineNumber === position.lineNumber) {\n                tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n                searchStartOffset = position.column - 1;\n                searchEndOffset = position.column - 1;\n            }\n            let prevSearchInToken = true;\n            for (; tokenIndex >= 0; tokenIndex--) {\n                const searchInToken = (lineTokens.getLanguageId(tokenIndex) === languageId && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n                if (searchInToken) {\n                    // this token should be searched\n                    if (prevSearchInToken) {\n                        // the previous token should be searched, simply extend searchStartOffset\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                    }\n                    else {\n                        // the previous token should not be searched\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                }\n                else {\n                    // this token should not be searched\n                    if (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = searchPrevMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return r;\n                        }\n                    }\n                }\n                prevSearchInToken = searchInToken;\n            }\n            if (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                const r = searchPrevMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (r) {\n                    return r;\n                }\n            }\n        }\n        return null;\n    }\n    _findMatchingBracketDown(bracket, position, continueSearchPredicate) {\n        // console.log('_findMatchingBracketDown: ', 'bracket: ', JSON.stringify(bracket), 'startPosition: ', String(position));\n        const languageId = bracket.languageId;\n        const bracketRegex = bracket.forwardRegex;\n        let count = 1;\n        let totalCallCount = 0;\n        const searchNextMatchingBracketInRange = (lineNumber, lineText, searchStartOffset, searchEndOffset) => {\n            while (true) {\n                if (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n                    return BracketSearchCanceled.INSTANCE;\n                }\n                const r = BracketsUtils.findNextBracketInRange(bracketRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (!r) {\n                    break;\n                }\n                const hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n                if (bracket.isOpen(hitText)) {\n                    count++;\n                }\n                else if (bracket.isClose(hitText)) {\n                    count--;\n                }\n                if (count === 0) {\n                    return r;\n                }\n                searchStartOffset = r.endColumn - 1;\n            }\n            return null;\n        };\n        const lineCount = this.textModel.getLineCount();\n        for (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n            const lineTokens = this.textModel.getLineTokens(lineNumber);\n            const tokenCount = lineTokens.getCount();\n            const lineText = this.textModel.getLineContent(lineNumber);\n            let tokenIndex = 0;\n            let searchStartOffset = 0;\n            let searchEndOffset = 0;\n            if (lineNumber === position.lineNumber) {\n                tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n                searchStartOffset = position.column - 1;\n                searchEndOffset = position.column - 1;\n            }\n            let prevSearchInToken = true;\n            for (; tokenIndex < tokenCount; tokenIndex++) {\n                const searchInToken = (lineTokens.getLanguageId(tokenIndex) === languageId && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n                if (searchInToken) {\n                    // this token should be searched\n                    if (prevSearchInToken) {\n                        // the previous token should be searched, simply extend searchEndOffset\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                    else {\n                        // the previous token should not be searched\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                }\n                else {\n                    // this token should not be searched\n                    if (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = searchNextMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return r;\n                        }\n                    }\n                }\n                prevSearchInToken = searchInToken;\n            }\n            if (prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                const r = searchNextMatchingBracketInRange(lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (r) {\n                    return r;\n                }\n            }\n        }\n        return null;\n    }\n    findPrevBracket(_position) {\n        const position = this.textModel.validatePosition(_position);\n        let languageId = null;\n        let modeBrackets = null;\n        for (let lineNumber = position.lineNumber; lineNumber >= 1; lineNumber--) {\n            const lineTokens = this.textModel.getLineTokens(lineNumber);\n            const tokenCount = lineTokens.getCount();\n            const lineText = this.textModel.getLineContent(lineNumber);\n            let tokenIndex = tokenCount - 1;\n            let searchStartOffset = lineText.length;\n            let searchEndOffset = lineText.length;\n            if (lineNumber === position.lineNumber) {\n                tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n                searchStartOffset = position.column - 1;\n                searchEndOffset = position.column - 1;\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                }\n            }\n            let prevSearchInToken = true;\n            for (; tokenIndex >= 0; tokenIndex--) {\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    // language id change!\n                    if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return this._toFoundBracket(modeBrackets, r);\n                        }\n                        prevSearchInToken = false;\n                    }\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                }\n                const searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n                if (searchInToken) {\n                    // this token should be searched\n                    if (prevSearchInToken) {\n                        // the previous token should be searched, simply extend searchStartOffset\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                    }\n                    else {\n                        // the previous token should not be searched\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                }\n                else {\n                    // this token should not be searched\n                    if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return this._toFoundBracket(modeBrackets, r);\n                        }\n                    }\n                }\n                prevSearchInToken = searchInToken;\n            }\n            if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                const r = BracketsUtils.findPrevBracketInRange(modeBrackets.reversedRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (r) {\n                    return this._toFoundBracket(modeBrackets, r);\n                }\n            }\n        }\n        return null;\n    }\n    findNextBracket(_position) {\n        const position = this.textModel.validatePosition(_position);\n        const lineCount = this.textModel.getLineCount();\n        let languageId = null;\n        let modeBrackets = null;\n        for (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n            const lineTokens = this.textModel.getLineTokens(lineNumber);\n            const tokenCount = lineTokens.getCount();\n            const lineText = this.textModel.getLineContent(lineNumber);\n            let tokenIndex = 0;\n            let searchStartOffset = 0;\n            let searchEndOffset = 0;\n            if (lineNumber === position.lineNumber) {\n                tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n                searchStartOffset = position.column - 1;\n                searchEndOffset = position.column - 1;\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                }\n            }\n            let prevSearchInToken = true;\n            for (; tokenIndex < tokenCount; tokenIndex++) {\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    // language id change!\n                    if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return this._toFoundBracket(modeBrackets, r);\n                        }\n                        prevSearchInToken = false;\n                    }\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                }\n                const searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n                if (searchInToken) {\n                    // this token should be searched\n                    if (prevSearchInToken) {\n                        // the previous token should be searched, simply extend searchEndOffset\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                    else {\n                        // the previous token should not be searched\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                }\n                else {\n                    // this token should not be searched\n                    if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return this._toFoundBracket(modeBrackets, r);\n                        }\n                    }\n                }\n                prevSearchInToken = searchInToken;\n            }\n            if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                const r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (r) {\n                    return this._toFoundBracket(modeBrackets, r);\n                }\n            }\n        }\n        return null;\n    }\n    findEnclosingBrackets(_position, maxDuration) {\n        const continueSearchPredicate = createTimeBasedContinueBracketSearchPredicate(maxDuration);\n        const position = this.textModel.validatePosition(_position);\n        const lineCount = this.textModel.getLineCount();\n        const savedCounts = new Map();\n        let counts = [];\n        const resetCounts = (languageId, modeBrackets) => {\n            if (!savedCounts.has(languageId)) {\n                const tmp = [];\n                for (let i = 0, len = modeBrackets ? modeBrackets.brackets.length : 0; i < len; i++) {\n                    tmp[i] = 0;\n                }\n                savedCounts.set(languageId, tmp);\n            }\n            counts = savedCounts.get(languageId);\n        };\n        let totalCallCount = 0;\n        const searchInRange = (modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset) => {\n            while (true) {\n                if (continueSearchPredicate && (++totalCallCount) % 100 === 0 && !continueSearchPredicate()) {\n                    return BracketSearchCanceled.INSTANCE;\n                }\n                const r = BracketsUtils.findNextBracketInRange(modeBrackets.forwardRegex, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (!r) {\n                    break;\n                }\n                const hitText = lineText.substring(r.startColumn - 1, r.endColumn - 1).toLowerCase();\n                const bracket = modeBrackets.textIsBracket[hitText];\n                if (bracket) {\n                    if (bracket.isOpen(hitText)) {\n                        counts[bracket.index]++;\n                    }\n                    else if (bracket.isClose(hitText)) {\n                        counts[bracket.index]--;\n                    }\n                    if (counts[bracket.index] === -1) {\n                        return this._matchFoundBracket(r, bracket, false, continueSearchPredicate);\n                    }\n                }\n                searchStartOffset = r.endColumn - 1;\n            }\n            return null;\n        };\n        let languageId = null;\n        let modeBrackets = null;\n        for (let lineNumber = position.lineNumber; lineNumber <= lineCount; lineNumber++) {\n            const lineTokens = this.textModel.getLineTokens(lineNumber);\n            const tokenCount = lineTokens.getCount();\n            const lineText = this.textModel.getLineContent(lineNumber);\n            let tokenIndex = 0;\n            let searchStartOffset = 0;\n            let searchEndOffset = 0;\n            if (lineNumber === position.lineNumber) {\n                tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n                searchStartOffset = position.column - 1;\n                searchEndOffset = position.column - 1;\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                    resetCounts(languageId, modeBrackets);\n                }\n            }\n            let prevSearchInToken = true;\n            for (; tokenIndex < tokenCount; tokenIndex++) {\n                const tokenLanguageId = lineTokens.getLanguageId(tokenIndex);\n                if (languageId !== tokenLanguageId) {\n                    // language id change!\n                    if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return stripBracketSearchCanceled(r);\n                        }\n                        prevSearchInToken = false;\n                    }\n                    languageId = tokenLanguageId;\n                    modeBrackets = this.languageConfigurationService.getLanguageConfiguration(languageId).brackets;\n                    resetCounts(languageId, modeBrackets);\n                }\n                const searchInToken = (!!modeBrackets && !ignoreBracketsInToken(lineTokens.getStandardTokenType(tokenIndex)));\n                if (searchInToken) {\n                    // this token should be searched\n                    if (prevSearchInToken) {\n                        // the previous token should be searched, simply extend searchEndOffset\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                    else {\n                        // the previous token should not be searched\n                        searchStartOffset = lineTokens.getStartOffset(tokenIndex);\n                        searchEndOffset = lineTokens.getEndOffset(tokenIndex);\n                    }\n                }\n                else {\n                    // this token should not be searched\n                    if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                        const r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                        if (r) {\n                            return stripBracketSearchCanceled(r);\n                        }\n                    }\n                }\n                prevSearchInToken = searchInToken;\n            }\n            if (modeBrackets && prevSearchInToken && searchStartOffset !== searchEndOffset) {\n                const r = searchInRange(modeBrackets, lineNumber, lineText, searchStartOffset, searchEndOffset);\n                if (r) {\n                    return stripBracketSearchCanceled(r);\n                }\n            }\n        }\n        return null;\n    }\n    _toFoundBracket(modeBrackets, r) {\n        if (!r) {\n            return null;\n        }\n        let text = this.textModel.getValueInRange(r);\n        text = text.toLowerCase();\n        const data = modeBrackets.textIsBracket[text];\n        if (!data) {\n            return null;\n        }\n        return {\n            range: r,\n            open: data.open,\n            close: data.close,\n            isOpen: modeBrackets.textIsOpenBracket[text]\n        };\n    }\n}\nfunction createDisposableRef(object, disposable) {\n    return {\n        object,\n        dispose: () => disposable === null || disposable === void 0 ? void 0 : disposable.dispose(),\n    };\n}\nfunction createTimeBasedContinueBracketSearchPredicate(maxDuration) {\n    if (typeof maxDuration === 'undefined') {\n        return () => true;\n    }\n    else {\n        const startTime = Date.now();\n        return () => {\n            return (Date.now() - startTime <= maxDuration);\n        };\n    }\n}\nclass BracketSearchCanceled {\n    constructor() {\n        this._searchCanceledBrand = undefined;\n    }\n}\nBracketSearchCanceled.INSTANCE = new BracketSearchCanceled();\nfunction stripBracketSearchCanceled(result) {\n    if (result instanceof BracketSearchCanceled) {\n        return null;\n    }\n    return result;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, editorForeground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n/**\n * Definition of the editor colors\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', { dark: null, light: null, hc: null }, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', { dark: '#282828', light: '#eeeeee', hc: '#f38518' }, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', { dark: '#ffffff0b', light: '#fdff0033', hc: null }, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'), true);\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hc: null }, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'), true);\nexport const editorCursorForeground = registerColor('editorCursor.foreground', { dark: '#AEAFAD', light: Color.black, hc: Color.white }, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', { dark: '#e3e4e229', light: '#33333333', hc: '#e3e4e229' }, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorIndentGuides = registerColor('editorIndentGuide.background', { dark: editorWhitespaces, light: editorWhitespaces, hc: editorWhitespaces }, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'));\nexport const editorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', { dark: editorWhitespaces, light: editorWhitespaces, hc: editorWhitespaces }, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', { dark: '#858585', light: '#237893', hc: Color.white }, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', { dark: '#c6c6c6', light: '#0B216F', hc: activeContrastBorder }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', { dark: deprecatedEditorActiveLineNumber, light: deprecatedEditorActiveLineNumber, hc: deprecatedEditorActiveLineNumber }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorRuler = registerColor('editorRuler.foreground', { dark: '#5A5A5A', light: Color.lightgrey, hc: Color.white }, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', { dark: '#999999', light: '#919191', hc: '#999999' }, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', { dark: '#0064001a', light: '#0064001a', hc: '#0064001a' }, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', { dark: '#888', light: '#B9B9B9', hc: contrastBorder }, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', { dark: '#7f7f7f4d', light: '#7f7f7f4d', hc: '#7f7f7f4d' }, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler. Only used when the minimap is enabled and placed on the right side of the editor.'));\nexport const editorGutter = registerColor('editorGutter.background', { dark: editorBackground, light: editorBackground, hc: editorBackground }, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', { dark: null, light: null, hc: Color.fromHex('#fff').transparent(0.8) }, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', { dark: Color.fromHex('#000a'), light: Color.fromHex('#0007'), hc: null }, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nexport const ghostTextBorder = registerColor('editorGhostText.border', { dark: null, light: null, hc: Color.fromHex('#fff').transparent(0.8) }, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', { dark: Color.fromHex('#ffffff56'), light: Color.fromHex('#0007'), hc: null }, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', { dark: null, light: null, hc: null }, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', { dark: rulerRangeDefault, light: rulerRangeDefault, hc: rulerRangeDefault }, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hc: new Color(new RGBA(255, 50, 50, 1)) }, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hc: editorInfoBorder }, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', { dark: '#FFD700', light: '#0431FAFF', hc: '#FFD700' }, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', { dark: '#DA70D6', light: '#319331FF', hc: '#DA70D6' }, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', { dark: '#179FFF', light: '#7B3814FF', hc: '#87CEFA' }, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', { dark: new Color(new RGBA(255, 18, 18, 0.8)), light: new Color(new RGBA(255, 18, 18, 0.8)), hc: new Color(new RGBA(255, 50, 50, 1)) }, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', { dark: '#00000000', light: '#00000000', hc: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', { dark: '#BD9B03', light: '#CEA33D', hc: '#ff0000' }, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.'));\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n    const background = theme.getColor(editorBackground);\n    if (background) {\n        collector.addRule(`.monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input { background-color: ${background}; }`);\n    }\n    const foreground = theme.getColor(editorForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor, .monaco-editor .inputarea.ime-input { color: ${foreground}; }`);\n    }\n    const gutter = theme.getColor(editorGutter);\n    if (gutter) {\n        collector.addRule(`.monaco-editor .margin { background-color: ${gutter}; }`);\n    }\n    const rangeHighlight = theme.getColor(editorRangeHighlight);\n    if (rangeHighlight) {\n        collector.addRule(`.monaco-editor .rangeHighlight { background-color: ${rangeHighlight}; }`);\n    }\n    const rangeHighlightBorder = theme.getColor(editorRangeHighlightBorder);\n    if (rangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .rangeHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${rangeHighlightBorder}; }`);\n    }\n    const symbolHighlight = theme.getColor(editorSymbolHighlight);\n    if (symbolHighlight) {\n        collector.addRule(`.monaco-editor .symbolHighlight { background-color: ${symbolHighlight}; }`);\n    }\n    const symbolHighlightBorder = theme.getColor(editorSymbolHighlightBorder);\n    if (symbolHighlightBorder) {\n        collector.addRule(`.monaco-editor .symbolHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${symbolHighlightBorder}; }`);\n    }\n    const invisibles = theme.getColor(editorWhitespaces);\n    if (invisibles) {\n        collector.addRule(`.monaco-editor .mtkw { color: ${invisibles} !important; }`);\n        collector.addRule(`.monaco-editor .mtkz { color: ${invisibles} !important; }`);\n    }\n});\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../core/range.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketHighlightingUnexpectedBracketForeground } from '../../core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport class ColorizedBracketPairsDecorationProvider extends Disposable {\n    constructor(textModel) {\n        super();\n        this.textModel = textModel;\n        this.colorProvider = new ColorProvider();\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.colorizationOptions = textModel.getOptions().bracketPairColorizationOptions;\n        this._register(textModel.bracketPairs.onDidChange(e => {\n            this.onDidChangeEmitter.fire();\n        }));\n    }\n    //#region TextModel events\n    handleDidChangeOptions(e) {\n        this.colorizationOptions = this.textModel.getOptions().bracketPairColorizationOptions;\n    }\n    //#endregion\n    getDecorationsInRange(range, ownerId, filterOutValidation) {\n        if (ownerId === undefined) {\n            return [];\n        }\n        if (!this.colorizationOptions.enabled) {\n            return [];\n        }\n        const result = new Array();\n        const bracketsInRange = this.textModel.bracketPairs.getBracketsInRange(range);\n        for (const bracket of bracketsInRange) {\n            result.push({\n                id: `bracket${bracket.range.toString()}-${bracket.nestingLevel}`,\n                options: { description: 'BracketPairColorization', inlineClassName: this.colorProvider.getInlineClassName(bracket) },\n                ownerId: 0,\n                range: bracket.range\n            });\n        }\n        return result;\n    }\n    getAllDecorations(ownerId, filterOutValidation) {\n        if (ownerId === undefined) {\n            return [];\n        }\n        if (!this.colorizationOptions.enabled) {\n            return [];\n        }\n        return this.getDecorationsInRange(new Range(1, 1, this.textModel.getLineCount(), 1), ownerId, filterOutValidation);\n    }\n}\nclass ColorProvider {\n    constructor() {\n        this.unexpectedClosingBracketClassName = 'unexpected-closing-bracket';\n    }\n    getInlineClassName(bracket) {\n        if (bracket.isInvalid) {\n            return this.unexpectedClosingBracketClassName;\n        }\n        return this.getInlineClassNameOfLevel(bracket.nestingLevel);\n    }\n    getInlineClassNameOfLevel(level) {\n        // To support a dynamic amount of colors up to 6 colors,\n        // we use a number that is a lcm of all numbers from 1 to 6.\n        return `bracket-highlighting-${level % 30}`;\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const colors = [\n        editorBracketHighlightingForeground1,\n        editorBracketHighlightingForeground2,\n        editorBracketHighlightingForeground3,\n        editorBracketHighlightingForeground4,\n        editorBracketHighlightingForeground5,\n        editorBracketHighlightingForeground6\n    ];\n    const colorProvider = new ColorProvider();\n    collector.addRule(`.monaco-editor .${colorProvider.unexpectedClosingBracketClassName} { color: ${theme.getColor(editorBracketHighlightingUnexpectedBracketForeground)}; }`);\n    const colorValues = colors\n        .map(c => theme.getColor(c))\n        .filter((c) => !!c)\n        .filter(c => !c.isTransparent());\n    for (let level = 0; level < 30; level++) {\n        const color = colorValues[level % colorValues.length];\n        collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level)} { color: ${color}; }`);\n    }\n});\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as buffer from '../../../base/common/buffer.js';\nimport { decodeUTF16LE } from './stringBuilder.js';\nfunction escapeNewLine(str) {\n    return (str\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r'));\n}\nexport class TextChange {\n    constructor(oldPosition, oldText, newPosition, newText) {\n        this.oldPosition = oldPosition;\n        this.oldText = oldText;\n        this.newPosition = newPosition;\n        this.newText = newText;\n    }\n    get oldLength() {\n        return this.oldText.length;\n    }\n    get oldEnd() {\n        return this.oldPosition + this.oldText.length;\n    }\n    get newLength() {\n        return this.newText.length;\n    }\n    get newEnd() {\n        return this.newPosition + this.newText.length;\n    }\n    toString() {\n        if (this.oldText.length === 0) {\n            return `(insert@${this.oldPosition} \"${escapeNewLine(this.newText)}\")`;\n        }\n        if (this.newText.length === 0) {\n            return `(delete@${this.oldPosition} \"${escapeNewLine(this.oldText)}\")`;\n        }\n        return `(replace@${this.oldPosition} \"${escapeNewLine(this.oldText)}\" with \"${escapeNewLine(this.newText)}\")`;\n    }\n    static _writeStringSize(str) {\n        return (4 + 2 * str.length);\n    }\n    static _writeString(b, str, offset) {\n        const len = str.length;\n        buffer.writeUInt32BE(b, len, offset);\n        offset += 4;\n        for (let i = 0; i < len; i++) {\n            buffer.writeUInt16LE(b, str.charCodeAt(i), offset);\n            offset += 2;\n        }\n        return offset;\n    }\n    static _readString(b, offset) {\n        const len = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        return decodeUTF16LE(b, offset, len);\n    }\n    writeSize() {\n        return (+4 // oldPosition\n            + 4 // newPosition\n            + TextChange._writeStringSize(this.oldText)\n            + TextChange._writeStringSize(this.newText));\n    }\n    write(b, offset) {\n        buffer.writeUInt32BE(b, this.oldPosition, offset);\n        offset += 4;\n        buffer.writeUInt32BE(b, this.newPosition, offset);\n        offset += 4;\n        offset = TextChange._writeString(b, this.oldText, offset);\n        offset = TextChange._writeString(b, this.newText, offset);\n        return offset;\n    }\n    static read(b, offset, dest) {\n        const oldPosition = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const newPosition = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const oldText = TextChange._readString(b, offset);\n        offset += TextChange._writeStringSize(oldText);\n        const newText = TextChange._readString(b, offset);\n        offset += TextChange._writeStringSize(newText);\n        dest.push(new TextChange(oldPosition, oldText, newPosition, newText));\n        return offset;\n    }\n}\nexport function compressConsecutiveTextChanges(prevEdits, currEdits) {\n    if (prevEdits === null || prevEdits.length === 0) {\n        return currEdits;\n    }\n    const compressor = new TextChangeCompressor(prevEdits, currEdits);\n    return compressor.compress();\n}\nclass TextChangeCompressor {\n    constructor(prevEdits, currEdits) {\n        this._prevEdits = prevEdits;\n        this._currEdits = currEdits;\n        this._result = [];\n        this._resultLen = 0;\n        this._prevLen = this._prevEdits.length;\n        this._prevDeltaOffset = 0;\n        this._currLen = this._currEdits.length;\n        this._currDeltaOffset = 0;\n    }\n    compress() {\n        let prevIndex = 0;\n        let currIndex = 0;\n        let prevEdit = this._getPrev(prevIndex);\n        let currEdit = this._getCurr(currIndex);\n        while (prevIndex < this._prevLen || currIndex < this._currLen) {\n            if (prevEdit === null) {\n                this._acceptCurr(currEdit);\n                currEdit = this._getCurr(++currIndex);\n                continue;\n            }\n            if (currEdit === null) {\n                this._acceptPrev(prevEdit);\n                prevEdit = this._getPrev(++prevIndex);\n                continue;\n            }\n            if (currEdit.oldEnd <= prevEdit.newPosition) {\n                this._acceptCurr(currEdit);\n                currEdit = this._getCurr(++currIndex);\n                continue;\n            }\n            if (prevEdit.newEnd <= currEdit.oldPosition) {\n                this._acceptPrev(prevEdit);\n                prevEdit = this._getPrev(++prevIndex);\n                continue;\n            }\n            if (currEdit.oldPosition < prevEdit.newPosition) {\n                const [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newPosition - currEdit.oldPosition);\n                this._acceptCurr(e1);\n                currEdit = e2;\n                continue;\n            }\n            if (prevEdit.newPosition < currEdit.oldPosition) {\n                const [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldPosition - prevEdit.newPosition);\n                this._acceptPrev(e1);\n                prevEdit = e2;\n                continue;\n            }\n            // At this point, currEdit.oldPosition === prevEdit.newPosition\n            let mergePrev;\n            let mergeCurr;\n            if (currEdit.oldEnd === prevEdit.newEnd) {\n                mergePrev = prevEdit;\n                mergeCurr = currEdit;\n                prevEdit = this._getPrev(++prevIndex);\n                currEdit = this._getCurr(++currIndex);\n            }\n            else if (currEdit.oldEnd < prevEdit.newEnd) {\n                const [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldLength);\n                mergePrev = e1;\n                mergeCurr = currEdit;\n                prevEdit = e2;\n                currEdit = this._getCurr(++currIndex);\n            }\n            else {\n                const [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newLength);\n                mergePrev = prevEdit;\n                mergeCurr = e1;\n                prevEdit = this._getPrev(++prevIndex);\n                currEdit = e2;\n            }\n            this._result[this._resultLen++] = new TextChange(mergePrev.oldPosition, mergePrev.oldText, mergeCurr.newPosition, mergeCurr.newText);\n            this._prevDeltaOffset += mergePrev.newLength - mergePrev.oldLength;\n            this._currDeltaOffset += mergeCurr.newLength - mergeCurr.oldLength;\n        }\n        const merged = TextChangeCompressor._merge(this._result);\n        const cleaned = TextChangeCompressor._removeNoOps(merged);\n        return cleaned;\n    }\n    _acceptCurr(currEdit) {\n        this._result[this._resultLen++] = TextChangeCompressor._rebaseCurr(this._prevDeltaOffset, currEdit);\n        this._currDeltaOffset += currEdit.newLength - currEdit.oldLength;\n    }\n    _getCurr(currIndex) {\n        return (currIndex < this._currLen ? this._currEdits[currIndex] : null);\n    }\n    _acceptPrev(prevEdit) {\n        this._result[this._resultLen++] = TextChangeCompressor._rebasePrev(this._currDeltaOffset, prevEdit);\n        this._prevDeltaOffset += prevEdit.newLength - prevEdit.oldLength;\n    }\n    _getPrev(prevIndex) {\n        return (prevIndex < this._prevLen ? this._prevEdits[prevIndex] : null);\n    }\n    static _rebaseCurr(prevDeltaOffset, currEdit) {\n        return new TextChange(currEdit.oldPosition - prevDeltaOffset, currEdit.oldText, currEdit.newPosition, currEdit.newText);\n    }\n    static _rebasePrev(currDeltaOffset, prevEdit) {\n        return new TextChange(prevEdit.oldPosition, prevEdit.oldText, prevEdit.newPosition + currDeltaOffset, prevEdit.newText);\n    }\n    static _splitPrev(edit, offset) {\n        const preText = edit.newText.substr(0, offset);\n        const postText = edit.newText.substr(offset);\n        return [\n            new TextChange(edit.oldPosition, edit.oldText, edit.newPosition, preText),\n            new TextChange(edit.oldEnd, '', edit.newPosition + offset, postText)\n        ];\n    }\n    static _splitCurr(edit, offset) {\n        const preText = edit.oldText.substr(0, offset);\n        const postText = edit.oldText.substr(offset);\n        return [\n            new TextChange(edit.oldPosition, preText, edit.newPosition, edit.newText),\n            new TextChange(edit.oldPosition + offset, postText, edit.newEnd, '')\n        ];\n    }\n    static _merge(edits) {\n        if (edits.length === 0) {\n            return edits;\n        }\n        const result = [];\n        let resultLen = 0;\n        let prev = edits[0];\n        for (let i = 1; i < edits.length; i++) {\n            const curr = edits[i];\n            if (prev.oldEnd === curr.oldPosition) {\n                // Merge into `prev`\n                prev = new TextChange(prev.oldPosition, prev.oldText + curr.oldText, prev.newPosition, prev.newText + curr.newText);\n            }\n            else {\n                result[resultLen++] = prev;\n                prev = curr;\n            }\n        }\n        result[resultLen++] = prev;\n        return result;\n    }\n    static _removeNoOps(edits) {\n        if (edits.length === 0) {\n            return edits;\n        }\n        const result = [];\n        let resultLen = 0;\n        for (let i = 0; i < edits.length; i++) {\n            const edit = edits[i];\n            if (edit.oldText === edit.newText) {\n                continue;\n            }\n            result[resultLen++] = edit;\n        }\n        return result;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { normalize, posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { startsWithIgnoreCase } from './strings.js';\nexport function isPathSeparator(code) {\n    return code === 47 /* Slash */ || code === 92 /* Backslash */;\n}\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath) {\n    return osPath.replace(/[\\\\/]/g, posix.sep);\n}\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath) {\n    if (osPath.indexOf('/') === -1) {\n        osPath = toSlashes(osPath);\n    }\n    if (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n        osPath = '/' + osPath;\n    }\n    return osPath;\n}\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path, sep = posix.sep) {\n    if (!path) {\n        return '';\n    }\n    const len = path.length;\n    const firstLetter = path.charCodeAt(0);\n    if (isPathSeparator(firstLetter)) {\n        if (isPathSeparator(path.charCodeAt(1))) {\n            // UNC candidate \\\\localhost\\shares\\ddd\n            //               ^^^^^^^^^^^^^^^^^^^\n            if (!isPathSeparator(path.charCodeAt(2))) {\n                let pos = 3;\n                const start = pos;\n                for (; pos < len; pos++) {\n                    if (isPathSeparator(path.charCodeAt(pos))) {\n                        break;\n                    }\n                }\n                if (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n                    pos += 1;\n                    for (; pos < len; pos++) {\n                        if (isPathSeparator(path.charCodeAt(pos))) {\n                            return path.slice(0, pos + 1) // consume this separator\n                                .replace(/[\\\\/]/g, sep);\n                        }\n                    }\n                }\n            }\n        }\n        // /user/far\n        // ^\n        return sep;\n    }\n    else if (isWindowsDriveLetter(firstLetter)) {\n        // check for windows drive letter c:\\ or c:\n        if (path.charCodeAt(1) === 58 /* Colon */) {\n            if (isPathSeparator(path.charCodeAt(2))) {\n                // C:\\fff\n                // ^^^\n                return path.slice(0, 2) + sep;\n            }\n            else {\n                // C:\n                // ^^\n                return path.slice(0, 2);\n            }\n        }\n    }\n    // check for URI\n    // scheme://authority/path\n    // ^^^^^^^^^^^^^^^^^^^\n    let pos = path.indexOf('://');\n    if (pos !== -1) {\n        pos += 3; // 3 -> \"://\".length\n        for (; pos < len; pos++) {\n            if (isPathSeparator(path.charCodeAt(pos))) {\n                return path.slice(0, pos + 1); // consume this separator\n            }\n        }\n    }\n    return '';\n}\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base, parentCandidate, ignoreCase, separator = sep) {\n    if (base === parentCandidate) {\n        return true;\n    }\n    if (!base || !parentCandidate) {\n        return false;\n    }\n    if (parentCandidate.length > base.length) {\n        return false;\n    }\n    if (ignoreCase) {\n        const beginsWith = startsWithIgnoreCase(base, parentCandidate);\n        if (!beginsWith) {\n            return false;\n        }\n        if (parentCandidate.length === base.length) {\n            return true; // same path, different casing\n        }\n        let sepOffset = parentCandidate.length;\n        if (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n            sepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n        }\n        return base.charAt(sepOffset) === separator;\n    }\n    if (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n        parentCandidate += separator;\n    }\n    return base.indexOf(parentCandidate) === 0;\n}\nexport function isWindowsDriveLetter(char0) {\n    return char0 >= 65 /* A */ && char0 <= 90 /* Z */ || char0 >= 97 /* a */ && char0 <= 122 /* z */;\n}\nexport function isRootOrDriveLetter(path) {\n    const pathNormalized = normalize(path);\n    if (isWindows) {\n        if (path.length > 3) {\n            return false;\n        }\n        return hasDriveLetter(pathNormalized) &&\n            (path.length === 2 || pathNormalized.charCodeAt(2) === 92 /* Backslash */);\n    }\n    return pathNormalized === posix.sep;\n}\nexport function hasDriveLetter(path, continueAsWindows) {\n    const isWindowsPath = ((continueAsWindows !== undefined) ? continueAsWindows : isWindows);\n    if (isWindowsPath) {\n        return isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === 58 /* Colon */;\n    }\n    return false;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\nexport function originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nexport class ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString();\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    // --- path math\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return paths.posix.basename(resource.path);\n    }\n    extname(resource) {\n        return paths.posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = paths.posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* Slash */) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = paths.posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? extpath.toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/', toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            // make casing of fromPath match toPath\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return paths.posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(paths.resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = extpath.toPosixPath(path); // we allow path to be a windows path\n        return base.with({\n            path: paths.posix.resolve(base.path, path)\n        });\n    }\n    // --- misc\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep = paths.sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === 47 /* Slash */) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n        }\n    }\n    removeTrailingPathSeparator(resource, sep = paths.sep) {\n        // Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n        if (hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep = paths.sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n        }\n        else {\n            sep = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 /* Slash */;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n    return uri.scheme === Schemas.file ? !isLinux : true;\n});\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n/**\n * Data URI related helpers.\n */\nexport var DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = new Map();\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the mime is: image/png\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Selection } from '../core/selection.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { TextChange, compressConsecutiveTextChanges } from '../core/textChange.js';\nimport * as buffer from '../../../base/common/buffer.js';\nimport { basename } from '../../../base/common/resources.js';\nfunction uriGetComparisonKey(resource) {\n    return resource.toString();\n}\nexport class SingleModelEditStackData {\n    constructor(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes) {\n        this.beforeVersionId = beforeVersionId;\n        this.afterVersionId = afterVersionId;\n        this.beforeEOL = beforeEOL;\n        this.afterEOL = afterEOL;\n        this.beforeCursorState = beforeCursorState;\n        this.afterCursorState = afterCursorState;\n        this.changes = changes;\n    }\n    static create(model, beforeCursorState) {\n        const alternativeVersionId = model.getAlternativeVersionId();\n        const eol = getModelEOL(model);\n        return new SingleModelEditStackData(alternativeVersionId, alternativeVersionId, eol, eol, beforeCursorState, beforeCursorState, []);\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        if (textChanges.length > 0) {\n            this.changes = compressConsecutiveTextChanges(this.changes, textChanges);\n        }\n        this.afterEOL = afterEOL;\n        this.afterVersionId = afterVersionId;\n        this.afterCursorState = afterCursorState;\n    }\n    static _writeSelectionsSize(selections) {\n        return 4 + 4 * 4 * (selections ? selections.length : 0);\n    }\n    static _writeSelections(b, selections, offset) {\n        buffer.writeUInt32BE(b, (selections ? selections.length : 0), offset);\n        offset += 4;\n        if (selections) {\n            for (const selection of selections) {\n                buffer.writeUInt32BE(b, selection.selectionStartLineNumber, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.selectionStartColumn, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.positionLineNumber, offset);\n                offset += 4;\n                buffer.writeUInt32BE(b, selection.positionColumn, offset);\n                offset += 4;\n            }\n        }\n        return offset;\n    }\n    static _readSelections(b, offset, dest) {\n        const count = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        for (let i = 0; i < count; i++) {\n            const selectionStartLineNumber = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const selectionStartColumn = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const positionLineNumber = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            const positionColumn = buffer.readUInt32BE(b, offset);\n            offset += 4;\n            dest.push(new Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn));\n        }\n        return offset;\n    }\n    serialize() {\n        let necessarySize = (+4 // beforeVersionId\n            + 4 // afterVersionId\n            + 1 // beforeEOL\n            + 1 // afterEOL\n            + SingleModelEditStackData._writeSelectionsSize(this.beforeCursorState)\n            + SingleModelEditStackData._writeSelectionsSize(this.afterCursorState)\n            + 4 // change count\n        );\n        for (const change of this.changes) {\n            necessarySize += change.writeSize();\n        }\n        const b = new Uint8Array(necessarySize);\n        let offset = 0;\n        buffer.writeUInt32BE(b, this.beforeVersionId, offset);\n        offset += 4;\n        buffer.writeUInt32BE(b, this.afterVersionId, offset);\n        offset += 4;\n        buffer.writeUInt8(b, this.beforeEOL, offset);\n        offset += 1;\n        buffer.writeUInt8(b, this.afterEOL, offset);\n        offset += 1;\n        offset = SingleModelEditStackData._writeSelections(b, this.beforeCursorState, offset);\n        offset = SingleModelEditStackData._writeSelections(b, this.afterCursorState, offset);\n        buffer.writeUInt32BE(b, this.changes.length, offset);\n        offset += 4;\n        for (const change of this.changes) {\n            offset = change.write(b, offset);\n        }\n        return b.buffer;\n    }\n    static deserialize(source) {\n        const b = new Uint8Array(source);\n        let offset = 0;\n        const beforeVersionId = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const afterVersionId = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const beforeEOL = buffer.readUInt8(b, offset);\n        offset += 1;\n        const afterEOL = buffer.readUInt8(b, offset);\n        offset += 1;\n        const beforeCursorState = [];\n        offset = SingleModelEditStackData._readSelections(b, offset, beforeCursorState);\n        const afterCursorState = [];\n        offset = SingleModelEditStackData._readSelections(b, offset, afterCursorState);\n        const changeCount = buffer.readUInt32BE(b, offset);\n        offset += 4;\n        const changes = [];\n        for (let i = 0; i < changeCount; i++) {\n            offset = TextChange.read(b, offset, changes);\n        }\n        return new SingleModelEditStackData(beforeVersionId, afterVersionId, beforeEOL, afterEOL, beforeCursorState, afterCursorState, changes);\n    }\n}\nexport class SingleModelEditStackElement {\n    constructor(model, beforeCursorState) {\n        this.model = model;\n        this._data = SingleModelEditStackData.create(model, beforeCursorState);\n    }\n    get type() {\n        return 0 /* Resource */;\n    }\n    get resource() {\n        if (URI.isUri(this.model)) {\n            return this.model;\n        }\n        return this.model.uri;\n    }\n    get label() {\n        return nls.localize('edit', \"Typing\");\n    }\n    toString() {\n        const data = (this._data instanceof SingleModelEditStackData ? this._data : SingleModelEditStackData.deserialize(this._data));\n        return data.changes.map(change => change.toString()).join(', ');\n    }\n    matchesResource(resource) {\n        const uri = (URI.isUri(this.model) ? this.model : this.model.uri);\n        return (uri.toString() === resource.toString());\n    }\n    setModel(model) {\n        this.model = model;\n    }\n    canAppend(model) {\n        return (this.model === model && this._data instanceof SingleModelEditStackData);\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n        }\n    }\n    close() {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n    }\n    open() {\n        if (!(this._data instanceof SingleModelEditStackData)) {\n            this._data = SingleModelEditStackData.deserialize(this._data);\n        }\n    }\n    undo() {\n        if (URI.isUri(this.model)) {\n            // don't have a model\n            throw new Error(`Invalid SingleModelEditStackElement`);\n        }\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        const data = SingleModelEditStackData.deserialize(this._data);\n        this.model._applyUndo(data.changes, data.beforeEOL, data.beforeVersionId, data.beforeCursorState);\n    }\n    redo() {\n        if (URI.isUri(this.model)) {\n            // don't have a model\n            throw new Error(`Invalid SingleModelEditStackElement`);\n        }\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        const data = SingleModelEditStackData.deserialize(this._data);\n        this.model._applyRedo(data.changes, data.afterEOL, data.afterVersionId, data.afterCursorState);\n    }\n    heapSize() {\n        if (this._data instanceof SingleModelEditStackData) {\n            this._data = this._data.serialize();\n        }\n        return this._data.byteLength + 168 /*heap overhead*/;\n    }\n}\nexport class MultiModelEditStackElement {\n    constructor(label, editStackElements) {\n        this.type = 1 /* Workspace */;\n        this.label = label;\n        this._isOpen = true;\n        this._editStackElementsArr = editStackElements.slice(0);\n        this._editStackElementsMap = new Map();\n        for (const editStackElement of this._editStackElementsArr) {\n            const key = uriGetComparisonKey(editStackElement.resource);\n            this._editStackElementsMap.set(key, editStackElement);\n        }\n        this._delegate = null;\n    }\n    get resources() {\n        return this._editStackElementsArr.map(editStackElement => editStackElement.resource);\n    }\n    prepareUndoRedo() {\n        if (this._delegate) {\n            return this._delegate.prepareUndoRedo(this);\n        }\n    }\n    matchesResource(resource) {\n        const key = uriGetComparisonKey(resource);\n        return (this._editStackElementsMap.has(key));\n    }\n    setModel(model) {\n        const key = uriGetComparisonKey(URI.isUri(model) ? model : model.uri);\n        if (this._editStackElementsMap.has(key)) {\n            this._editStackElementsMap.get(key).setModel(model);\n        }\n    }\n    canAppend(model) {\n        if (!this._isOpen) {\n            return false;\n        }\n        const key = uriGetComparisonKey(model.uri);\n        if (this._editStackElementsMap.has(key)) {\n            const editStackElement = this._editStackElementsMap.get(key);\n            return editStackElement.canAppend(model);\n        }\n        return false;\n    }\n    append(model, textChanges, afterEOL, afterVersionId, afterCursorState) {\n        const key = uriGetComparisonKey(model.uri);\n        const editStackElement = this._editStackElementsMap.get(key);\n        editStackElement.append(model, textChanges, afterEOL, afterVersionId, afterCursorState);\n    }\n    close() {\n        this._isOpen = false;\n    }\n    open() {\n        // cannot reopen\n    }\n    undo() {\n        this._isOpen = false;\n        for (const editStackElement of this._editStackElementsArr) {\n            editStackElement.undo();\n        }\n    }\n    redo() {\n        for (const editStackElement of this._editStackElementsArr) {\n            editStackElement.redo();\n        }\n    }\n    heapSize(resource) {\n        const key = uriGetComparisonKey(resource);\n        if (this._editStackElementsMap.has(key)) {\n            const editStackElement = this._editStackElementsMap.get(key);\n            return editStackElement.heapSize();\n        }\n        return 0;\n    }\n    split() {\n        return this._editStackElementsArr;\n    }\n    toString() {\n        let result = [];\n        for (const editStackElement of this._editStackElementsArr) {\n            result.push(`${basename(editStackElement.resource)}: ${editStackElement}`);\n        }\n        return `{${result.join(', ')}}`;\n    }\n}\nfunction getModelEOL(model) {\n    const eol = model.getEOL();\n    if (eol === '\\n') {\n        return 0 /* LF */;\n    }\n    else {\n        return 1 /* CRLF */;\n    }\n}\nexport function isEditStackElement(element) {\n    if (!element) {\n        return false;\n    }\n    return ((element instanceof SingleModelEditStackElement) || (element instanceof MultiModelEditStackElement));\n}\nexport class EditStack {\n    constructor(model, undoRedoService) {\n        this._model = model;\n        this._undoRedoService = undoRedoService;\n    }\n    pushStackElement() {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement)) {\n            lastElement.close();\n        }\n    }\n    popStackElement() {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement)) {\n            lastElement.open();\n        }\n    }\n    clear() {\n        this._undoRedoService.removeElements(this._model.uri);\n    }\n    _getOrCreateEditStackElement(beforeCursorState) {\n        const lastElement = this._undoRedoService.getLastElement(this._model.uri);\n        if (isEditStackElement(lastElement) && lastElement.canAppend(this._model)) {\n            return lastElement;\n        }\n        const newElement = new SingleModelEditStackElement(this._model, beforeCursorState);\n        this._undoRedoService.pushElement(newElement);\n        return newElement;\n    }\n    pushEOL(eol) {\n        const editStackElement = this._getOrCreateEditStackElement(null);\n        this._model.setEOL(eol);\n        editStackElement.append(this._model, [], getModelEOL(this._model), this._model.getAlternativeVersionId(), null);\n    }\n    pushEditOperation(beforeCursorState, editOperations, cursorStateComputer) {\n        const editStackElement = this._getOrCreateEditStackElement(beforeCursorState);\n        const inverseEditOperations = this._model.applyEdits(editOperations, true);\n        const afterCursorState = EditStack._computeCursorState(cursorStateComputer, inverseEditOperations);\n        const textChanges = inverseEditOperations.map((op, index) => ({ index: index, textChange: op.textChange }));\n        textChanges.sort((a, b) => {\n            if (a.textChange.oldPosition === b.textChange.oldPosition) {\n                return a.index - b.index;\n            }\n            return a.textChange.oldPosition - b.textChange.oldPosition;\n        });\n        editStackElement.append(this._model, textChanges.map(op => op.textChange), getModelEOL(this._model), this._model.getAlternativeVersionId(), afterCursorState);\n        return afterCursorState;\n    }\n    static _computeCursorState(cursorStateComputer, inverseEditOperations) {\n        try {\n            return cursorStateComputer ? cursorStateComputer(inverseEditOperations) : null;\n        }\n        catch (e) {\n            onUnexpectedError(e);\n            return null;\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class TextModelPart {\n    constructor() {\n        this._isDisposed = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n    }\n    assertNotDisposed() {\n        if (this._isDisposed) {\n            throw new Error('TextModelPart is disposed!');\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Returns:\n *  - -1 => the line consists of whitespace\n *  - otherwise => the indent level is returned value\n */\nexport function computeIndentLevel(line, tabSize) {\n    let indent = 0;\n    let i = 0;\n    const len = line.length;\n    while (i < len) {\n        const chCode = line.charCodeAt(i);\n        if (chCode === 32 /* Space */) {\n            indent++;\n        }\n        else if (chCode === 9 /* Tab */) {\n            indent = indent - indent % tabSize + tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    if (i === len) {\n        return -1; // line only consists of whitespace\n    }\n    return indent;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var HorizontalGuidesState;\n(function (HorizontalGuidesState) {\n    HorizontalGuidesState[HorizontalGuidesState[\"Disabled\"] = 0] = \"Disabled\";\n    HorizontalGuidesState[HorizontalGuidesState[\"EnabledForActive\"] = 1] = \"EnabledForActive\";\n    HorizontalGuidesState[HorizontalGuidesState[\"Enabled\"] = 2] = \"Enabled\";\n})(HorizontalGuidesState || (HorizontalGuidesState = {}));\nexport class IndentGuide {\n    constructor(visibleColumn, className, \n    /**\n     * If set, this indent guide is a horizontal guide (no vertical part).\n     * It starts at visibleColumn and continues until endColumn.\n    */\n    horizontalLine) {\n        this.visibleColumn = visibleColumn;\n        this.className = className;\n        this.horizontalLine = horizontalLine;\n    }\n}\nexport class IndentGuideHorizontalLine {\n    constructor(top, endColumn) {\n        this.top = top;\n        this.endColumn = endColumn;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayQueue, findLast } from '../../../base/common/arrays.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { CursorColumns } from '../core/cursorColumns.js';\nimport { Range } from '../core/range.js';\nimport { TextModelPart } from './textModelPart.js';\nimport { computeIndentLevel } from './utils.js';\nimport { HorizontalGuidesState, IndentGuide, IndentGuideHorizontalLine } from '../textModelGuides.js';\nexport class GuidesTextModelPart extends TextModelPart {\n    constructor(textModel, languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.languageConfigurationService = languageConfigurationService;\n    }\n    getLanguageConfiguration(languageId) {\n        return this.languageConfigurationService.getLanguageConfiguration(languageId);\n    }\n    _computeIndentLevel(lineIndex) {\n        return computeIndentLevel(this.textModel.getLineContent(lineIndex + 1), this.textModel.getOptions().tabSize);\n    }\n    getActiveIndentGuide(lineNumber, minLineNumber, maxLineNumber) {\n        this.assertNotDisposed();\n        const lineCount = this.textModel.getLineCount();\n        if (lineNumber < 1 || lineNumber > lineCount) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        const foldingRules = this.getLanguageConfiguration(this.textModel.getLanguageId()).foldingRules;\n        const offSide = Boolean(foldingRules && foldingRules.offSide);\n        let up_aboveContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let up_aboveContentLineIndent = -1;\n        let up_belowContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let up_belowContentLineIndent = -1;\n        const up_resolveIndents = (lineNumber) => {\n            if (up_aboveContentLineIndex !== -1 &&\n                (up_aboveContentLineIndex === -2 ||\n                    up_aboveContentLineIndex > lineNumber - 1)) {\n                up_aboveContentLineIndex = -1;\n                up_aboveContentLineIndent = -1;\n                // must find previous line with content\n                for (let lineIndex = lineNumber - 2; lineIndex >= 0; lineIndex--) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        up_aboveContentLineIndex = lineIndex;\n                        up_aboveContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n            if (up_belowContentLineIndex === -2) {\n                up_belowContentLineIndex = -1;\n                up_belowContentLineIndent = -1;\n                // must find next line with content\n                for (let lineIndex = lineNumber; lineIndex < lineCount; lineIndex++) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        up_belowContentLineIndex = lineIndex;\n                        up_belowContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n        };\n        let down_aboveContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let down_aboveContentLineIndent = -1;\n        let down_belowContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let down_belowContentLineIndent = -1;\n        const down_resolveIndents = (lineNumber) => {\n            if (down_aboveContentLineIndex === -2) {\n                down_aboveContentLineIndex = -1;\n                down_aboveContentLineIndent = -1;\n                // must find previous line with content\n                for (let lineIndex = lineNumber - 2; lineIndex >= 0; lineIndex--) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        down_aboveContentLineIndex = lineIndex;\n                        down_aboveContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n            if (down_belowContentLineIndex !== -1 &&\n                (down_belowContentLineIndex === -2 ||\n                    down_belowContentLineIndex < lineNumber - 1)) {\n                down_belowContentLineIndex = -1;\n                down_belowContentLineIndent = -1;\n                // must find next line with content\n                for (let lineIndex = lineNumber; lineIndex < lineCount; lineIndex++) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        down_belowContentLineIndex = lineIndex;\n                        down_belowContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n        };\n        let startLineNumber = 0;\n        let goUp = true;\n        let endLineNumber = 0;\n        let goDown = true;\n        let indent = 0;\n        let initialIndent = 0;\n        for (let distance = 0; goUp || goDown; distance++) {\n            const upLineNumber = lineNumber - distance;\n            const downLineNumber = lineNumber + distance;\n            if (distance > 1 && (upLineNumber < 1 || upLineNumber < minLineNumber)) {\n                goUp = false;\n            }\n            if (distance > 1 &&\n                (downLineNumber > lineCount || downLineNumber > maxLineNumber)) {\n                goDown = false;\n            }\n            if (distance > 50000) {\n                // stop processing\n                goUp = false;\n                goDown = false;\n            }\n            let upLineIndentLevel = -1;\n            if (goUp && upLineNumber >= 1) {\n                // compute indent level going up\n                const currentIndent = this._computeIndentLevel(upLineNumber - 1);\n                if (currentIndent >= 0) {\n                    // This line has content (besides whitespace)\n                    // Use the line's indent\n                    up_belowContentLineIndex = upLineNumber - 1;\n                    up_belowContentLineIndent = currentIndent;\n                    upLineIndentLevel = Math.ceil(currentIndent / this.textModel.getOptions().indentSize);\n                }\n                else {\n                    up_resolveIndents(upLineNumber);\n                    upLineIndentLevel = this._getIndentLevelForWhitespaceLine(offSide, up_aboveContentLineIndent, up_belowContentLineIndent);\n                }\n            }\n            let downLineIndentLevel = -1;\n            if (goDown && downLineNumber <= lineCount) {\n                // compute indent level going down\n                const currentIndent = this._computeIndentLevel(downLineNumber - 1);\n                if (currentIndent >= 0) {\n                    // This line has content (besides whitespace)\n                    // Use the line's indent\n                    down_aboveContentLineIndex = downLineNumber - 1;\n                    down_aboveContentLineIndent = currentIndent;\n                    downLineIndentLevel = Math.ceil(currentIndent / this.textModel.getOptions().indentSize);\n                }\n                else {\n                    down_resolveIndents(downLineNumber);\n                    downLineIndentLevel = this._getIndentLevelForWhitespaceLine(offSide, down_aboveContentLineIndent, down_belowContentLineIndent);\n                }\n            }\n            if (distance === 0) {\n                initialIndent = upLineIndentLevel;\n                continue;\n            }\n            if (distance === 1) {\n                if (downLineNumber <= lineCount &&\n                    downLineIndentLevel >= 0 &&\n                    initialIndent + 1 === downLineIndentLevel) {\n                    // This is the beginning of a scope, we have special handling here, since we want the\n                    // child scope indent to be active, not the parent scope\n                    goUp = false;\n                    startLineNumber = downLineNumber;\n                    endLineNumber = downLineNumber;\n                    indent = downLineIndentLevel;\n                    continue;\n                }\n                if (upLineNumber >= 1 &&\n                    upLineIndentLevel >= 0 &&\n                    upLineIndentLevel - 1 === initialIndent) {\n                    // This is the end of a scope, just like above\n                    goDown = false;\n                    startLineNumber = upLineNumber;\n                    endLineNumber = upLineNumber;\n                    indent = upLineIndentLevel;\n                    continue;\n                }\n                startLineNumber = lineNumber;\n                endLineNumber = lineNumber;\n                indent = initialIndent;\n                if (indent === 0) {\n                    // No need to continue\n                    return { startLineNumber, endLineNumber, indent };\n                }\n            }\n            if (goUp) {\n                if (upLineIndentLevel >= indent) {\n                    startLineNumber = upLineNumber;\n                }\n                else {\n                    goUp = false;\n                }\n            }\n            if (goDown) {\n                if (downLineIndentLevel >= indent) {\n                    endLineNumber = downLineNumber;\n                }\n                else {\n                    goDown = false;\n                }\n            }\n        }\n        return { startLineNumber, endLineNumber, indent };\n    }\n    getLinesBracketGuides(startLineNumber, endLineNumber, activePosition, options) {\n        var _a, _b, _c, _d, _e;\n        const result = [];\n        const bracketPairs = this.textModel.bracketPairs.getBracketPairsInRangeWithMinIndentation(new Range(startLineNumber, 1, endLineNumber, this.textModel.getLineMaxColumn(endLineNumber)));\n        let activeBracketPairRange = undefined;\n        if (activePosition && bracketPairs.length > 0) {\n            const bracketsContainingActivePosition = startLineNumber <= activePosition.lineNumber &&\n                activePosition.lineNumber <= endLineNumber\n                ? // Does active position intersect with the view port? -> Intersect bracket pairs with activePosition\n                    bracketPairs.filter((bp) => Range.strictContainsPosition(bp.range, activePosition))\n                : this.textModel.bracketPairs.getBracketPairsInRange(Range.fromPositions(activePosition));\n            activeBracketPairRange = (_a = findLast(bracketsContainingActivePosition, \n            /* Exclude single line bracket pairs for cases such as\n             * ```\n             * function test() {\n             * \t\tif (true) { | }\n             * }\n             * ```\n             */\n            (i) => i.range.startLineNumber !== i.range.endLineNumber)) === null || _a === void 0 ? void 0 : _a.range;\n        }\n        const queue = new ArrayQueue(bracketPairs);\n        /** Indexed by nesting level */\n        const activeGuides = new Array();\n        const nextGuides = new Array();\n        const colorProvider = new BracketPairGuidesClassNames();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            let guides = new Array();\n            if (nextGuides.length > 0) {\n                guides = guides.concat(nextGuides);\n                nextGuides.length = 0;\n            }\n            result.push(guides);\n            // Update activeGuides\n            for (const pair of queue.takeWhile((b) => b.openingBracketRange.startLineNumber <= lineNumber) || []) {\n                if (pair.range.startLineNumber === pair.range.endLineNumber) {\n                    // ignore single line brackets\n                    continue;\n                }\n                const guideVisibleColumn = Math.min(this.getVisibleColumnFromPosition(pair.openingBracketRange.getStartPosition()), this.getVisibleColumnFromPosition((_c = (_b = pair.closingBracketRange) === null || _b === void 0 ? void 0 : _b.getStartPosition()) !== null && _c !== void 0 ? _c : pair.range.getEndPosition()), pair.minVisibleColumnIndentation + 1);\n                let renderHorizontalEndLineAtTheBottom = false;\n                if (pair.closingBracketRange) {\n                    const firstNonWsIndex = strings.firstNonWhitespaceIndex(this.textModel.getLineContent(pair.closingBracketRange.startLineNumber));\n                    if (firstNonWsIndex < pair.closingBracketRange.startColumn - 1) {\n                        renderHorizontalEndLineAtTheBottom = true;\n                    }\n                }\n                const start = pair.openingBracketRange.getStartPosition();\n                const end = (_e = (_d = pair.closingBracketRange) === null || _d === void 0 ? void 0 : _d.getStartPosition()) !== null && _e !== void 0 ? _e : pair.range.getEndPosition();\n                if (pair.closingBracketRange === undefined) {\n                    // Don't show guides for bracket pairs that are not balanced.\n                    // See #135125.\n                    activeGuides[pair.nestingLevel] = null;\n                }\n                else {\n                    activeGuides[pair.nestingLevel] = {\n                        nestingLevel: pair.nestingLevel,\n                        guideVisibleColumn,\n                        start,\n                        visibleStartColumn: this.getVisibleColumnFromPosition(start),\n                        end,\n                        visibleEndColumn: this.getVisibleColumnFromPosition(end),\n                        bracketPair: pair,\n                        renderHorizontalEndLineAtTheBottom,\n                    };\n                }\n            }\n            for (const line of activeGuides) {\n                if (!line) {\n                    continue;\n                }\n                const isActive = activeBracketPairRange &&\n                    line.bracketPair.range.equalsRange(activeBracketPairRange);\n                const className = colorProvider.getInlineClassNameOfLevel(line.nestingLevel) +\n                    (options.highlightActive && isActive\n                        ? ' ' + colorProvider.activeClassName\n                        : '');\n                if ((isActive &&\n                    options.horizontalGuides !==\n                        HorizontalGuidesState.Disabled) ||\n                    (options.includeInactive &&\n                        options.horizontalGuides === HorizontalGuidesState.Enabled)) {\n                    if (line.start.lineNumber === lineNumber) {\n                        if (line.guideVisibleColumn < line.visibleStartColumn) {\n                            guides.push(new IndentGuide(line.guideVisibleColumn, className, new IndentGuideHorizontalLine(false, line.start.column)));\n                        }\n                    }\n                    if (line.end.lineNumber === lineNumber + 1) {\n                        // The next line might have horizontal guides.\n                        // However, the next line might also have a new bracket pair with the same indentation,\n                        // so the current bracket pair might get replaced. That's why we push the guide to nextGuides one line ahead.\n                        if (line.guideVisibleColumn < line.visibleEndColumn) {\n                            nextGuides.push(new IndentGuide(line.guideVisibleColumn, className, new IndentGuideHorizontalLine(!line.renderHorizontalEndLineAtTheBottom, line.end.column)));\n                        }\n                    }\n                }\n            }\n            let lastVisibleColumnCount = Number.MAX_SAFE_INTEGER;\n            // Going backwards, so the last guide potentially replaces others\n            for (let i = activeGuides.length - 1; i >= 0; i--) {\n                const line = activeGuides[i];\n                if (!line) {\n                    continue;\n                }\n                const isActive = options.highlightActive &&\n                    activeBracketPairRange &&\n                    line.bracketPair.range.equalsRange(activeBracketPairRange);\n                const className = colorProvider.getInlineClassNameOfLevel(line.nestingLevel) +\n                    (isActive ? ' ' + colorProvider.activeClassName : '');\n                if (isActive || options.includeInactive) {\n                    if (line.renderHorizontalEndLineAtTheBottom &&\n                        line.end.lineNumber === lineNumber + 1) {\n                        nextGuides.push(new IndentGuide(line.guideVisibleColumn, className, null));\n                    }\n                }\n                if (line.end.lineNumber <= lineNumber ||\n                    line.start.lineNumber >= lineNumber) {\n                    continue;\n                }\n                if (line.guideVisibleColumn >= lastVisibleColumnCount && !isActive) {\n                    // Don't render a guide on top of an existing guide, unless it is active.\n                    continue;\n                }\n                lastVisibleColumnCount = line.guideVisibleColumn;\n                if (isActive || options.includeInactive) {\n                    guides.push(new IndentGuide(line.guideVisibleColumn, className, null));\n                }\n            }\n            guides.sort((a, b) => a.visibleColumn - b.visibleColumn);\n        }\n        return result;\n    }\n    getVisibleColumnFromPosition(position) {\n        return (CursorColumns.visibleColumnFromColumn(this.textModel.getLineContent(position.lineNumber), position.column, this.textModel.getOptions().tabSize) + 1);\n    }\n    getLinesIndentGuides(startLineNumber, endLineNumber) {\n        this.assertNotDisposed();\n        const lineCount = this.textModel.getLineCount();\n        if (startLineNumber < 1 || startLineNumber > lineCount) {\n            throw new Error('Illegal value for startLineNumber');\n        }\n        if (endLineNumber < 1 || endLineNumber > lineCount) {\n            throw new Error('Illegal value for endLineNumber');\n        }\n        const options = this.textModel.getOptions();\n        const foldingRules = this.getLanguageConfiguration(this.textModel.getLanguageId()).foldingRules;\n        const offSide = Boolean(foldingRules && foldingRules.offSide);\n        const result = new Array(endLineNumber - startLineNumber + 1);\n        let aboveContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let aboveContentLineIndent = -1;\n        let belowContentLineIndex = -2; /* -2 is a marker for not having computed it */\n        let belowContentLineIndent = -1;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const resultIndex = lineNumber - startLineNumber;\n            const currentIndent = this._computeIndentLevel(lineNumber - 1);\n            if (currentIndent >= 0) {\n                // This line has content (besides whitespace)\n                // Use the line's indent\n                aboveContentLineIndex = lineNumber - 1;\n                aboveContentLineIndent = currentIndent;\n                result[resultIndex] = Math.ceil(currentIndent / options.indentSize);\n                continue;\n            }\n            if (aboveContentLineIndex === -2) {\n                aboveContentLineIndex = -1;\n                aboveContentLineIndent = -1;\n                // must find previous line with content\n                for (let lineIndex = lineNumber - 2; lineIndex >= 0; lineIndex--) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        aboveContentLineIndex = lineIndex;\n                        aboveContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n            if (belowContentLineIndex !== -1 &&\n                (belowContentLineIndex === -2 || belowContentLineIndex < lineNumber - 1)) {\n                belowContentLineIndex = -1;\n                belowContentLineIndent = -1;\n                // must find next line with content\n                for (let lineIndex = lineNumber; lineIndex < lineCount; lineIndex++) {\n                    const indent = this._computeIndentLevel(lineIndex);\n                    if (indent >= 0) {\n                        belowContentLineIndex = lineIndex;\n                        belowContentLineIndent = indent;\n                        break;\n                    }\n                }\n            }\n            result[resultIndex] = this._getIndentLevelForWhitespaceLine(offSide, aboveContentLineIndent, belowContentLineIndent);\n        }\n        return result;\n    }\n    _getIndentLevelForWhitespaceLine(offSide, aboveContentLineIndent, belowContentLineIndent) {\n        const options = this.textModel.getOptions();\n        if (aboveContentLineIndent === -1 || belowContentLineIndent === -1) {\n            // At the top or bottom of the file\n            return 0;\n        }\n        else if (aboveContentLineIndent < belowContentLineIndent) {\n            // we are inside the region above\n            return 1 + Math.floor(aboveContentLineIndent / options.indentSize);\n        }\n        else if (aboveContentLineIndent === belowContentLineIndent) {\n            // we are in between two regions\n            return Math.ceil(belowContentLineIndent / options.indentSize);\n        }\n        else {\n            if (offSide) {\n                // same level as region below\n                return Math.ceil(belowContentLineIndent / options.indentSize);\n            }\n            else {\n                // we are inside the region that ends below\n                return 1 + Math.floor(belowContentLineIndent / options.indentSize);\n            }\n        }\n    }\n}\nexport class BracketPairGuidesClassNames {\n    constructor() {\n        this.activeClassName = 'indent-active';\n    }\n    getInlineClassNameOfLevel(level) {\n        // To support a dynamic amount of colors up to 6 colors,\n        // we use a number that is a lcm of all numbers from 1 to 6.\n        return `bracket-indent-guide lvl-${level % 30}`;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass SpacesDiffResult {\n    constructor() {\n        this.spacesDiff = 0;\n        this.looksLikeAlignment = false;\n    }\n}\n/**\n * Compute the diff in spaces between two line's indentation.\n */\nfunction spacesDiff(a, aLength, b, bLength, result) {\n    result.spacesDiff = 0;\n    result.looksLikeAlignment = false;\n    // This can go both ways (e.g.):\n    //  - a: \"\\t\"\n    //  - b: \"\\t    \"\n    //  => This should count 1 tab and 4 spaces\n    let i;\n    for (i = 0; i < aLength && i < bLength; i++) {\n        const aCharCode = a.charCodeAt(i);\n        const bCharCode = b.charCodeAt(i);\n        if (aCharCode !== bCharCode) {\n            break;\n        }\n    }\n    let aSpacesCnt = 0, aTabsCount = 0;\n    for (let j = i; j < aLength; j++) {\n        const aCharCode = a.charCodeAt(j);\n        if (aCharCode === 32 /* Space */) {\n            aSpacesCnt++;\n        }\n        else {\n            aTabsCount++;\n        }\n    }\n    let bSpacesCnt = 0, bTabsCount = 0;\n    for (let j = i; j < bLength; j++) {\n        const bCharCode = b.charCodeAt(j);\n        if (bCharCode === 32 /* Space */) {\n            bSpacesCnt++;\n        }\n        else {\n            bTabsCount++;\n        }\n    }\n    if (aSpacesCnt > 0 && aTabsCount > 0) {\n        return;\n    }\n    if (bSpacesCnt > 0 && bTabsCount > 0) {\n        return;\n    }\n    const tabsDiff = Math.abs(aTabsCount - bTabsCount);\n    const spacesDiff = Math.abs(aSpacesCnt - bSpacesCnt);\n    if (tabsDiff === 0) {\n        // check if the indentation difference might be caused by alignment reasons\n        // sometime folks like to align their code, but this should not be used as a hint\n        result.spacesDiff = spacesDiff;\n        if (spacesDiff > 0 && 0 <= bSpacesCnt - 1 && bSpacesCnt - 1 < a.length && bSpacesCnt < b.length) {\n            if (b.charCodeAt(bSpacesCnt) !== 32 /* Space */ && a.charCodeAt(bSpacesCnt - 1) === 32 /* Space */) {\n                if (a.charCodeAt(a.length - 1) === 44 /* Comma */) {\n                    // This looks like an alignment desire: e.g.\n                    // const a = b + c,\n                    //       d = b - c;\n                    result.looksLikeAlignment = true;\n                }\n            }\n        }\n        return;\n    }\n    if (spacesDiff % tabsDiff === 0) {\n        result.spacesDiff = spacesDiff / tabsDiff;\n        return;\n    }\n}\nexport function guessIndentation(source, defaultTabSize, defaultInsertSpaces) {\n    // Look at most at the first 10k lines\n    const linesCount = Math.min(source.getLineCount(), 10000);\n    let linesIndentedWithTabsCount = 0; // number of lines that contain at least one tab in indentation\n    let linesIndentedWithSpacesCount = 0; // number of lines that contain only spaces in indentation\n    let previousLineText = ''; // content of latest line that contained non-whitespace chars\n    let previousLineIndentation = 0; // index at which latest line contained the first non-whitespace char\n    const ALLOWED_TAB_SIZE_GUESSES = [2, 4, 6, 8, 3, 5, 7]; // prefer even guesses for `tabSize`, limit to [2, 8].\n    const MAX_ALLOWED_TAB_SIZE_GUESS = 8; // max(ALLOWED_TAB_SIZE_GUESSES) = 8\n    const spacesDiffCount = [0, 0, 0, 0, 0, 0, 0, 0, 0]; // `tabSize` scores\n    const tmp = new SpacesDiffResult();\n    for (let lineNumber = 1; lineNumber <= linesCount; lineNumber++) {\n        const currentLineLength = source.getLineLength(lineNumber);\n        const currentLineText = source.getLineContent(lineNumber);\n        // if the text buffer is chunk based, so long lines are cons-string, v8 will flattern the string when we check charCode.\n        // checking charCode on chunks directly is cheaper.\n        const useCurrentLineText = (currentLineLength <= 65536);\n        let currentLineHasContent = false; // does `currentLineText` contain non-whitespace chars\n        let currentLineIndentation = 0; // index at which `currentLineText` contains the first non-whitespace char\n        let currentLineSpacesCount = 0; // count of spaces found in `currentLineText` indentation\n        let currentLineTabsCount = 0; // count of tabs found in `currentLineText` indentation\n        for (let j = 0, lenJ = currentLineLength; j < lenJ; j++) {\n            const charCode = (useCurrentLineText ? currentLineText.charCodeAt(j) : source.getLineCharCode(lineNumber, j));\n            if (charCode === 9 /* Tab */) {\n                currentLineTabsCount++;\n            }\n            else if (charCode === 32 /* Space */) {\n                currentLineSpacesCount++;\n            }\n            else {\n                // Hit non whitespace character on this line\n                currentLineHasContent = true;\n                currentLineIndentation = j;\n                break;\n            }\n        }\n        // Ignore empty or only whitespace lines\n        if (!currentLineHasContent) {\n            continue;\n        }\n        if (currentLineTabsCount > 0) {\n            linesIndentedWithTabsCount++;\n        }\n        else if (currentLineSpacesCount > 1) {\n            linesIndentedWithSpacesCount++;\n        }\n        spacesDiff(previousLineText, previousLineIndentation, currentLineText, currentLineIndentation, tmp);\n        if (tmp.looksLikeAlignment) {\n            // if defaultInsertSpaces === true && the spaces count == tabSize, we may want to count it as valid indentation\n            //\n            // - item1\n            //   - item2\n            //\n            // otherwise skip this line entirely\n            //\n            // const a = 1,\n            //       b = 2;\n            if (!(defaultInsertSpaces && defaultTabSize === tmp.spacesDiff)) {\n                continue;\n            }\n        }\n        const currentSpacesDiff = tmp.spacesDiff;\n        if (currentSpacesDiff <= MAX_ALLOWED_TAB_SIZE_GUESS) {\n            spacesDiffCount[currentSpacesDiff]++;\n        }\n        previousLineText = currentLineText;\n        previousLineIndentation = currentLineIndentation;\n    }\n    let insertSpaces = defaultInsertSpaces;\n    if (linesIndentedWithTabsCount !== linesIndentedWithSpacesCount) {\n        insertSpaces = (linesIndentedWithTabsCount < linesIndentedWithSpacesCount);\n    }\n    let tabSize = defaultTabSize;\n    // Guess tabSize only if inserting spaces...\n    if (insertSpaces) {\n        let tabSizeScore = (insertSpaces ? 0 : 0.1 * linesCount);\n        // console.log(\"score threshold: \" + tabSizeScore);\n        ALLOWED_TAB_SIZE_GUESSES.forEach((possibleTabSize) => {\n            const possibleTabSizeScore = spacesDiffCount[possibleTabSize];\n            if (possibleTabSizeScore > tabSizeScore) {\n                tabSizeScore = possibleTabSizeScore;\n                tabSize = possibleTabSize;\n            }\n        });\n        // Let a tabSize of 2 win even if it is not the maximum\n        // (only in case 4 was guessed)\n        if (tabSize === 4 && spacesDiffCount[4] > 0 && spacesDiffCount[2] > 0 && spacesDiffCount[2] >= spacesDiffCount[4] / 2) {\n            tabSize = 2;\n        }\n    }\n    // console.log('--------------------------');\n    // console.log('linesIndentedWithTabsCount: ' + linesIndentedWithTabsCount + ', linesIndentedWithSpacesCount: ' + linesIndentedWithSpacesCount);\n    // console.log('spacesDiffCount: ' + spacesDiffCount);\n    // console.log('tabSize: ' + tabSize + ', tabSizeScore: ' + tabSizeScore);\n    return {\n        insertSpaces: insertSpaces,\n        tabSize: tabSize\n    };\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getNodeColor(node) {\n    return ((node.metadata & 1 /* ColorMask */) >>> 0 /* ColorOffset */);\n}\nfunction setNodeColor(node, color) {\n    node.metadata = ((node.metadata & 254 /* ColorMaskInverse */) | (color << 0 /* ColorOffset */));\n}\nfunction getNodeIsVisited(node) {\n    return ((node.metadata & 2 /* IsVisitedMask */) >>> 1 /* IsVisitedOffset */) === 1;\n}\nfunction setNodeIsVisited(node, value) {\n    node.metadata = ((node.metadata & 253 /* IsVisitedMaskInverse */) | ((value ? 1 : 0) << 1 /* IsVisitedOffset */));\n}\nfunction getNodeIsForValidation(node) {\n    return ((node.metadata & 4 /* IsForValidationMask */) >>> 2 /* IsForValidationOffset */) === 1;\n}\nfunction setNodeIsForValidation(node, value) {\n    node.metadata = ((node.metadata & 251 /* IsForValidationMaskInverse */) | ((value ? 1 : 0) << 2 /* IsForValidationOffset */));\n}\nfunction getNodeStickiness(node) {\n    return ((node.metadata & 24 /* StickinessMask */) >>> 3 /* StickinessOffset */);\n}\nfunction _setNodeStickiness(node, stickiness) {\n    node.metadata = ((node.metadata & 231 /* StickinessMaskInverse */) | (stickiness << 3 /* StickinessOffset */));\n}\nfunction getCollapseOnReplaceEdit(node) {\n    return ((node.metadata & 32 /* CollapseOnReplaceEditMask */) >>> 5 /* CollapseOnReplaceEditOffset */) === 1;\n}\nfunction setCollapseOnReplaceEdit(node, value) {\n    node.metadata = ((node.metadata & 223 /* CollapseOnReplaceEditMaskInverse */) | ((value ? 1 : 0) << 5 /* CollapseOnReplaceEditOffset */));\n}\nexport class IntervalNode {\n    constructor(id, start, end) {\n        this.metadata = 0;\n        this.parent = this;\n        this.left = this;\n        this.right = this;\n        setNodeColor(this, 1 /* Red */);\n        this.start = start;\n        this.end = end;\n        // FORCE_OVERFLOWING_TEST: this.delta = start;\n        this.delta = 0;\n        this.maxEnd = end;\n        this.id = id;\n        this.ownerId = 0;\n        this.options = null;\n        setNodeIsForValidation(this, false);\n        _setNodeStickiness(this, 1 /* NeverGrowsWhenTypingAtEdges */);\n        setCollapseOnReplaceEdit(this, false);\n        this.cachedVersionId = 0;\n        this.cachedAbsoluteStart = start;\n        this.cachedAbsoluteEnd = end;\n        this.range = null;\n        setNodeIsVisited(this, false);\n    }\n    reset(versionId, start, end, range) {\n        this.start = start;\n        this.end = end;\n        this.maxEnd = end;\n        this.cachedVersionId = versionId;\n        this.cachedAbsoluteStart = start;\n        this.cachedAbsoluteEnd = end;\n        this.range = range;\n    }\n    setOptions(options) {\n        this.options = options;\n        const className = this.options.className;\n        setNodeIsForValidation(this, (className === \"squiggly-error\" /* EditorErrorDecoration */\n            || className === \"squiggly-warning\" /* EditorWarningDecoration */\n            || className === \"squiggly-info\" /* EditorInfoDecoration */));\n        _setNodeStickiness(this, this.options.stickiness);\n        setCollapseOnReplaceEdit(this, this.options.collapseOnReplaceEdit);\n    }\n    setCachedOffsets(absoluteStart, absoluteEnd, cachedVersionId) {\n        if (this.cachedVersionId !== cachedVersionId) {\n            this.range = null;\n        }\n        this.cachedVersionId = cachedVersionId;\n        this.cachedAbsoluteStart = absoluteStart;\n        this.cachedAbsoluteEnd = absoluteEnd;\n    }\n    detach() {\n        this.parent = null;\n        this.left = null;\n        this.right = null;\n    }\n}\nexport const SENTINEL = new IntervalNode(null, 0, 0);\nSENTINEL.parent = SENTINEL;\nSENTINEL.left = SENTINEL;\nSENTINEL.right = SENTINEL;\nsetNodeColor(SENTINEL, 0 /* Black */);\nexport class IntervalTree {\n    constructor() {\n        this.root = SENTINEL;\n        this.requestNormalizeDelta = false;\n    }\n    intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId) {\n        if (this.root === SENTINEL) {\n            return [];\n        }\n        return intervalSearch(this, start, end, filterOwnerId, filterOutValidation, cachedVersionId);\n    }\n    search(filterOwnerId, filterOutValidation, cachedVersionId) {\n        if (this.root === SENTINEL) {\n            return [];\n        }\n        return search(this, filterOwnerId, filterOutValidation, cachedVersionId);\n    }\n    /**\n     * Will not set `cachedAbsoluteStart` nor `cachedAbsoluteEnd` on the returned nodes!\n     */\n    collectNodesFromOwner(ownerId) {\n        return collectNodesFromOwner(this, ownerId);\n    }\n    /**\n     * Will not set `cachedAbsoluteStart` nor `cachedAbsoluteEnd` on the returned nodes!\n     */\n    collectNodesPostOrder() {\n        return collectNodesPostOrder(this);\n    }\n    insert(node) {\n        rbTreeInsert(this, node);\n        this._normalizeDeltaIfNecessary();\n    }\n    delete(node) {\n        rbTreeDelete(this, node);\n        this._normalizeDeltaIfNecessary();\n    }\n    resolveNode(node, cachedVersionId) {\n        const initialNode = node;\n        let delta = 0;\n        while (node !== this.root) {\n            if (node === node.parent.right) {\n                delta += node.parent.delta;\n            }\n            node = node.parent;\n        }\n        const nodeStart = initialNode.start + delta;\n        const nodeEnd = initialNode.end + delta;\n        initialNode.setCachedOffsets(nodeStart, nodeEnd, cachedVersionId);\n    }\n    acceptReplace(offset, length, textLength, forceMoveMarkers) {\n        // Our strategy is to remove all directly impacted nodes, and then add them back to the tree.\n        // (1) collect all nodes that are intersecting this edit as nodes of interest\n        const nodesOfInterest = searchForEditing(this, offset, offset + length);\n        // (2) remove all nodes that are intersecting this edit\n        for (let i = 0, len = nodesOfInterest.length; i < len; i++) {\n            const node = nodesOfInterest[i];\n            rbTreeDelete(this, node);\n        }\n        this._normalizeDeltaIfNecessary();\n        // (3) edit all tree nodes except the nodes of interest\n        noOverlapReplace(this, offset, offset + length, textLength);\n        this._normalizeDeltaIfNecessary();\n        // (4) edit the nodes of interest and insert them back in the tree\n        for (let i = 0, len = nodesOfInterest.length; i < len; i++) {\n            const node = nodesOfInterest[i];\n            node.start = node.cachedAbsoluteStart;\n            node.end = node.cachedAbsoluteEnd;\n            nodeAcceptEdit(node, offset, (offset + length), textLength, forceMoveMarkers);\n            node.maxEnd = node.end;\n            rbTreeInsert(this, node);\n        }\n        this._normalizeDeltaIfNecessary();\n    }\n    _normalizeDeltaIfNecessary() {\n        if (!this.requestNormalizeDelta) {\n            return;\n        }\n        this.requestNormalizeDelta = false;\n        normalizeDelta(this);\n    }\n}\n//#region Delta Normalization\nfunction normalizeDelta(T) {\n    let node = T.root;\n    let delta = 0;\n    while (node !== SENTINEL) {\n        if (node.left !== SENTINEL && !getNodeIsVisited(node.left)) {\n            // go left\n            node = node.left;\n            continue;\n        }\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            delta += node.delta;\n            node = node.right;\n            continue;\n        }\n        // handle current node\n        node.start = delta + node.start;\n        node.end = delta + node.end;\n        node.delta = 0;\n        recomputeMaxEnd(node);\n        setNodeIsVisited(node, true);\n        // going up from this node\n        setNodeIsVisited(node.left, false);\n        setNodeIsVisited(node.right, false);\n        if (node === node.parent.right) {\n            delta -= node.parent.delta;\n        }\n        node = node.parent;\n    }\n    setNodeIsVisited(T.root, false);\n}\nfunction adjustMarkerBeforeColumn(markerOffset, markerStickToPreviousCharacter, checkOffset, moveSemantics) {\n    if (markerOffset < checkOffset) {\n        return true;\n    }\n    if (markerOffset > checkOffset) {\n        return false;\n    }\n    if (moveSemantics === 1 /* ForceMove */) {\n        return false;\n    }\n    if (moveSemantics === 2 /* ForceStay */) {\n        return true;\n    }\n    return markerStickToPreviousCharacter;\n}\n/**\n * This is a lot more complicated than strictly necessary to maintain the same behaviour\n * as when decorations were implemented using two markers.\n */\nexport function nodeAcceptEdit(node, start, end, textLength, forceMoveMarkers) {\n    const nodeStickiness = getNodeStickiness(node);\n    const startStickToPreviousCharacter = (nodeStickiness === 0 /* AlwaysGrowsWhenTypingAtEdges */\n        || nodeStickiness === 2 /* GrowsOnlyWhenTypingBefore */);\n    const endStickToPreviousCharacter = (nodeStickiness === 1 /* NeverGrowsWhenTypingAtEdges */\n        || nodeStickiness === 2 /* GrowsOnlyWhenTypingBefore */);\n    const deletingCnt = (end - start);\n    const insertingCnt = textLength;\n    const commonLength = Math.min(deletingCnt, insertingCnt);\n    const nodeStart = node.start;\n    let startDone = false;\n    const nodeEnd = node.end;\n    let endDone = false;\n    if (start <= nodeStart && nodeEnd <= end && getCollapseOnReplaceEdit(node)) {\n        // This edit encompasses the entire decoration range\n        // and the decoration has asked to become collapsed\n        node.start = start;\n        startDone = true;\n        node.end = start;\n        endDone = true;\n    }\n    {\n        const moveSemantics = forceMoveMarkers ? 1 /* ForceMove */ : (deletingCnt > 0 ? 2 /* ForceStay */ : 0 /* MarkerDefined */);\n        if (!startDone && adjustMarkerBeforeColumn(nodeStart, startStickToPreviousCharacter, start, moveSemantics)) {\n            startDone = true;\n        }\n        if (!endDone && adjustMarkerBeforeColumn(nodeEnd, endStickToPreviousCharacter, start, moveSemantics)) {\n            endDone = true;\n        }\n    }\n    if (commonLength > 0 && !forceMoveMarkers) {\n        const moveSemantics = (deletingCnt > insertingCnt ? 2 /* ForceStay */ : 0 /* MarkerDefined */);\n        if (!startDone && adjustMarkerBeforeColumn(nodeStart, startStickToPreviousCharacter, start + commonLength, moveSemantics)) {\n            startDone = true;\n        }\n        if (!endDone && adjustMarkerBeforeColumn(nodeEnd, endStickToPreviousCharacter, start + commonLength, moveSemantics)) {\n            endDone = true;\n        }\n    }\n    {\n        const moveSemantics = forceMoveMarkers ? 1 /* ForceMove */ : 0 /* MarkerDefined */;\n        if (!startDone && adjustMarkerBeforeColumn(nodeStart, startStickToPreviousCharacter, end, moveSemantics)) {\n            node.start = start + insertingCnt;\n            startDone = true;\n        }\n        if (!endDone && adjustMarkerBeforeColumn(nodeEnd, endStickToPreviousCharacter, end, moveSemantics)) {\n            node.end = start + insertingCnt;\n            endDone = true;\n        }\n    }\n    // Finish\n    const deltaColumn = (insertingCnt - deletingCnt);\n    if (!startDone) {\n        node.start = Math.max(0, nodeStart + deltaColumn);\n    }\n    if (!endDone) {\n        node.end = Math.max(0, nodeEnd + deltaColumn);\n    }\n    if (node.start > node.end) {\n        node.end = node.start;\n    }\n}\nfunction searchForEditing(T, start, end) {\n    // https://en.wikipedia.org/wiki/Interval_tree#Augmented_tree\n    // Now, it is known that two intervals A and B overlap only when both\n    // A.low <= B.high and A.high >= B.low. When searching the trees for\n    // nodes overlapping with a given interval, you can immediately skip:\n    //  a) all nodes to the right of nodes whose low value is past the end of the given interval.\n    //  b) all nodes that have their maximum 'high' value below the start of the given interval.\n    let node = T.root;\n    let delta = 0;\n    let nodeMaxEnd = 0;\n    let nodeStart = 0;\n    let nodeEnd = 0;\n    const result = [];\n    let resultLen = 0;\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            if (node === node.parent.right) {\n                delta -= node.parent.delta;\n            }\n            node = node.parent;\n            continue;\n        }\n        if (!getNodeIsVisited(node.left)) {\n            // first time seeing this node\n            nodeMaxEnd = delta + node.maxEnd;\n            if (nodeMaxEnd < start) {\n                // cover case b) from above\n                // there is no need to search this node or its children\n                setNodeIsVisited(node, true);\n                continue;\n            }\n            if (node.left !== SENTINEL) {\n                // go left\n                node = node.left;\n                continue;\n            }\n        }\n        // handle current node\n        nodeStart = delta + node.start;\n        if (nodeStart > end) {\n            // cover case a) from above\n            // there is no need to search this node or its right subtree\n            setNodeIsVisited(node, true);\n            continue;\n        }\n        nodeEnd = delta + node.end;\n        if (nodeEnd >= start) {\n            node.setCachedOffsets(nodeStart, nodeEnd, 0);\n            result[resultLen++] = node;\n        }\n        setNodeIsVisited(node, true);\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            delta += node.delta;\n            node = node.right;\n            continue;\n        }\n    }\n    setNodeIsVisited(T.root, false);\n    return result;\n}\nfunction noOverlapReplace(T, start, end, textLength) {\n    // https://en.wikipedia.org/wiki/Interval_tree#Augmented_tree\n    // Now, it is known that two intervals A and B overlap only when both\n    // A.low <= B.high and A.high >= B.low. When searching the trees for\n    // nodes overlapping with a given interval, you can immediately skip:\n    //  a) all nodes to the right of nodes whose low value is past the end of the given interval.\n    //  b) all nodes that have their maximum 'high' value below the start of the given interval.\n    let node = T.root;\n    let delta = 0;\n    let nodeMaxEnd = 0;\n    let nodeStart = 0;\n    const editDelta = (textLength - (end - start));\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            if (node === node.parent.right) {\n                delta -= node.parent.delta;\n            }\n            recomputeMaxEnd(node);\n            node = node.parent;\n            continue;\n        }\n        if (!getNodeIsVisited(node.left)) {\n            // first time seeing this node\n            nodeMaxEnd = delta + node.maxEnd;\n            if (nodeMaxEnd < start) {\n                // cover case b) from above\n                // there is no need to search this node or its children\n                setNodeIsVisited(node, true);\n                continue;\n            }\n            if (node.left !== SENTINEL) {\n                // go left\n                node = node.left;\n                continue;\n            }\n        }\n        // handle current node\n        nodeStart = delta + node.start;\n        if (nodeStart > end) {\n            node.start += editDelta;\n            node.end += editDelta;\n            node.delta += editDelta;\n            if (node.delta < -1073741824 /* MIN_SAFE_DELTA */ || node.delta > 1073741824 /* MAX_SAFE_DELTA */) {\n                T.requestNormalizeDelta = true;\n            }\n            // cover case a) from above\n            // there is no need to search this node or its right subtree\n            setNodeIsVisited(node, true);\n            continue;\n        }\n        setNodeIsVisited(node, true);\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            delta += node.delta;\n            node = node.right;\n            continue;\n        }\n    }\n    setNodeIsVisited(T.root, false);\n}\n//#endregion\n//#region Searching\nfunction collectNodesFromOwner(T, ownerId) {\n    let node = T.root;\n    const result = [];\n    let resultLen = 0;\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            node = node.parent;\n            continue;\n        }\n        if (node.left !== SENTINEL && !getNodeIsVisited(node.left)) {\n            // go left\n            node = node.left;\n            continue;\n        }\n        // handle current node\n        if (node.ownerId === ownerId) {\n            result[resultLen++] = node;\n        }\n        setNodeIsVisited(node, true);\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            node = node.right;\n            continue;\n        }\n    }\n    setNodeIsVisited(T.root, false);\n    return result;\n}\nfunction collectNodesPostOrder(T) {\n    let node = T.root;\n    const result = [];\n    let resultLen = 0;\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            node = node.parent;\n            continue;\n        }\n        if (node.left !== SENTINEL && !getNodeIsVisited(node.left)) {\n            // go left\n            node = node.left;\n            continue;\n        }\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            node = node.right;\n            continue;\n        }\n        // handle current node\n        result[resultLen++] = node;\n        setNodeIsVisited(node, true);\n    }\n    setNodeIsVisited(T.root, false);\n    return result;\n}\nfunction search(T, filterOwnerId, filterOutValidation, cachedVersionId) {\n    let node = T.root;\n    let delta = 0;\n    let nodeStart = 0;\n    let nodeEnd = 0;\n    const result = [];\n    let resultLen = 0;\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            if (node === node.parent.right) {\n                delta -= node.parent.delta;\n            }\n            node = node.parent;\n            continue;\n        }\n        if (node.left !== SENTINEL && !getNodeIsVisited(node.left)) {\n            // go left\n            node = node.left;\n            continue;\n        }\n        // handle current node\n        nodeStart = delta + node.start;\n        nodeEnd = delta + node.end;\n        node.setCachedOffsets(nodeStart, nodeEnd, cachedVersionId);\n        let include = true;\n        if (filterOwnerId && node.ownerId && node.ownerId !== filterOwnerId) {\n            include = false;\n        }\n        if (filterOutValidation && getNodeIsForValidation(node)) {\n            include = false;\n        }\n        if (include) {\n            result[resultLen++] = node;\n        }\n        setNodeIsVisited(node, true);\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            delta += node.delta;\n            node = node.right;\n            continue;\n        }\n    }\n    setNodeIsVisited(T.root, false);\n    return result;\n}\nfunction intervalSearch(T, intervalStart, intervalEnd, filterOwnerId, filterOutValidation, cachedVersionId) {\n    // https://en.wikipedia.org/wiki/Interval_tree#Augmented_tree\n    // Now, it is known that two intervals A and B overlap only when both\n    // A.low <= B.high and A.high >= B.low. When searching the trees for\n    // nodes overlapping with a given interval, you can immediately skip:\n    //  a) all nodes to the right of nodes whose low value is past the end of the given interval.\n    //  b) all nodes that have their maximum 'high' value below the start of the given interval.\n    let node = T.root;\n    let delta = 0;\n    let nodeMaxEnd = 0;\n    let nodeStart = 0;\n    let nodeEnd = 0;\n    const result = [];\n    let resultLen = 0;\n    while (node !== SENTINEL) {\n        if (getNodeIsVisited(node)) {\n            // going up from this node\n            setNodeIsVisited(node.left, false);\n            setNodeIsVisited(node.right, false);\n            if (node === node.parent.right) {\n                delta -= node.parent.delta;\n            }\n            node = node.parent;\n            continue;\n        }\n        if (!getNodeIsVisited(node.left)) {\n            // first time seeing this node\n            nodeMaxEnd = delta + node.maxEnd;\n            if (nodeMaxEnd < intervalStart) {\n                // cover case b) from above\n                // there is no need to search this node or its children\n                setNodeIsVisited(node, true);\n                continue;\n            }\n            if (node.left !== SENTINEL) {\n                // go left\n                node = node.left;\n                continue;\n            }\n        }\n        // handle current node\n        nodeStart = delta + node.start;\n        if (nodeStart > intervalEnd) {\n            // cover case a) from above\n            // there is no need to search this node or its right subtree\n            setNodeIsVisited(node, true);\n            continue;\n        }\n        nodeEnd = delta + node.end;\n        if (nodeEnd >= intervalStart) {\n            // There is overlap\n            node.setCachedOffsets(nodeStart, nodeEnd, cachedVersionId);\n            let include = true;\n            if (filterOwnerId && node.ownerId && node.ownerId !== filterOwnerId) {\n                include = false;\n            }\n            if (filterOutValidation && getNodeIsForValidation(node)) {\n                include = false;\n            }\n            if (include) {\n                result[resultLen++] = node;\n            }\n        }\n        setNodeIsVisited(node, true);\n        if (node.right !== SENTINEL && !getNodeIsVisited(node.right)) {\n            // go right\n            delta += node.delta;\n            node = node.right;\n            continue;\n        }\n    }\n    setNodeIsVisited(T.root, false);\n    return result;\n}\n//#endregion\n//#region Insertion\nfunction rbTreeInsert(T, newNode) {\n    if (T.root === SENTINEL) {\n        newNode.parent = SENTINEL;\n        newNode.left = SENTINEL;\n        newNode.right = SENTINEL;\n        setNodeColor(newNode, 0 /* Black */);\n        T.root = newNode;\n        return T.root;\n    }\n    treeInsert(T, newNode);\n    recomputeMaxEndWalkToRoot(newNode.parent);\n    // repair tree\n    let x = newNode;\n    while (x !== T.root && getNodeColor(x.parent) === 1 /* Red */) {\n        if (x.parent === x.parent.parent.left) {\n            const y = x.parent.parent.right;\n            if (getNodeColor(y) === 1 /* Red */) {\n                setNodeColor(x.parent, 0 /* Black */);\n                setNodeColor(y, 0 /* Black */);\n                setNodeColor(x.parent.parent, 1 /* Red */);\n                x = x.parent.parent;\n            }\n            else {\n                if (x === x.parent.right) {\n                    x = x.parent;\n                    leftRotate(T, x);\n                }\n                setNodeColor(x.parent, 0 /* Black */);\n                setNodeColor(x.parent.parent, 1 /* Red */);\n                rightRotate(T, x.parent.parent);\n            }\n        }\n        else {\n            const y = x.parent.parent.left;\n            if (getNodeColor(y) === 1 /* Red */) {\n                setNodeColor(x.parent, 0 /* Black */);\n                setNodeColor(y, 0 /* Black */);\n                setNodeColor(x.parent.parent, 1 /* Red */);\n                x = x.parent.parent;\n            }\n            else {\n                if (x === x.parent.left) {\n                    x = x.parent;\n                    rightRotate(T, x);\n                }\n                setNodeColor(x.parent, 0 /* Black */);\n                setNodeColor(x.parent.parent, 1 /* Red */);\n                leftRotate(T, x.parent.parent);\n            }\n        }\n    }\n    setNodeColor(T.root, 0 /* Black */);\n    return newNode;\n}\nfunction treeInsert(T, z) {\n    let delta = 0;\n    let x = T.root;\n    const zAbsoluteStart = z.start;\n    const zAbsoluteEnd = z.end;\n    while (true) {\n        const cmp = intervalCompare(zAbsoluteStart, zAbsoluteEnd, x.start + delta, x.end + delta);\n        if (cmp < 0) {\n            // this node should be inserted to the left\n            // => it is not affected by the node's delta\n            if (x.left === SENTINEL) {\n                z.start -= delta;\n                z.end -= delta;\n                z.maxEnd -= delta;\n                x.left = z;\n                break;\n            }\n            else {\n                x = x.left;\n            }\n        }\n        else {\n            // this node should be inserted to the right\n            // => it is not affected by the node's delta\n            if (x.right === SENTINEL) {\n                z.start -= (delta + x.delta);\n                z.end -= (delta + x.delta);\n                z.maxEnd -= (delta + x.delta);\n                x.right = z;\n                break;\n            }\n            else {\n                delta += x.delta;\n                x = x.right;\n            }\n        }\n    }\n    z.parent = x;\n    z.left = SENTINEL;\n    z.right = SENTINEL;\n    setNodeColor(z, 1 /* Red */);\n}\n//#endregion\n//#region Deletion\nfunction rbTreeDelete(T, z) {\n    let x;\n    let y;\n    // RB-DELETE except we don't swap z and y in case c)\n    // i.e. we always delete what's pointed at by z.\n    if (z.left === SENTINEL) {\n        x = z.right;\n        y = z;\n        // x's delta is no longer influenced by z's delta\n        x.delta += z.delta;\n        if (x.delta < -1073741824 /* MIN_SAFE_DELTA */ || x.delta > 1073741824 /* MAX_SAFE_DELTA */) {\n            T.requestNormalizeDelta = true;\n        }\n        x.start += z.delta;\n        x.end += z.delta;\n    }\n    else if (z.right === SENTINEL) {\n        x = z.left;\n        y = z;\n    }\n    else {\n        y = leftest(z.right);\n        x = y.right;\n        // y's delta is no longer influenced by z's delta,\n        // but we don't want to walk the entire right-hand-side subtree of x.\n        // we therefore maintain z's delta in y, and adjust only x\n        x.start += y.delta;\n        x.end += y.delta;\n        x.delta += y.delta;\n        if (x.delta < -1073741824 /* MIN_SAFE_DELTA */ || x.delta > 1073741824 /* MAX_SAFE_DELTA */) {\n            T.requestNormalizeDelta = true;\n        }\n        y.start += z.delta;\n        y.end += z.delta;\n        y.delta = z.delta;\n        if (y.delta < -1073741824 /* MIN_SAFE_DELTA */ || y.delta > 1073741824 /* MAX_SAFE_DELTA */) {\n            T.requestNormalizeDelta = true;\n        }\n    }\n    if (y === T.root) {\n        T.root = x;\n        setNodeColor(x, 0 /* Black */);\n        z.detach();\n        resetSentinel();\n        recomputeMaxEnd(x);\n        T.root.parent = SENTINEL;\n        return;\n    }\n    const yWasRed = (getNodeColor(y) === 1 /* Red */);\n    if (y === y.parent.left) {\n        y.parent.left = x;\n    }\n    else {\n        y.parent.right = x;\n    }\n    if (y === z) {\n        x.parent = y.parent;\n    }\n    else {\n        if (y.parent === z) {\n            x.parent = y;\n        }\n        else {\n            x.parent = y.parent;\n        }\n        y.left = z.left;\n        y.right = z.right;\n        y.parent = z.parent;\n        setNodeColor(y, getNodeColor(z));\n        if (z === T.root) {\n            T.root = y;\n        }\n        else {\n            if (z === z.parent.left) {\n                z.parent.left = y;\n            }\n            else {\n                z.parent.right = y;\n            }\n        }\n        if (y.left !== SENTINEL) {\n            y.left.parent = y;\n        }\n        if (y.right !== SENTINEL) {\n            y.right.parent = y;\n        }\n    }\n    z.detach();\n    if (yWasRed) {\n        recomputeMaxEndWalkToRoot(x.parent);\n        if (y !== z) {\n            recomputeMaxEndWalkToRoot(y);\n            recomputeMaxEndWalkToRoot(y.parent);\n        }\n        resetSentinel();\n        return;\n    }\n    recomputeMaxEndWalkToRoot(x);\n    recomputeMaxEndWalkToRoot(x.parent);\n    if (y !== z) {\n        recomputeMaxEndWalkToRoot(y);\n        recomputeMaxEndWalkToRoot(y.parent);\n    }\n    // RB-DELETE-FIXUP\n    let w;\n    while (x !== T.root && getNodeColor(x) === 0 /* Black */) {\n        if (x === x.parent.left) {\n            w = x.parent.right;\n            if (getNodeColor(w) === 1 /* Red */) {\n                setNodeColor(w, 0 /* Black */);\n                setNodeColor(x.parent, 1 /* Red */);\n                leftRotate(T, x.parent);\n                w = x.parent.right;\n            }\n            if (getNodeColor(w.left) === 0 /* Black */ && getNodeColor(w.right) === 0 /* Black */) {\n                setNodeColor(w, 1 /* Red */);\n                x = x.parent;\n            }\n            else {\n                if (getNodeColor(w.right) === 0 /* Black */) {\n                    setNodeColor(w.left, 0 /* Black */);\n                    setNodeColor(w, 1 /* Red */);\n                    rightRotate(T, w);\n                    w = x.parent.right;\n                }\n                setNodeColor(w, getNodeColor(x.parent));\n                setNodeColor(x.parent, 0 /* Black */);\n                setNodeColor(w.right, 0 /* Black */);\n                leftRotate(T, x.parent);\n                x = T.root;\n            }\n        }\n        else {\n            w = x.parent.left;\n            if (getNodeColor(w) === 1 /* Red */) {\n                setNodeColor(w, 0 /* Black */);\n                setNodeColor(x.parent, 1 /* Red */);\n                rightRotate(T, x.parent);\n                w = x.parent.left;\n            }\n            if (getNodeColor(w.left) === 0 /* Black */ && getNodeColor(w.right) === 0 /* Black */) {\n                setNodeColor(w, 1 /* Red */);\n                x = x.parent;\n            }\n            else {\n                if (getNodeColor(w.left) === 0 /* Black */) {\n                    setNodeColor(w.right, 0 /* Black */);\n                    setNodeColor(w, 1 /* Red */);\n                    leftRotate(T, w);\n                    w = x.parent.left;\n                }\n                setNodeColor(w, getNodeColor(x.parent));\n                setNodeColor(x.parent, 0 /* Black */);\n                setNodeColor(w.left, 0 /* Black */);\n                rightRotate(T, x.parent);\n                x = T.root;\n            }\n        }\n    }\n    setNodeColor(x, 0 /* Black */);\n    resetSentinel();\n}\nfunction leftest(node) {\n    while (node.left !== SENTINEL) {\n        node = node.left;\n    }\n    return node;\n}\nfunction resetSentinel() {\n    SENTINEL.parent = SENTINEL;\n    SENTINEL.delta = 0; // optional\n    SENTINEL.start = 0; // optional\n    SENTINEL.end = 0; // optional\n}\n//#endregion\n//#region Rotations\nfunction leftRotate(T, x) {\n    const y = x.right; // set y.\n    y.delta += x.delta; // y's delta is no longer influenced by x's delta\n    if (y.delta < -1073741824 /* MIN_SAFE_DELTA */ || y.delta > 1073741824 /* MAX_SAFE_DELTA */) {\n        T.requestNormalizeDelta = true;\n    }\n    y.start += x.delta;\n    y.end += x.delta;\n    x.right = y.left; // turn y's left subtree into x's right subtree.\n    if (y.left !== SENTINEL) {\n        y.left.parent = x;\n    }\n    y.parent = x.parent; // link x's parent to y.\n    if (x.parent === SENTINEL) {\n        T.root = y;\n    }\n    else if (x === x.parent.left) {\n        x.parent.left = y;\n    }\n    else {\n        x.parent.right = y;\n    }\n    y.left = x; // put x on y's left.\n    x.parent = y;\n    recomputeMaxEnd(x);\n    recomputeMaxEnd(y);\n}\nfunction rightRotate(T, y) {\n    const x = y.left;\n    y.delta -= x.delta;\n    if (y.delta < -1073741824 /* MIN_SAFE_DELTA */ || y.delta > 1073741824 /* MAX_SAFE_DELTA */) {\n        T.requestNormalizeDelta = true;\n    }\n    y.start -= x.delta;\n    y.end -= x.delta;\n    y.left = x.right;\n    if (x.right !== SENTINEL) {\n        x.right.parent = y;\n    }\n    x.parent = y.parent;\n    if (y.parent === SENTINEL) {\n        T.root = x;\n    }\n    else if (y === y.parent.right) {\n        y.parent.right = x;\n    }\n    else {\n        y.parent.left = x;\n    }\n    x.right = y;\n    y.parent = x;\n    recomputeMaxEnd(y);\n    recomputeMaxEnd(x);\n}\n//#endregion\n//#region max end computation\nfunction computeMaxEnd(node) {\n    let maxEnd = node.end;\n    if (node.left !== SENTINEL) {\n        const leftMaxEnd = node.left.maxEnd;\n        if (leftMaxEnd > maxEnd) {\n            maxEnd = leftMaxEnd;\n        }\n    }\n    if (node.right !== SENTINEL) {\n        const rightMaxEnd = node.right.maxEnd + node.delta;\n        if (rightMaxEnd > maxEnd) {\n            maxEnd = rightMaxEnd;\n        }\n    }\n    return maxEnd;\n}\nexport function recomputeMaxEnd(node) {\n    node.maxEnd = computeMaxEnd(node);\n}\nfunction recomputeMaxEndWalkToRoot(node) {\n    while (node !== SENTINEL) {\n        const maxEnd = computeMaxEnd(node);\n        if (node.maxEnd === maxEnd) {\n            // no need to go further\n            return;\n        }\n        node.maxEnd = maxEnd;\n        node = node.parent;\n    }\n}\n//#endregion\n//#region utils\nexport function intervalCompare(aStart, aEnd, bStart, bEnd) {\n    if (aStart === bStart) {\n        return aEnd - bEnd;\n    }\n    return aStart - bStart;\n}\n//#endregion\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class TreeNode {\n    constructor(piece, color) {\n        this.piece = piece;\n        this.color = color;\n        this.size_left = 0;\n        this.lf_left = 0;\n        this.parent = this;\n        this.left = this;\n        this.right = this;\n    }\n    next() {\n        if (this.right !== SENTINEL) {\n            return leftest(this.right);\n        }\n        let node = this;\n        while (node.parent !== SENTINEL) {\n            if (node.parent.left === node) {\n                break;\n            }\n            node = node.parent;\n        }\n        if (node.parent === SENTINEL) {\n            return SENTINEL;\n        }\n        else {\n            return node.parent;\n        }\n    }\n    prev() {\n        if (this.left !== SENTINEL) {\n            return righttest(this.left);\n        }\n        let node = this;\n        while (node.parent !== SENTINEL) {\n            if (node.parent.right === node) {\n                break;\n            }\n            node = node.parent;\n        }\n        if (node.parent === SENTINEL) {\n            return SENTINEL;\n        }\n        else {\n            return node.parent;\n        }\n    }\n    detach() {\n        this.parent = null;\n        this.left = null;\n        this.right = null;\n    }\n}\nexport const SENTINEL = new TreeNode(null, 0 /* Black */);\nSENTINEL.parent = SENTINEL;\nSENTINEL.left = SENTINEL;\nSENTINEL.right = SENTINEL;\nSENTINEL.color = 0 /* Black */;\nexport function leftest(node) {\n    while (node.left !== SENTINEL) {\n        node = node.left;\n    }\n    return node;\n}\nexport function righttest(node) {\n    while (node.right !== SENTINEL) {\n        node = node.right;\n    }\n    return node;\n}\nexport function calculateSize(node) {\n    if (node === SENTINEL) {\n        return 0;\n    }\n    return node.size_left + node.piece.length + calculateSize(node.right);\n}\nexport function calculateLF(node) {\n    if (node === SENTINEL) {\n        return 0;\n    }\n    return node.lf_left + node.piece.lineFeedCnt + calculateLF(node.right);\n}\nexport function resetSentinel() {\n    SENTINEL.parent = SENTINEL;\n}\nexport function leftRotate(tree, x) {\n    const y = x.right;\n    // fix size_left\n    y.size_left += x.size_left + (x.piece ? x.piece.length : 0);\n    y.lf_left += x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n    x.right = y.left;\n    if (y.left !== SENTINEL) {\n        y.left.parent = x;\n    }\n    y.parent = x.parent;\n    if (x.parent === SENTINEL) {\n        tree.root = y;\n    }\n    else if (x.parent.left === x) {\n        x.parent.left = y;\n    }\n    else {\n        x.parent.right = y;\n    }\n    y.left = x;\n    x.parent = y;\n}\nexport function rightRotate(tree, y) {\n    const x = y.left;\n    y.left = x.right;\n    if (x.right !== SENTINEL) {\n        x.right.parent = y;\n    }\n    x.parent = y.parent;\n    // fix size_left\n    y.size_left -= x.size_left + (x.piece ? x.piece.length : 0);\n    y.lf_left -= x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n    if (y.parent === SENTINEL) {\n        tree.root = x;\n    }\n    else if (y === y.parent.right) {\n        y.parent.right = x;\n    }\n    else {\n        y.parent.left = x;\n    }\n    x.right = y;\n    y.parent = x;\n}\nexport function rbDelete(tree, z) {\n    let x;\n    let y;\n    if (z.left === SENTINEL) {\n        y = z;\n        x = y.right;\n    }\n    else if (z.right === SENTINEL) {\n        y = z;\n        x = y.left;\n    }\n    else {\n        y = leftest(z.right);\n        x = y.right;\n    }\n    if (y === tree.root) {\n        tree.root = x;\n        // if x is null, we are removing the only node\n        x.color = 0 /* Black */;\n        z.detach();\n        resetSentinel();\n        tree.root.parent = SENTINEL;\n        return;\n    }\n    const yWasRed = (y.color === 1 /* Red */);\n    if (y === y.parent.left) {\n        y.parent.left = x;\n    }\n    else {\n        y.parent.right = x;\n    }\n    if (y === z) {\n        x.parent = y.parent;\n        recomputeTreeMetadata(tree, x);\n    }\n    else {\n        if (y.parent === z) {\n            x.parent = y;\n        }\n        else {\n            x.parent = y.parent;\n        }\n        // as we make changes to x's hierarchy, update size_left of subtree first\n        recomputeTreeMetadata(tree, x);\n        y.left = z.left;\n        y.right = z.right;\n        y.parent = z.parent;\n        y.color = z.color;\n        if (z === tree.root) {\n            tree.root = y;\n        }\n        else {\n            if (z === z.parent.left) {\n                z.parent.left = y;\n            }\n            else {\n                z.parent.right = y;\n            }\n        }\n        if (y.left !== SENTINEL) {\n            y.left.parent = y;\n        }\n        if (y.right !== SENTINEL) {\n            y.right.parent = y;\n        }\n        // update metadata\n        // we replace z with y, so in this sub tree, the length change is z.item.length\n        y.size_left = z.size_left;\n        y.lf_left = z.lf_left;\n        recomputeTreeMetadata(tree, y);\n    }\n    z.detach();\n    if (x.parent.left === x) {\n        const newSizeLeft = calculateSize(x);\n        const newLFLeft = calculateLF(x);\n        if (newSizeLeft !== x.parent.size_left || newLFLeft !== x.parent.lf_left) {\n            const delta = newSizeLeft - x.parent.size_left;\n            const lf_delta = newLFLeft - x.parent.lf_left;\n            x.parent.size_left = newSizeLeft;\n            x.parent.lf_left = newLFLeft;\n            updateTreeMetadata(tree, x.parent, delta, lf_delta);\n        }\n    }\n    recomputeTreeMetadata(tree, x.parent);\n    if (yWasRed) {\n        resetSentinel();\n        return;\n    }\n    // RB-DELETE-FIXUP\n    let w;\n    while (x !== tree.root && x.color === 0 /* Black */) {\n        if (x === x.parent.left) {\n            w = x.parent.right;\n            if (w.color === 1 /* Red */) {\n                w.color = 0 /* Black */;\n                x.parent.color = 1 /* Red */;\n                leftRotate(tree, x.parent);\n                w = x.parent.right;\n            }\n            if (w.left.color === 0 /* Black */ && w.right.color === 0 /* Black */) {\n                w.color = 1 /* Red */;\n                x = x.parent;\n            }\n            else {\n                if (w.right.color === 0 /* Black */) {\n                    w.left.color = 0 /* Black */;\n                    w.color = 1 /* Red */;\n                    rightRotate(tree, w);\n                    w = x.parent.right;\n                }\n                w.color = x.parent.color;\n                x.parent.color = 0 /* Black */;\n                w.right.color = 0 /* Black */;\n                leftRotate(tree, x.parent);\n                x = tree.root;\n            }\n        }\n        else {\n            w = x.parent.left;\n            if (w.color === 1 /* Red */) {\n                w.color = 0 /* Black */;\n                x.parent.color = 1 /* Red */;\n                rightRotate(tree, x.parent);\n                w = x.parent.left;\n            }\n            if (w.left.color === 0 /* Black */ && w.right.color === 0 /* Black */) {\n                w.color = 1 /* Red */;\n                x = x.parent;\n            }\n            else {\n                if (w.left.color === 0 /* Black */) {\n                    w.right.color = 0 /* Black */;\n                    w.color = 1 /* Red */;\n                    leftRotate(tree, w);\n                    w = x.parent.left;\n                }\n                w.color = x.parent.color;\n                x.parent.color = 0 /* Black */;\n                w.left.color = 0 /* Black */;\n                rightRotate(tree, x.parent);\n                x = tree.root;\n            }\n        }\n    }\n    x.color = 0 /* Black */;\n    resetSentinel();\n}\nexport function fixInsert(tree, x) {\n    recomputeTreeMetadata(tree, x);\n    while (x !== tree.root && x.parent.color === 1 /* Red */) {\n        if (x.parent === x.parent.parent.left) {\n            const y = x.parent.parent.right;\n            if (y.color === 1 /* Red */) {\n                x.parent.color = 0 /* Black */;\n                y.color = 0 /* Black */;\n                x.parent.parent.color = 1 /* Red */;\n                x = x.parent.parent;\n            }\n            else {\n                if (x === x.parent.right) {\n                    x = x.parent;\n                    leftRotate(tree, x);\n                }\n                x.parent.color = 0 /* Black */;\n                x.parent.parent.color = 1 /* Red */;\n                rightRotate(tree, x.parent.parent);\n            }\n        }\n        else {\n            const y = x.parent.parent.left;\n            if (y.color === 1 /* Red */) {\n                x.parent.color = 0 /* Black */;\n                y.color = 0 /* Black */;\n                x.parent.parent.color = 1 /* Red */;\n                x = x.parent.parent;\n            }\n            else {\n                if (x === x.parent.left) {\n                    x = x.parent;\n                    rightRotate(tree, x);\n                }\n                x.parent.color = 0 /* Black */;\n                x.parent.parent.color = 1 /* Red */;\n                leftRotate(tree, x.parent.parent);\n            }\n        }\n    }\n    tree.root.color = 0 /* Black */;\n}\nexport function updateTreeMetadata(tree, x, delta, lineFeedCntDelta) {\n    // node length change or line feed count change\n    while (x !== tree.root && x !== SENTINEL) {\n        if (x.parent.left === x) {\n            x.parent.size_left += delta;\n            x.parent.lf_left += lineFeedCntDelta;\n        }\n        x = x.parent;\n    }\n}\nexport function recomputeTreeMetadata(tree, x) {\n    let delta = 0;\n    let lf_delta = 0;\n    if (x === tree.root) {\n        return;\n    }\n    // go upwards till the node whose left subtree is changed.\n    while (x !== tree.root && x === x.parent.right) {\n        x = x.parent;\n    }\n    if (x === tree.root) {\n        // well, it means we add a node to the end (inorder)\n        return;\n    }\n    // x is the node whose right subtree is changed.\n    x = x.parent;\n    delta = calculateSize(x.left) - x.size_left;\n    lf_delta = calculateLF(x.left) - x.lf_left;\n    x.size_left += delta;\n    x.lf_left += lf_delta;\n    // go upwards till root. O(logN)\n    while (x !== tree.root && (delta !== 0 || lf_delta !== 0)) {\n        if (x.parent.left === x) {\n            x.parent.size_left += delta;\n            x.parent.lf_left += lf_delta;\n        }\n        x = x.parent;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { FindMatch } from '../../model.js';\nimport { SENTINEL, TreeNode, fixInsert, leftest, rbDelete, righttest, updateTreeMetadata } from './rbTreeBase.js';\nimport { Searcher, createFindMatch, isValidMatch } from '../textModelSearch.js';\n// const lfRegex = new RegExp(/\\r\\n|\\r|\\n/g);\nexport const AverageBufferSize = 65535;\nexport function createUintArray(arr) {\n    let r;\n    if (arr[arr.length - 1] < 65536) {\n        r = new Uint16Array(arr.length);\n    }\n    else {\n        r = new Uint32Array(arr.length);\n    }\n    r.set(arr, 0);\n    return r;\n}\nexport class LineStarts {\n    constructor(lineStarts, cr, lf, crlf, isBasicASCII) {\n        this.lineStarts = lineStarts;\n        this.cr = cr;\n        this.lf = lf;\n        this.crlf = crlf;\n        this.isBasicASCII = isBasicASCII;\n    }\n}\nexport function createLineStartsFast(str, readonly = true) {\n    const r = [0];\n    let rLength = 1;\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chr = str.charCodeAt(i);\n        if (chr === 13 /* CarriageReturn */) {\n            if (i + 1 < len && str.charCodeAt(i + 1) === 10 /* LineFeed */) {\n                // \\r\\n... case\n                r[rLength++] = i + 2;\n                i++; // skip \\n\n            }\n            else {\n                // \\r... case\n                r[rLength++] = i + 1;\n            }\n        }\n        else if (chr === 10 /* LineFeed */) {\n            r[rLength++] = i + 1;\n        }\n    }\n    if (readonly) {\n        return createUintArray(r);\n    }\n    else {\n        return r;\n    }\n}\nexport function createLineStarts(r, str) {\n    r.length = 0;\n    r[0] = 0;\n    let rLength = 1;\n    let cr = 0, lf = 0, crlf = 0;\n    let isBasicASCII = true;\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chr = str.charCodeAt(i);\n        if (chr === 13 /* CarriageReturn */) {\n            if (i + 1 < len && str.charCodeAt(i + 1) === 10 /* LineFeed */) {\n                // \\r\\n... case\n                crlf++;\n                r[rLength++] = i + 2;\n                i++; // skip \\n\n            }\n            else {\n                cr++;\n                // \\r... case\n                r[rLength++] = i + 1;\n            }\n        }\n        else if (chr === 10 /* LineFeed */) {\n            lf++;\n            r[rLength++] = i + 1;\n        }\n        else {\n            if (isBasicASCII) {\n                if (chr !== 9 /* Tab */ && (chr < 32 || chr > 126)) {\n                    isBasicASCII = false;\n                }\n            }\n        }\n    }\n    const result = new LineStarts(createUintArray(r), cr, lf, crlf, isBasicASCII);\n    r.length = 0;\n    return result;\n}\nexport class Piece {\n    constructor(bufferIndex, start, end, lineFeedCnt, length) {\n        this.bufferIndex = bufferIndex;\n        this.start = start;\n        this.end = end;\n        this.lineFeedCnt = lineFeedCnt;\n        this.length = length;\n    }\n}\nexport class StringBuffer {\n    constructor(buffer, lineStarts) {\n        this.buffer = buffer;\n        this.lineStarts = lineStarts;\n    }\n}\n/**\n * Readonly snapshot for piece tree.\n * In a real multiple thread environment, to make snapshot reading always work correctly, we need to\n * 1. Make TreeNode.piece immutable, then reading and writing can run in parallel.\n * 2. TreeNode/Buffers normalization should not happen during snapshot reading.\n */\nclass PieceTreeSnapshot {\n    constructor(tree, BOM) {\n        this._pieces = [];\n        this._tree = tree;\n        this._BOM = BOM;\n        this._index = 0;\n        if (tree.root !== SENTINEL) {\n            tree.iterate(tree.root, node => {\n                if (node !== SENTINEL) {\n                    this._pieces.push(node.piece);\n                }\n                return true;\n            });\n        }\n    }\n    read() {\n        if (this._pieces.length === 0) {\n            if (this._index === 0) {\n                this._index++;\n                return this._BOM;\n            }\n            else {\n                return null;\n            }\n        }\n        if (this._index > this._pieces.length - 1) {\n            return null;\n        }\n        if (this._index === 0) {\n            return this._BOM + this._tree.getPieceContent(this._pieces[this._index++]);\n        }\n        return this._tree.getPieceContent(this._pieces[this._index++]);\n    }\n}\nclass PieceTreeSearchCache {\n    constructor(limit) {\n        this._limit = limit;\n        this._cache = [];\n    }\n    get(offset) {\n        for (let i = this._cache.length - 1; i >= 0; i--) {\n            const nodePos = this._cache[i];\n            if (nodePos.nodeStartOffset <= offset && nodePos.nodeStartOffset + nodePos.node.piece.length >= offset) {\n                return nodePos;\n            }\n        }\n        return null;\n    }\n    get2(lineNumber) {\n        for (let i = this._cache.length - 1; i >= 0; i--) {\n            const nodePos = this._cache[i];\n            if (nodePos.nodeStartLineNumber && nodePos.nodeStartLineNumber < lineNumber && nodePos.nodeStartLineNumber + nodePos.node.piece.lineFeedCnt >= lineNumber) {\n                return nodePos;\n            }\n        }\n        return null;\n    }\n    set(nodePosition) {\n        if (this._cache.length >= this._limit) {\n            this._cache.shift();\n        }\n        this._cache.push(nodePosition);\n    }\n    validate(offset) {\n        let hasInvalidVal = false;\n        const tmp = this._cache;\n        for (let i = 0; i < tmp.length; i++) {\n            const nodePos = tmp[i];\n            if (nodePos.node.parent === null || nodePos.nodeStartOffset >= offset) {\n                tmp[i] = null;\n                hasInvalidVal = true;\n                continue;\n            }\n        }\n        if (hasInvalidVal) {\n            const newArr = [];\n            for (const entry of tmp) {\n                if (entry !== null) {\n                    newArr.push(entry);\n                }\n            }\n            this._cache = newArr;\n        }\n    }\n}\nexport class PieceTreeBase {\n    constructor(chunks, eol, eolNormalized) {\n        this.create(chunks, eol, eolNormalized);\n    }\n    create(chunks, eol, eolNormalized) {\n        this._buffers = [\n            new StringBuffer('', [0])\n        ];\n        this._lastChangeBufferPos = { line: 0, column: 0 };\n        this.root = SENTINEL;\n        this._lineCnt = 1;\n        this._length = 0;\n        this._EOL = eol;\n        this._EOLLength = eol.length;\n        this._EOLNormalized = eolNormalized;\n        let lastNode = null;\n        for (let i = 0, len = chunks.length; i < len; i++) {\n            if (chunks[i].buffer.length > 0) {\n                if (!chunks[i].lineStarts) {\n                    chunks[i].lineStarts = createLineStartsFast(chunks[i].buffer);\n                }\n                const piece = new Piece(i + 1, { line: 0, column: 0 }, { line: chunks[i].lineStarts.length - 1, column: chunks[i].buffer.length - chunks[i].lineStarts[chunks[i].lineStarts.length - 1] }, chunks[i].lineStarts.length - 1, chunks[i].buffer.length);\n                this._buffers.push(chunks[i]);\n                lastNode = this.rbInsertRight(lastNode, piece);\n            }\n        }\n        this._searchCache = new PieceTreeSearchCache(1);\n        this._lastVisitedLine = { lineNumber: 0, value: '' };\n        this.computeBufferMetadata();\n    }\n    normalizeEOL(eol) {\n        const averageBufferSize = AverageBufferSize;\n        const min = averageBufferSize - Math.floor(averageBufferSize / 3);\n        const max = min * 2;\n        let tempChunk = '';\n        let tempChunkLen = 0;\n        const chunks = [];\n        this.iterate(this.root, node => {\n            const str = this.getNodeContent(node);\n            const len = str.length;\n            if (tempChunkLen <= min || tempChunkLen + len < max) {\n                tempChunk += str;\n                tempChunkLen += len;\n                return true;\n            }\n            // flush anyways\n            const text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n            chunks.push(new StringBuffer(text, createLineStartsFast(text)));\n            tempChunk = str;\n            tempChunkLen = len;\n            return true;\n        });\n        if (tempChunkLen > 0) {\n            const text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n            chunks.push(new StringBuffer(text, createLineStartsFast(text)));\n        }\n        this.create(chunks, eol, true);\n    }\n    // #region Buffer API\n    getEOL() {\n        return this._EOL;\n    }\n    setEOL(newEOL) {\n        this._EOL = newEOL;\n        this._EOLLength = this._EOL.length;\n        this.normalizeEOL(newEOL);\n    }\n    createSnapshot(BOM) {\n        return new PieceTreeSnapshot(this, BOM);\n    }\n    getOffsetAt(lineNumber, column) {\n        let leftLen = 0; // inorder\n        let x = this.root;\n        while (x !== SENTINEL) {\n            if (x.left !== SENTINEL && x.lf_left + 1 >= lineNumber) {\n                x = x.left;\n            }\n            else if (x.lf_left + x.piece.lineFeedCnt + 1 >= lineNumber) {\n                leftLen += x.size_left;\n                // lineNumber >= 2\n                const accumualtedValInCurrentIndex = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n                return leftLen += accumualtedValInCurrentIndex + column - 1;\n            }\n            else {\n                lineNumber -= x.lf_left + x.piece.lineFeedCnt;\n                leftLen += x.size_left + x.piece.length;\n                x = x.right;\n            }\n        }\n        return leftLen;\n    }\n    getPositionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        let x = this.root;\n        let lfCnt = 0;\n        const originalOffset = offset;\n        while (x !== SENTINEL) {\n            if (x.size_left !== 0 && x.size_left >= offset) {\n                x = x.left;\n            }\n            else if (x.size_left + x.piece.length >= offset) {\n                const out = this.getIndexOf(x, offset - x.size_left);\n                lfCnt += x.lf_left + out.index;\n                if (out.index === 0) {\n                    const lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n                    const column = originalOffset - lineStartOffset;\n                    return new Position(lfCnt + 1, column + 1);\n                }\n                return new Position(lfCnt + 1, out.remainder + 1);\n            }\n            else {\n                offset -= x.size_left + x.piece.length;\n                lfCnt += x.lf_left + x.piece.lineFeedCnt;\n                if (x.right === SENTINEL) {\n                    // last node\n                    const lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n                    const column = originalOffset - offset - lineStartOffset;\n                    return new Position(lfCnt + 1, column + 1);\n                }\n                else {\n                    x = x.right;\n                }\n            }\n        }\n        return new Position(1, 1);\n    }\n    getValueInRange(range, eol) {\n        if (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n            return '';\n        }\n        const startPosition = this.nodeAt2(range.startLineNumber, range.startColumn);\n        const endPosition = this.nodeAt2(range.endLineNumber, range.endColumn);\n        const value = this.getValueInRange2(startPosition, endPosition);\n        if (eol) {\n            if (eol !== this._EOL || !this._EOLNormalized) {\n                return value.replace(/\\r\\n|\\r|\\n/g, eol);\n            }\n            if (eol === this.getEOL() && this._EOLNormalized) {\n                if (eol === '\\r\\n') {\n                }\n                return value;\n            }\n            return value.replace(/\\r\\n|\\r|\\n/g, eol);\n        }\n        return value;\n    }\n    getValueInRange2(startPosition, endPosition) {\n        if (startPosition.node === endPosition.node) {\n            const node = startPosition.node;\n            const buffer = this._buffers[node.piece.bufferIndex].buffer;\n            const startOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n            return buffer.substring(startOffset + startPosition.remainder, startOffset + endPosition.remainder);\n        }\n        let x = startPosition.node;\n        const buffer = this._buffers[x.piece.bufferIndex].buffer;\n        const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n        let ret = buffer.substring(startOffset + startPosition.remainder, startOffset + x.piece.length);\n        x = x.next();\n        while (x !== SENTINEL) {\n            const buffer = this._buffers[x.piece.bufferIndex].buffer;\n            const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n            if (x === endPosition.node) {\n                ret += buffer.substring(startOffset, startOffset + endPosition.remainder);\n                break;\n            }\n            else {\n                ret += buffer.substr(startOffset, x.piece.length);\n            }\n            x = x.next();\n        }\n        return ret;\n    }\n    getLinesContent() {\n        const lines = [];\n        let linesLength = 0;\n        let currentLine = '';\n        let danglingCR = false;\n        this.iterate(this.root, node => {\n            if (node === SENTINEL) {\n                return true;\n            }\n            const piece = node.piece;\n            let pieceLength = piece.length;\n            if (pieceLength === 0) {\n                return true;\n            }\n            const buffer = this._buffers[piece.bufferIndex].buffer;\n            const lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n            const pieceStartLine = piece.start.line;\n            const pieceEndLine = piece.end.line;\n            let pieceStartOffset = lineStarts[pieceStartLine] + piece.start.column;\n            if (danglingCR) {\n                if (buffer.charCodeAt(pieceStartOffset) === 10 /* LineFeed */) {\n                    // pretend the \\n was in the previous piece..\n                    pieceStartOffset++;\n                    pieceLength--;\n                }\n                lines[linesLength++] = currentLine;\n                currentLine = '';\n                danglingCR = false;\n                if (pieceLength === 0) {\n                    return true;\n                }\n            }\n            if (pieceStartLine === pieceEndLine) {\n                // this piece has no new lines\n                if (!this._EOLNormalized && buffer.charCodeAt(pieceStartOffset + pieceLength - 1) === 13 /* CarriageReturn */) {\n                    danglingCR = true;\n                    currentLine += buffer.substr(pieceStartOffset, pieceLength - 1);\n                }\n                else {\n                    currentLine += buffer.substr(pieceStartOffset, pieceLength);\n                }\n                return true;\n            }\n            // add the text before the first line start in this piece\n            currentLine += (this._EOLNormalized\n                ? buffer.substring(pieceStartOffset, Math.max(pieceStartOffset, lineStarts[pieceStartLine + 1] - this._EOLLength))\n                : buffer.substring(pieceStartOffset, lineStarts[pieceStartLine + 1]).replace(/(\\r\\n|\\r|\\n)$/, ''));\n            lines[linesLength++] = currentLine;\n            for (let line = pieceStartLine + 1; line < pieceEndLine; line++) {\n                currentLine = (this._EOLNormalized\n                    ? buffer.substring(lineStarts[line], lineStarts[line + 1] - this._EOLLength)\n                    : buffer.substring(lineStarts[line], lineStarts[line + 1]).replace(/(\\r\\n|\\r|\\n)$/, ''));\n                lines[linesLength++] = currentLine;\n            }\n            if (!this._EOLNormalized && buffer.charCodeAt(lineStarts[pieceEndLine] + piece.end.column - 1) === 13 /* CarriageReturn */) {\n                danglingCR = true;\n                if (piece.end.column === 0) {\n                    // The last line ended with a \\r, let's undo the push, it will be pushed by next iteration\n                    linesLength--;\n                }\n                else {\n                    currentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column - 1);\n                }\n            }\n            else {\n                currentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column);\n            }\n            return true;\n        });\n        if (danglingCR) {\n            lines[linesLength++] = currentLine;\n            currentLine = '';\n        }\n        lines[linesLength++] = currentLine;\n        return lines;\n    }\n    getLength() {\n        return this._length;\n    }\n    getLineCount() {\n        return this._lineCnt;\n    }\n    getLineContent(lineNumber) {\n        if (this._lastVisitedLine.lineNumber === lineNumber) {\n            return this._lastVisitedLine.value;\n        }\n        this._lastVisitedLine.lineNumber = lineNumber;\n        if (lineNumber === this._lineCnt) {\n            this._lastVisitedLine.value = this.getLineRawContent(lineNumber);\n        }\n        else if (this._EOLNormalized) {\n            this._lastVisitedLine.value = this.getLineRawContent(lineNumber, this._EOLLength);\n        }\n        else {\n            this._lastVisitedLine.value = this.getLineRawContent(lineNumber).replace(/(\\r\\n|\\r|\\n)$/, '');\n        }\n        return this._lastVisitedLine.value;\n    }\n    _getCharCode(nodePos) {\n        if (nodePos.remainder === nodePos.node.piece.length) {\n            // the char we want to fetch is at the head of next node.\n            const matchingNode = nodePos.node.next();\n            if (!matchingNode) {\n                return 0;\n            }\n            const buffer = this._buffers[matchingNode.piece.bufferIndex];\n            const startOffset = this.offsetInBuffer(matchingNode.piece.bufferIndex, matchingNode.piece.start);\n            return buffer.buffer.charCodeAt(startOffset);\n        }\n        else {\n            const buffer = this._buffers[nodePos.node.piece.bufferIndex];\n            const startOffset = this.offsetInBuffer(nodePos.node.piece.bufferIndex, nodePos.node.piece.start);\n            const targetOffset = startOffset + nodePos.remainder;\n            return buffer.buffer.charCodeAt(targetOffset);\n        }\n    }\n    getLineCharCode(lineNumber, index) {\n        const nodePos = this.nodeAt2(lineNumber, index + 1);\n        return this._getCharCode(nodePos);\n    }\n    getLineLength(lineNumber) {\n        if (lineNumber === this.getLineCount()) {\n            const startOffset = this.getOffsetAt(lineNumber, 1);\n            return this.getLength() - startOffset;\n        }\n        return this.getOffsetAt(lineNumber + 1, 1) - this.getOffsetAt(lineNumber, 1) - this._EOLLength;\n    }\n    findMatchesInNode(node, searcher, startLineNumber, startColumn, startCursor, endCursor, searchData, captureMatches, limitResultCount, resultLen, result) {\n        const buffer = this._buffers[node.piece.bufferIndex];\n        const startOffsetInBuffer = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n        const start = this.offsetInBuffer(node.piece.bufferIndex, startCursor);\n        const end = this.offsetInBuffer(node.piece.bufferIndex, endCursor);\n        let m;\n        // Reset regex to search from the beginning\n        const ret = { line: 0, column: 0 };\n        let searchText;\n        let offsetInBuffer;\n        if (searcher._wordSeparators) {\n            searchText = buffer.buffer.substring(start, end);\n            offsetInBuffer = (offset) => offset + start;\n            searcher.reset(0);\n        }\n        else {\n            searchText = buffer.buffer;\n            offsetInBuffer = (offset) => offset;\n            searcher.reset(start);\n        }\n        do {\n            m = searcher.next(searchText);\n            if (m) {\n                if (offsetInBuffer(m.index) >= end) {\n                    return resultLen;\n                }\n                this.positionInBuffer(node, offsetInBuffer(m.index) - startOffsetInBuffer, ret);\n                const lineFeedCnt = this.getLineFeedCnt(node.piece.bufferIndex, startCursor, ret);\n                const retStartColumn = ret.line === startCursor.line ? ret.column - startCursor.column + startColumn : ret.column + 1;\n                const retEndColumn = retStartColumn + m[0].length;\n                result[resultLen++] = createFindMatch(new Range(startLineNumber + lineFeedCnt, retStartColumn, startLineNumber + lineFeedCnt, retEndColumn), m, captureMatches);\n                if (offsetInBuffer(m.index) + m[0].length >= end) {\n                    return resultLen;\n                }\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount) {\n        const result = [];\n        let resultLen = 0;\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        let startPosition = this.nodeAt2(searchRange.startLineNumber, searchRange.startColumn);\n        if (startPosition === null) {\n            return [];\n        }\n        const endPosition = this.nodeAt2(searchRange.endLineNumber, searchRange.endColumn);\n        if (endPosition === null) {\n            return [];\n        }\n        let start = this.positionInBuffer(startPosition.node, startPosition.remainder);\n        const end = this.positionInBuffer(endPosition.node, endPosition.remainder);\n        if (startPosition.node === endPosition.node) {\n            this.findMatchesInNode(startPosition.node, searcher, searchRange.startLineNumber, searchRange.startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n            return result;\n        }\n        let startLineNumber = searchRange.startLineNumber;\n        let currentNode = startPosition.node;\n        while (currentNode !== endPosition.node) {\n            const lineBreakCnt = this.getLineFeedCnt(currentNode.piece.bufferIndex, start, currentNode.piece.end);\n            if (lineBreakCnt >= 1) {\n                // last line break position\n                const lineStarts = this._buffers[currentNode.piece.bufferIndex].lineStarts;\n                const startOffsetInBuffer = this.offsetInBuffer(currentNode.piece.bufferIndex, currentNode.piece.start);\n                const nextLineStartOffset = lineStarts[start.line + lineBreakCnt];\n                const startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n                resultLen = this.findMatchesInNode(currentNode, searcher, startLineNumber, startColumn, start, this.positionInBuffer(currentNode, nextLineStartOffset - startOffsetInBuffer), searchData, captureMatches, limitResultCount, resultLen, result);\n                if (resultLen >= limitResultCount) {\n                    return result;\n                }\n                startLineNumber += lineBreakCnt;\n            }\n            const startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n            // search for the remaining content\n            if (startLineNumber === searchRange.endLineNumber) {\n                const text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n                resultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n                return result;\n            }\n            resultLen = this._findMatchesInLine(searchData, searcher, this.getLineContent(startLineNumber).substr(startColumn), startLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n            if (resultLen >= limitResultCount) {\n                return result;\n            }\n            startLineNumber++;\n            startPosition = this.nodeAt2(startLineNumber, 1);\n            currentNode = startPosition.node;\n            start = this.positionInBuffer(startPosition.node, startPosition.remainder);\n        }\n        if (startLineNumber === searchRange.endLineNumber) {\n            const startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n            const text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n            return result;\n        }\n        const startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n        resultLen = this.findMatchesInNode(endPosition.node, searcher, startLineNumber, startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n        return result;\n    }\n    _findMatchesInLine(searchData, searcher, text, lineNumber, deltaOffset, resultLen, result, captureMatches, limitResultCount) {\n        const wordSeparators = searchData.wordSeparators;\n        if (!captureMatches && searchData.simpleSearch) {\n            const searchString = searchData.simpleSearch;\n            const searchStringLen = searchString.length;\n            const textLength = text.length;\n            let lastMatchIndex = -searchStringLen;\n            while ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n                if (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n                    result[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n                    if (resultLen >= limitResultCount) {\n                        return resultLen;\n                    }\n                }\n            }\n            return resultLen;\n        }\n        let m;\n        // Reset regex to search from the beginning\n        searcher.reset(0);\n        do {\n            m = searcher.next(text);\n            if (m) {\n                result[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    // #endregion\n    // #region Piece Table\n    insert(offset, value, eolNormalized = false) {\n        this._EOLNormalized = this._EOLNormalized && eolNormalized;\n        this._lastVisitedLine.lineNumber = 0;\n        this._lastVisitedLine.value = '';\n        if (this.root !== SENTINEL) {\n            const { node, remainder, nodeStartOffset } = this.nodeAt(offset);\n            const piece = node.piece;\n            const bufferIndex = piece.bufferIndex;\n            const insertPosInBuffer = this.positionInBuffer(node, remainder);\n            if (node.piece.bufferIndex === 0 &&\n                piece.end.line === this._lastChangeBufferPos.line &&\n                piece.end.column === this._lastChangeBufferPos.column &&\n                (nodeStartOffset + piece.length === offset) &&\n                value.length < AverageBufferSize) {\n                // changed buffer\n                this.appendToNode(node, value);\n                this.computeBufferMetadata();\n                return;\n            }\n            if (nodeStartOffset === offset) {\n                this.insertContentToNodeLeft(value, node);\n                this._searchCache.validate(offset);\n            }\n            else if (nodeStartOffset + node.piece.length > offset) {\n                // we are inserting into the middle of a node.\n                const nodesToDel = [];\n                let newRightPiece = new Piece(piece.bufferIndex, insertPosInBuffer, piece.end, this.getLineFeedCnt(piece.bufferIndex, insertPosInBuffer, piece.end), this.offsetInBuffer(bufferIndex, piece.end) - this.offsetInBuffer(bufferIndex, insertPosInBuffer));\n                if (this.shouldCheckCRLF() && this.endWithCR(value)) {\n                    const headOfRight = this.nodeCharCodeAt(node, remainder);\n                    if (headOfRight === 10 /** \\n */) {\n                        const newStart = { line: newRightPiece.start.line + 1, column: 0 };\n                        newRightPiece = new Piece(newRightPiece.bufferIndex, newStart, newRightPiece.end, this.getLineFeedCnt(newRightPiece.bufferIndex, newStart, newRightPiece.end), newRightPiece.length - 1);\n                        value += '\\n';\n                    }\n                }\n                // reuse node for content before insertion point.\n                if (this.shouldCheckCRLF() && this.startWithLF(value)) {\n                    const tailOfLeft = this.nodeCharCodeAt(node, remainder - 1);\n                    if (tailOfLeft === 13 /** \\r */) {\n                        const previousPos = this.positionInBuffer(node, remainder - 1);\n                        this.deleteNodeTail(node, previousPos);\n                        value = '\\r' + value;\n                        if (node.piece.length === 0) {\n                            nodesToDel.push(node);\n                        }\n                    }\n                    else {\n                        this.deleteNodeTail(node, insertPosInBuffer);\n                    }\n                }\n                else {\n                    this.deleteNodeTail(node, insertPosInBuffer);\n                }\n                const newPieces = this.createNewPieces(value);\n                if (newRightPiece.length > 0) {\n                    this.rbInsertRight(node, newRightPiece);\n                }\n                let tmpNode = node;\n                for (let k = 0; k < newPieces.length; k++) {\n                    tmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n                }\n                this.deleteNodes(nodesToDel);\n            }\n            else {\n                this.insertContentToNodeRight(value, node);\n            }\n        }\n        else {\n            // insert new node\n            const pieces = this.createNewPieces(value);\n            let node = this.rbInsertLeft(null, pieces[0]);\n            for (let k = 1; k < pieces.length; k++) {\n                node = this.rbInsertRight(node, pieces[k]);\n            }\n        }\n        // todo, this is too brutal. Total line feed count should be updated the same way as lf_left.\n        this.computeBufferMetadata();\n    }\n    delete(offset, cnt) {\n        this._lastVisitedLine.lineNumber = 0;\n        this._lastVisitedLine.value = '';\n        if (cnt <= 0 || this.root === SENTINEL) {\n            return;\n        }\n        const startPosition = this.nodeAt(offset);\n        const endPosition = this.nodeAt(offset + cnt);\n        const startNode = startPosition.node;\n        const endNode = endPosition.node;\n        if (startNode === endNode) {\n            const startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n            const endSplitPosInBuffer = this.positionInBuffer(startNode, endPosition.remainder);\n            if (startPosition.nodeStartOffset === offset) {\n                if (cnt === startNode.piece.length) { // delete node\n                    const next = startNode.next();\n                    rbDelete(this, startNode);\n                    this.validateCRLFWithPrevNode(next);\n                    this.computeBufferMetadata();\n                    return;\n                }\n                this.deleteNodeHead(startNode, endSplitPosInBuffer);\n                this._searchCache.validate(offset);\n                this.validateCRLFWithPrevNode(startNode);\n                this.computeBufferMetadata();\n                return;\n            }\n            if (startPosition.nodeStartOffset + startNode.piece.length === offset + cnt) {\n                this.deleteNodeTail(startNode, startSplitPosInBuffer);\n                this.validateCRLFWithNextNode(startNode);\n                this.computeBufferMetadata();\n                return;\n            }\n            // delete content in the middle, this node will be splitted to nodes\n            this.shrinkNode(startNode, startSplitPosInBuffer, endSplitPosInBuffer);\n            this.computeBufferMetadata();\n            return;\n        }\n        const nodesToDel = [];\n        const startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n        this.deleteNodeTail(startNode, startSplitPosInBuffer);\n        this._searchCache.validate(offset);\n        if (startNode.piece.length === 0) {\n            nodesToDel.push(startNode);\n        }\n        // update last touched node\n        const endSplitPosInBuffer = this.positionInBuffer(endNode, endPosition.remainder);\n        this.deleteNodeHead(endNode, endSplitPosInBuffer);\n        if (endNode.piece.length === 0) {\n            nodesToDel.push(endNode);\n        }\n        // delete nodes in between\n        const secondNode = startNode.next();\n        for (let node = secondNode; node !== SENTINEL && node !== endNode; node = node.next()) {\n            nodesToDel.push(node);\n        }\n        const prev = startNode.piece.length === 0 ? startNode.prev() : startNode;\n        this.deleteNodes(nodesToDel);\n        this.validateCRLFWithNextNode(prev);\n        this.computeBufferMetadata();\n    }\n    insertContentToNodeLeft(value, node) {\n        // we are inserting content to the beginning of node\n        const nodesToDel = [];\n        if (this.shouldCheckCRLF() && this.endWithCR(value) && this.startWithLF(node)) {\n            // move `\\n` to new node.\n            const piece = node.piece;\n            const newStart = { line: piece.start.line + 1, column: 0 };\n            const nPiece = new Piece(piece.bufferIndex, newStart, piece.end, this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end), piece.length - 1);\n            node.piece = nPiece;\n            value += '\\n';\n            updateTreeMetadata(this, node, -1, -1);\n            if (node.piece.length === 0) {\n                nodesToDel.push(node);\n            }\n        }\n        const newPieces = this.createNewPieces(value);\n        let newNode = this.rbInsertLeft(node, newPieces[newPieces.length - 1]);\n        for (let k = newPieces.length - 2; k >= 0; k--) {\n            newNode = this.rbInsertLeft(newNode, newPieces[k]);\n        }\n        this.validateCRLFWithPrevNode(newNode);\n        this.deleteNodes(nodesToDel);\n    }\n    insertContentToNodeRight(value, node) {\n        // we are inserting to the right of this node.\n        if (this.adjustCarriageReturnFromNext(value, node)) {\n            // move \\n to the new node.\n            value += '\\n';\n        }\n        const newPieces = this.createNewPieces(value);\n        const newNode = this.rbInsertRight(node, newPieces[0]);\n        let tmpNode = newNode;\n        for (let k = 1; k < newPieces.length; k++) {\n            tmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n        }\n        this.validateCRLFWithPrevNode(newNode);\n    }\n    positionInBuffer(node, remainder, ret) {\n        const piece = node.piece;\n        const bufferIndex = node.piece.bufferIndex;\n        const lineStarts = this._buffers[bufferIndex].lineStarts;\n        const startOffset = lineStarts[piece.start.line] + piece.start.column;\n        const offset = startOffset + remainder;\n        // binary search offset between startOffset and endOffset\n        let low = piece.start.line;\n        let high = piece.end.line;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStart = lineStarts[mid];\n            if (mid === high) {\n                break;\n            }\n            midStop = lineStarts[mid + 1];\n            if (offset < midStart) {\n                high = mid - 1;\n            }\n            else if (offset >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        if (ret) {\n            ret.line = mid;\n            ret.column = offset - midStart;\n            return null;\n        }\n        return {\n            line: mid,\n            column: offset - midStart\n        };\n    }\n    getLineFeedCnt(bufferIndex, start, end) {\n        // we don't need to worry about start: abc\\r|\\n, or abc|\\r, or abc|\\n, or abc|\\r\\n doesn't change the fact that, there is one line break after start.\n        // now let's take care of end: abc\\r|\\n, if end is in between \\r and \\n, we need to add line feed count by 1\n        if (end.column === 0) {\n            return end.line - start.line;\n        }\n        const lineStarts = this._buffers[bufferIndex].lineStarts;\n        if (end.line === lineStarts.length - 1) { // it means, there is no \\n after end, otherwise, there will be one more lineStart.\n            return end.line - start.line;\n        }\n        const nextLineStartOffset = lineStarts[end.line + 1];\n        const endOffset = lineStarts[end.line] + end.column;\n        if (nextLineStartOffset > endOffset + 1) { // there are more than 1 character after end, which means it can't be \\n\n            return end.line - start.line;\n        }\n        // endOffset + 1 === nextLineStartOffset\n        // character at endOffset is \\n, so we check the character before first\n        // if character at endOffset is \\r, end.column is 0 and we can't get here.\n        const previousCharOffset = endOffset - 1; // end.column > 0 so it's okay.\n        const buffer = this._buffers[bufferIndex].buffer;\n        if (buffer.charCodeAt(previousCharOffset) === 13) {\n            return end.line - start.line + 1;\n        }\n        else {\n            return end.line - start.line;\n        }\n    }\n    offsetInBuffer(bufferIndex, cursor) {\n        const lineStarts = this._buffers[bufferIndex].lineStarts;\n        return lineStarts[cursor.line] + cursor.column;\n    }\n    deleteNodes(nodes) {\n        for (let i = 0; i < nodes.length; i++) {\n            rbDelete(this, nodes[i]);\n        }\n    }\n    createNewPieces(text) {\n        if (text.length > AverageBufferSize) {\n            // the content is large, operations like substring, charCode becomes slow\n            // so here we split it into smaller chunks, just like what we did for CR/LF normalization\n            const newPieces = [];\n            while (text.length > AverageBufferSize) {\n                const lastChar = text.charCodeAt(AverageBufferSize - 1);\n                let splitText;\n                if (lastChar === 13 /* CarriageReturn */ || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n                    // last character is \\r or a high surrogate => keep it back\n                    splitText = text.substring(0, AverageBufferSize - 1);\n                    text = text.substring(AverageBufferSize - 1);\n                }\n                else {\n                    splitText = text.substring(0, AverageBufferSize);\n                    text = text.substring(AverageBufferSize);\n                }\n                const lineStarts = createLineStartsFast(splitText);\n                newPieces.push(new Piece(this._buffers.length, /* buffer index */ { line: 0, column: 0 }, { line: lineStarts.length - 1, column: splitText.length - lineStarts[lineStarts.length - 1] }, lineStarts.length - 1, splitText.length));\n                this._buffers.push(new StringBuffer(splitText, lineStarts));\n            }\n            const lineStarts = createLineStartsFast(text);\n            newPieces.push(new Piece(this._buffers.length, /* buffer index */ { line: 0, column: 0 }, { line: lineStarts.length - 1, column: text.length - lineStarts[lineStarts.length - 1] }, lineStarts.length - 1, text.length));\n            this._buffers.push(new StringBuffer(text, lineStarts));\n            return newPieces;\n        }\n        let startOffset = this._buffers[0].buffer.length;\n        const lineStarts = createLineStartsFast(text, false);\n        let start = this._lastChangeBufferPos;\n        if (this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 1] === startOffset\n            && startOffset !== 0\n            && this.startWithLF(text)\n            && this.endWithCR(this._buffers[0].buffer) // todo, we can check this._lastChangeBufferPos's column as it's the last one\n        ) {\n            this._lastChangeBufferPos = { line: this._lastChangeBufferPos.line, column: this._lastChangeBufferPos.column + 1 };\n            start = this._lastChangeBufferPos;\n            for (let i = 0; i < lineStarts.length; i++) {\n                lineStarts[i] += startOffset + 1;\n            }\n            this._buffers[0].lineStarts = this._buffers[0].lineStarts.concat(lineStarts.slice(1));\n            this._buffers[0].buffer += '_' + text;\n            startOffset += 1;\n        }\n        else {\n            if (startOffset !== 0) {\n                for (let i = 0; i < lineStarts.length; i++) {\n                    lineStarts[i] += startOffset;\n                }\n            }\n            this._buffers[0].lineStarts = this._buffers[0].lineStarts.concat(lineStarts.slice(1));\n            this._buffers[0].buffer += text;\n        }\n        const endOffset = this._buffers[0].buffer.length;\n        const endIndex = this._buffers[0].lineStarts.length - 1;\n        const endColumn = endOffset - this._buffers[0].lineStarts[endIndex];\n        const endPos = { line: endIndex, column: endColumn };\n        const newPiece = new Piece(0, /** todo@peng */ start, endPos, this.getLineFeedCnt(0, start, endPos), endOffset - startOffset);\n        this._lastChangeBufferPos = endPos;\n        return [newPiece];\n    }\n    getLineRawContent(lineNumber, endOffset = 0) {\n        let x = this.root;\n        let ret = '';\n        const cache = this._searchCache.get2(lineNumber);\n        if (cache) {\n            x = cache.node;\n            const prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber - 1);\n            const buffer = this._buffers[x.piece.bufferIndex].buffer;\n            const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n            if (cache.nodeStartLineNumber + x.piece.lineFeedCnt === lineNumber) {\n                ret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n            }\n            else {\n                const accumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber);\n                return buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n            }\n        }\n        else {\n            let nodeStartOffset = 0;\n            const originalLineNumber = lineNumber;\n            while (x !== SENTINEL) {\n                if (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n                    x = x.left;\n                }\n                else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n                    const prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n                    const accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n                    const buffer = this._buffers[x.piece.bufferIndex].buffer;\n                    const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n                    nodeStartOffset += x.size_left;\n                    this._searchCache.set({\n                        node: x,\n                        nodeStartOffset,\n                        nodeStartLineNumber: originalLineNumber - (lineNumber - 1 - x.lf_left)\n                    });\n                    return buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n                }\n                else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n                    const prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n                    const buffer = this._buffers[x.piece.bufferIndex].buffer;\n                    const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n                    ret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n                    break;\n                }\n                else {\n                    lineNumber -= x.lf_left + x.piece.lineFeedCnt;\n                    nodeStartOffset += x.size_left + x.piece.length;\n                    x = x.right;\n                }\n            }\n        }\n        // search in order, to find the node contains end column\n        x = x.next();\n        while (x !== SENTINEL) {\n            const buffer = this._buffers[x.piece.bufferIndex].buffer;\n            if (x.piece.lineFeedCnt > 0) {\n                const accumulatedValue = this.getAccumulatedValue(x, 0);\n                const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n                ret += buffer.substring(startOffset, startOffset + accumulatedValue - endOffset);\n                return ret;\n            }\n            else {\n                const startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n                ret += buffer.substr(startOffset, x.piece.length);\n            }\n            x = x.next();\n        }\n        return ret;\n    }\n    computeBufferMetadata() {\n        let x = this.root;\n        let lfCnt = 1;\n        let len = 0;\n        while (x !== SENTINEL) {\n            lfCnt += x.lf_left + x.piece.lineFeedCnt;\n            len += x.size_left + x.piece.length;\n            x = x.right;\n        }\n        this._lineCnt = lfCnt;\n        this._length = len;\n        this._searchCache.validate(this._length);\n    }\n    // #region node operations\n    getIndexOf(node, accumulatedValue) {\n        const piece = node.piece;\n        const pos = this.positionInBuffer(node, accumulatedValue);\n        const lineCnt = pos.line - piece.start.line;\n        if (this.offsetInBuffer(piece.bufferIndex, piece.end) - this.offsetInBuffer(piece.bufferIndex, piece.start) === accumulatedValue) {\n            // we are checking the end of this node, so a CRLF check is necessary.\n            const realLineCnt = this.getLineFeedCnt(node.piece.bufferIndex, piece.start, pos);\n            if (realLineCnt !== lineCnt) {\n                // aha yes, CRLF\n                return { index: realLineCnt, remainder: 0 };\n            }\n        }\n        return { index: lineCnt, remainder: pos.column };\n    }\n    getAccumulatedValue(node, index) {\n        if (index < 0) {\n            return 0;\n        }\n        const piece = node.piece;\n        const lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n        const expectedLineStartIndex = piece.start.line + index + 1;\n        if (expectedLineStartIndex > piece.end.line) {\n            return lineStarts[piece.end.line] + piece.end.column - lineStarts[piece.start.line] - piece.start.column;\n        }\n        else {\n            return lineStarts[expectedLineStartIndex] - lineStarts[piece.start.line] - piece.start.column;\n        }\n    }\n    deleteNodeTail(node, pos) {\n        const piece = node.piece;\n        const originalLFCnt = piece.lineFeedCnt;\n        const originalEndOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n        const newEnd = pos;\n        const newEndOffset = this.offsetInBuffer(piece.bufferIndex, newEnd);\n        const newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n        const lf_delta = newLineFeedCnt - originalLFCnt;\n        const size_delta = newEndOffset - originalEndOffset;\n        const newLength = piece.length + size_delta;\n        node.piece = new Piece(piece.bufferIndex, piece.start, newEnd, newLineFeedCnt, newLength);\n        updateTreeMetadata(this, node, size_delta, lf_delta);\n    }\n    deleteNodeHead(node, pos) {\n        const piece = node.piece;\n        const originalLFCnt = piece.lineFeedCnt;\n        const originalStartOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n        const newStart = pos;\n        const newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n        const newStartOffset = this.offsetInBuffer(piece.bufferIndex, newStart);\n        const lf_delta = newLineFeedCnt - originalLFCnt;\n        const size_delta = originalStartOffset - newStartOffset;\n        const newLength = piece.length + size_delta;\n        node.piece = new Piece(piece.bufferIndex, newStart, piece.end, newLineFeedCnt, newLength);\n        updateTreeMetadata(this, node, size_delta, lf_delta);\n    }\n    shrinkNode(node, start, end) {\n        const piece = node.piece;\n        const originalStartPos = piece.start;\n        const originalEndPos = piece.end;\n        // old piece, originalStartPos, start\n        const oldLength = piece.length;\n        const oldLFCnt = piece.lineFeedCnt;\n        const newEnd = start;\n        const newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n        const newLength = this.offsetInBuffer(piece.bufferIndex, start) - this.offsetInBuffer(piece.bufferIndex, originalStartPos);\n        node.piece = new Piece(piece.bufferIndex, piece.start, newEnd, newLineFeedCnt, newLength);\n        updateTreeMetadata(this, node, newLength - oldLength, newLineFeedCnt - oldLFCnt);\n        // new right piece, end, originalEndPos\n        const newPiece = new Piece(piece.bufferIndex, end, originalEndPos, this.getLineFeedCnt(piece.bufferIndex, end, originalEndPos), this.offsetInBuffer(piece.bufferIndex, originalEndPos) - this.offsetInBuffer(piece.bufferIndex, end));\n        const newNode = this.rbInsertRight(node, newPiece);\n        this.validateCRLFWithPrevNode(newNode);\n    }\n    appendToNode(node, value) {\n        if (this.adjustCarriageReturnFromNext(value, node)) {\n            value += '\\n';\n        }\n        const hitCRLF = this.shouldCheckCRLF() && this.startWithLF(value) && this.endWithCR(node);\n        const startOffset = this._buffers[0].buffer.length;\n        this._buffers[0].buffer += value;\n        const lineStarts = createLineStartsFast(value, false);\n        for (let i = 0; i < lineStarts.length; i++) {\n            lineStarts[i] += startOffset;\n        }\n        if (hitCRLF) {\n            const prevStartOffset = this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 2];\n            this._buffers[0].lineStarts.pop();\n            // _lastChangeBufferPos is already wrong\n            this._lastChangeBufferPos = { line: this._lastChangeBufferPos.line - 1, column: startOffset - prevStartOffset };\n        }\n        this._buffers[0].lineStarts = this._buffers[0].lineStarts.concat(lineStarts.slice(1));\n        const endIndex = this._buffers[0].lineStarts.length - 1;\n        const endColumn = this._buffers[0].buffer.length - this._buffers[0].lineStarts[endIndex];\n        const newEnd = { line: endIndex, column: endColumn };\n        const newLength = node.piece.length + value.length;\n        const oldLineFeedCnt = node.piece.lineFeedCnt;\n        const newLineFeedCnt = this.getLineFeedCnt(0, node.piece.start, newEnd);\n        const lf_delta = newLineFeedCnt - oldLineFeedCnt;\n        node.piece = new Piece(node.piece.bufferIndex, node.piece.start, newEnd, newLineFeedCnt, newLength);\n        this._lastChangeBufferPos = newEnd;\n        updateTreeMetadata(this, node, value.length, lf_delta);\n    }\n    nodeAt(offset) {\n        let x = this.root;\n        const cache = this._searchCache.get(offset);\n        if (cache) {\n            return {\n                node: cache.node,\n                nodeStartOffset: cache.nodeStartOffset,\n                remainder: offset - cache.nodeStartOffset\n            };\n        }\n        let nodeStartOffset = 0;\n        while (x !== SENTINEL) {\n            if (x.size_left > offset) {\n                x = x.left;\n            }\n            else if (x.size_left + x.piece.length >= offset) {\n                nodeStartOffset += x.size_left;\n                const ret = {\n                    node: x,\n                    remainder: offset - x.size_left,\n                    nodeStartOffset\n                };\n                this._searchCache.set(ret);\n                return ret;\n            }\n            else {\n                offset -= x.size_left + x.piece.length;\n                nodeStartOffset += x.size_left + x.piece.length;\n                x = x.right;\n            }\n        }\n        return null;\n    }\n    nodeAt2(lineNumber, column) {\n        let x = this.root;\n        let nodeStartOffset = 0;\n        while (x !== SENTINEL) {\n            if (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n                x = x.left;\n            }\n            else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n                const prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n                const accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n                nodeStartOffset += x.size_left;\n                return {\n                    node: x,\n                    remainder: Math.min(prevAccumualtedValue + column - 1, accumulatedValue),\n                    nodeStartOffset\n                };\n            }\n            else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n                const prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n                if (prevAccumualtedValue + column - 1 <= x.piece.length) {\n                    return {\n                        node: x,\n                        remainder: prevAccumualtedValue + column - 1,\n                        nodeStartOffset\n                    };\n                }\n                else {\n                    column -= x.piece.length - prevAccumualtedValue;\n                    break;\n                }\n            }\n            else {\n                lineNumber -= x.lf_left + x.piece.lineFeedCnt;\n                nodeStartOffset += x.size_left + x.piece.length;\n                x = x.right;\n            }\n        }\n        // search in order, to find the node contains position.column\n        x = x.next();\n        while (x !== SENTINEL) {\n            if (x.piece.lineFeedCnt > 0) {\n                const accumulatedValue = this.getAccumulatedValue(x, 0);\n                const nodeStartOffset = this.offsetOfNode(x);\n                return {\n                    node: x,\n                    remainder: Math.min(column - 1, accumulatedValue),\n                    nodeStartOffset\n                };\n            }\n            else {\n                if (x.piece.length >= column - 1) {\n                    const nodeStartOffset = this.offsetOfNode(x);\n                    return {\n                        node: x,\n                        remainder: column - 1,\n                        nodeStartOffset\n                    };\n                }\n                else {\n                    column -= x.piece.length;\n                }\n            }\n            x = x.next();\n        }\n        return null;\n    }\n    nodeCharCodeAt(node, offset) {\n        if (node.piece.lineFeedCnt < 1) {\n            return -1;\n        }\n        const buffer = this._buffers[node.piece.bufferIndex];\n        const newOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start) + offset;\n        return buffer.buffer.charCodeAt(newOffset);\n    }\n    offsetOfNode(node) {\n        if (!node) {\n            return 0;\n        }\n        let pos = node.size_left;\n        while (node !== this.root) {\n            if (node.parent.right === node) {\n                pos += node.parent.size_left + node.parent.piece.length;\n            }\n            node = node.parent;\n        }\n        return pos;\n    }\n    // #endregion\n    // #region CRLF\n    shouldCheckCRLF() {\n        return !(this._EOLNormalized && this._EOL === '\\n');\n    }\n    startWithLF(val) {\n        if (typeof val === 'string') {\n            return val.charCodeAt(0) === 10;\n        }\n        if (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n            return false;\n        }\n        const piece = val.piece;\n        const lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n        const line = piece.start.line;\n        const startOffset = lineStarts[line] + piece.start.column;\n        if (line === lineStarts.length - 1) {\n            // last line, so there is no line feed at the end of this line\n            return false;\n        }\n        const nextLineOffset = lineStarts[line + 1];\n        if (nextLineOffset > startOffset + 1) {\n            return false;\n        }\n        return this._buffers[piece.bufferIndex].buffer.charCodeAt(startOffset) === 10;\n    }\n    endWithCR(val) {\n        if (typeof val === 'string') {\n            return val.charCodeAt(val.length - 1) === 13;\n        }\n        if (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n            return false;\n        }\n        return this.nodeCharCodeAt(val, val.piece.length - 1) === 13;\n    }\n    validateCRLFWithPrevNode(nextNode) {\n        if (this.shouldCheckCRLF() && this.startWithLF(nextNode)) {\n            const node = nextNode.prev();\n            if (this.endWithCR(node)) {\n                this.fixCRLF(node, nextNode);\n            }\n        }\n    }\n    validateCRLFWithNextNode(node) {\n        if (this.shouldCheckCRLF() && this.endWithCR(node)) {\n            const nextNode = node.next();\n            if (this.startWithLF(nextNode)) {\n                this.fixCRLF(node, nextNode);\n            }\n        }\n    }\n    fixCRLF(prev, next) {\n        const nodesToDel = [];\n        // update node\n        const lineStarts = this._buffers[prev.piece.bufferIndex].lineStarts;\n        let newEnd;\n        if (prev.piece.end.column === 0) {\n            // it means, last line ends with \\r, not \\r\\n\n            newEnd = { line: prev.piece.end.line - 1, column: lineStarts[prev.piece.end.line] - lineStarts[prev.piece.end.line - 1] - 1 };\n        }\n        else {\n            // \\r\\n\n            newEnd = { line: prev.piece.end.line, column: prev.piece.end.column - 1 };\n        }\n        const prevNewLength = prev.piece.length - 1;\n        const prevNewLFCnt = prev.piece.lineFeedCnt - 1;\n        prev.piece = new Piece(prev.piece.bufferIndex, prev.piece.start, newEnd, prevNewLFCnt, prevNewLength);\n        updateTreeMetadata(this, prev, -1, -1);\n        if (prev.piece.length === 0) {\n            nodesToDel.push(prev);\n        }\n        // update nextNode\n        const newStart = { line: next.piece.start.line + 1, column: 0 };\n        const newLength = next.piece.length - 1;\n        const newLineFeedCnt = this.getLineFeedCnt(next.piece.bufferIndex, newStart, next.piece.end);\n        next.piece = new Piece(next.piece.bufferIndex, newStart, next.piece.end, newLineFeedCnt, newLength);\n        updateTreeMetadata(this, next, -1, -1);\n        if (next.piece.length === 0) {\n            nodesToDel.push(next);\n        }\n        // create new piece which contains \\r\\n\n        const pieces = this.createNewPieces('\\r\\n');\n        this.rbInsertRight(prev, pieces[0]);\n        // delete empty nodes\n        for (let i = 0; i < nodesToDel.length; i++) {\n            rbDelete(this, nodesToDel[i]);\n        }\n    }\n    adjustCarriageReturnFromNext(value, node) {\n        if (this.shouldCheckCRLF() && this.endWithCR(value)) {\n            const nextNode = node.next();\n            if (this.startWithLF(nextNode)) {\n                // move `\\n` forward\n                value += '\\n';\n                if (nextNode.piece.length === 1) {\n                    rbDelete(this, nextNode);\n                }\n                else {\n                    const piece = nextNode.piece;\n                    const newStart = { line: piece.start.line + 1, column: 0 };\n                    const newLength = piece.length - 1;\n                    const newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n                    nextNode.piece = new Piece(piece.bufferIndex, newStart, piece.end, newLineFeedCnt, newLength);\n                    updateTreeMetadata(this, nextNode, -1, -1);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    // #endregion\n    // #endregion\n    // #region Tree operations\n    iterate(node, callback) {\n        if (node === SENTINEL) {\n            return callback(SENTINEL);\n        }\n        const leftRet = this.iterate(node.left, callback);\n        if (!leftRet) {\n            return leftRet;\n        }\n        return callback(node) && this.iterate(node.right, callback);\n    }\n    getNodeContent(node) {\n        if (node === SENTINEL) {\n            return '';\n        }\n        const buffer = this._buffers[node.piece.bufferIndex];\n        let currentContent;\n        const piece = node.piece;\n        const startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n        const endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n        currentContent = buffer.buffer.substring(startOffset, endOffset);\n        return currentContent;\n    }\n    getPieceContent(piece) {\n        const buffer = this._buffers[piece.bufferIndex];\n        const startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n        const endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n        const currentContent = buffer.buffer.substring(startOffset, endOffset);\n        return currentContent;\n    }\n    /**\n     *      node              node\n     *     /  \\              /  \\\n     *    a   b    <----   a    b\n     *                         /\n     *                        z\n     */\n    rbInsertRight(node, p) {\n        const z = new TreeNode(p, 1 /* Red */);\n        z.left = SENTINEL;\n        z.right = SENTINEL;\n        z.parent = SENTINEL;\n        z.size_left = 0;\n        z.lf_left = 0;\n        const x = this.root;\n        if (x === SENTINEL) {\n            this.root = z;\n            z.color = 0 /* Black */;\n        }\n        else if (node.right === SENTINEL) {\n            node.right = z;\n            z.parent = node;\n        }\n        else {\n            const nextNode = leftest(node.right);\n            nextNode.left = z;\n            z.parent = nextNode;\n        }\n        fixInsert(this, z);\n        return z;\n    }\n    /**\n     *      node              node\n     *     /  \\              /  \\\n     *    a   b     ---->   a    b\n     *                       \\\n     *                        z\n     */\n    rbInsertLeft(node, p) {\n        const z = new TreeNode(p, 1 /* Red */);\n        z.left = SENTINEL;\n        z.right = SENTINEL;\n        z.parent = SENTINEL;\n        z.size_left = 0;\n        z.lf_left = 0;\n        if (this.root === SENTINEL) {\n            this.root = z;\n            z.color = 0 /* Black */;\n        }\n        else if (node.left === SENTINEL) {\n            node.left = z;\n            z.parent = node;\n        }\n        else {\n            const prevNode = righttest(node.left); // a\n            prevNode.right = z;\n            z.parent = prevNode;\n        }\n        fixInsert(this, z);\n        return z;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function countEOL(text) {\n    let eolCount = 0;\n    let firstLineLength = 0;\n    let lastLineStart = 0;\n    let eol = 0 /* Unknown */;\n    for (let i = 0, len = text.length; i < len; i++) {\n        const chr = text.charCodeAt(i);\n        if (chr === 13 /* CarriageReturn */) {\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            if (i + 1 < len && text.charCodeAt(i + 1) === 10 /* LineFeed */) {\n                // \\r\\n... case\n                eol |= 2 /* CRLF */;\n                i++; // skip \\n\n            }\n            else {\n                // \\r... case\n                eol |= 3 /* Invalid */;\n            }\n            lastLineStart = i + 1;\n        }\n        else if (chr === 10 /* LineFeed */) {\n            // \\n... case\n            eol |= 1 /* LF */;\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            lastLineStart = i + 1;\n        }\n    }\n    if (eolCount === 0) {\n        firstLineLength = text.length;\n    }\n    return [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../core/range.js';\nimport { ApplyEditsResult } from '../../model.js';\nimport { PieceTreeBase } from './pieceTreeBase.js';\nimport { countEOL } from '../../core/eolCounter.js';\nimport { TextChange } from '../../core/textChange.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class PieceTreeTextBuffer extends Disposable {\n    constructor(chunks, BOM, eol, containsRTL, containsUnusualLineTerminators, isBasicASCII, eolNormalized) {\n        super();\n        this._onDidChangeContent = this._register(new Emitter());\n        this._BOM = BOM;\n        this._mightContainNonBasicASCII = !isBasicASCII;\n        this._mightContainRTL = containsRTL;\n        this._mightContainUnusualLineTerminators = containsUnusualLineTerminators;\n        this._pieceTree = new PieceTreeBase(chunks, eol, eolNormalized);\n    }\n    mightContainRTL() {\n        return this._mightContainRTL;\n    }\n    mightContainUnusualLineTerminators() {\n        return this._mightContainUnusualLineTerminators;\n    }\n    resetMightContainUnusualLineTerminators() {\n        this._mightContainUnusualLineTerminators = false;\n    }\n    mightContainNonBasicASCII() {\n        return this._mightContainNonBasicASCII;\n    }\n    getBOM() {\n        return this._BOM;\n    }\n    getEOL() {\n        return this._pieceTree.getEOL();\n    }\n    createSnapshot(preserveBOM) {\n        return this._pieceTree.createSnapshot(preserveBOM ? this._BOM : '');\n    }\n    getOffsetAt(lineNumber, column) {\n        return this._pieceTree.getOffsetAt(lineNumber, column);\n    }\n    getPositionAt(offset) {\n        return this._pieceTree.getPositionAt(offset);\n    }\n    getRangeAt(start, length) {\n        const end = start + length;\n        const startPosition = this.getPositionAt(start);\n        const endPosition = this.getPositionAt(end);\n        return new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n    }\n    getValueInRange(range, eol = 0 /* TextDefined */) {\n        if (range.isEmpty()) {\n            return '';\n        }\n        const lineEnding = this._getEndOfLine(eol);\n        return this._pieceTree.getValueInRange(range, lineEnding);\n    }\n    getValueLengthInRange(range, eol = 0 /* TextDefined */) {\n        if (range.isEmpty()) {\n            return 0;\n        }\n        if (range.startLineNumber === range.endLineNumber) {\n            return (range.endColumn - range.startColumn);\n        }\n        const startOffset = this.getOffsetAt(range.startLineNumber, range.startColumn);\n        const endOffset = this.getOffsetAt(range.endLineNumber, range.endColumn);\n        return endOffset - startOffset;\n    }\n    getCharacterCountInRange(range, eol = 0 /* TextDefined */) {\n        if (this._mightContainNonBasicASCII) {\n            // we must count by iterating\n            let result = 0;\n            const fromLineNumber = range.startLineNumber;\n            const toLineNumber = range.endLineNumber;\n            for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n                const lineContent = this.getLineContent(lineNumber);\n                const fromOffset = (lineNumber === fromLineNumber ? range.startColumn - 1 : 0);\n                const toOffset = (lineNumber === toLineNumber ? range.endColumn - 1 : lineContent.length);\n                for (let offset = fromOffset; offset < toOffset; offset++) {\n                    if (strings.isHighSurrogate(lineContent.charCodeAt(offset))) {\n                        result = result + 1;\n                        offset = offset + 1;\n                    }\n                    else {\n                        result = result + 1;\n                    }\n                }\n            }\n            result += this._getEndOfLine(eol).length * (toLineNumber - fromLineNumber);\n            return result;\n        }\n        return this.getValueLengthInRange(range, eol);\n    }\n    getLength() {\n        return this._pieceTree.getLength();\n    }\n    getLineCount() {\n        return this._pieceTree.getLineCount();\n    }\n    getLinesContent() {\n        return this._pieceTree.getLinesContent();\n    }\n    getLineContent(lineNumber) {\n        return this._pieceTree.getLineContent(lineNumber);\n    }\n    getLineCharCode(lineNumber, index) {\n        return this._pieceTree.getLineCharCode(lineNumber, index);\n    }\n    getLineLength(lineNumber) {\n        return this._pieceTree.getLineLength(lineNumber);\n    }\n    getLineFirstNonWhitespaceColumn(lineNumber) {\n        const result = strings.firstNonWhitespaceIndex(this.getLineContent(lineNumber));\n        if (result === -1) {\n            return 0;\n        }\n        return result + 1;\n    }\n    getLineLastNonWhitespaceColumn(lineNumber) {\n        const result = strings.lastNonWhitespaceIndex(this.getLineContent(lineNumber));\n        if (result === -1) {\n            return 0;\n        }\n        return result + 2;\n    }\n    _getEndOfLine(eol) {\n        switch (eol) {\n            case 1 /* LF */:\n                return '\\n';\n            case 2 /* CRLF */:\n                return '\\r\\n';\n            case 0 /* TextDefined */:\n                return this.getEOL();\n            default:\n                throw new Error('Unknown EOL preference');\n        }\n    }\n    setEOL(newEOL) {\n        this._pieceTree.setEOL(newEOL);\n    }\n    applyEdits(rawOperations, recordTrimAutoWhitespace, computeUndoEdits) {\n        let mightContainRTL = this._mightContainRTL;\n        let mightContainUnusualLineTerminators = this._mightContainUnusualLineTerminators;\n        let mightContainNonBasicASCII = this._mightContainNonBasicASCII;\n        let canReduceOperations = true;\n        let operations = [];\n        for (let i = 0; i < rawOperations.length; i++) {\n            const op = rawOperations[i];\n            if (canReduceOperations && op._isTracked) {\n                canReduceOperations = false;\n            }\n            const validatedRange = op.range;\n            if (op.text) {\n                let textMightContainNonBasicASCII = true;\n                if (!mightContainNonBasicASCII) {\n                    textMightContainNonBasicASCII = !strings.isBasicASCII(op.text);\n                    mightContainNonBasicASCII = textMightContainNonBasicASCII;\n                }\n                if (!mightContainRTL && textMightContainNonBasicASCII) {\n                    // check if the new inserted text contains RTL\n                    mightContainRTL = strings.containsRTL(op.text);\n                }\n                if (!mightContainUnusualLineTerminators && textMightContainNonBasicASCII) {\n                    // check if the new inserted text contains unusual line terminators\n                    mightContainUnusualLineTerminators = strings.containsUnusualLineTerminators(op.text);\n                }\n            }\n            let validText = '';\n            let eolCount = 0;\n            let firstLineLength = 0;\n            let lastLineLength = 0;\n            if (op.text) {\n                let strEOL;\n                [eolCount, firstLineLength, lastLineLength, strEOL] = countEOL(op.text);\n                const bufferEOL = this.getEOL();\n                const expectedStrEOL = (bufferEOL === '\\r\\n' ? 2 /* CRLF */ : 1 /* LF */);\n                if (strEOL === 0 /* Unknown */ || strEOL === expectedStrEOL) {\n                    validText = op.text;\n                }\n                else {\n                    validText = op.text.replace(/\\r\\n|\\r|\\n/g, bufferEOL);\n                }\n            }\n            operations[i] = {\n                sortIndex: i,\n                identifier: op.identifier || null,\n                range: validatedRange,\n                rangeOffset: this.getOffsetAt(validatedRange.startLineNumber, validatedRange.startColumn),\n                rangeLength: this.getValueLengthInRange(validatedRange),\n                text: validText,\n                eolCount: eolCount,\n                firstLineLength: firstLineLength,\n                lastLineLength: lastLineLength,\n                forceMoveMarkers: Boolean(op.forceMoveMarkers),\n                isAutoWhitespaceEdit: op.isAutoWhitespaceEdit || false\n            };\n        }\n        // Sort operations ascending\n        operations.sort(PieceTreeTextBuffer._sortOpsAscending);\n        let hasTouchingRanges = false;\n        for (let i = 0, count = operations.length - 1; i < count; i++) {\n            const rangeEnd = operations[i].range.getEndPosition();\n            const nextRangeStart = operations[i + 1].range.getStartPosition();\n            if (nextRangeStart.isBeforeOrEqual(rangeEnd)) {\n                if (nextRangeStart.isBefore(rangeEnd)) {\n                    // overlapping ranges\n                    throw new Error('Overlapping ranges are not allowed!');\n                }\n                hasTouchingRanges = true;\n            }\n        }\n        if (canReduceOperations) {\n            operations = this._reduceOperations(operations);\n        }\n        // Delta encode operations\n        const reverseRanges = (computeUndoEdits || recordTrimAutoWhitespace ? PieceTreeTextBuffer._getInverseEditRanges(operations) : []);\n        const newTrimAutoWhitespaceCandidates = [];\n        if (recordTrimAutoWhitespace) {\n            for (let i = 0; i < operations.length; i++) {\n                const op = operations[i];\n                const reverseRange = reverseRanges[i];\n                if (op.isAutoWhitespaceEdit && op.range.isEmpty()) {\n                    // Record already the future line numbers that might be auto whitespace removal candidates on next edit\n                    for (let lineNumber = reverseRange.startLineNumber; lineNumber <= reverseRange.endLineNumber; lineNumber++) {\n                        let currentLineContent = '';\n                        if (lineNumber === reverseRange.startLineNumber) {\n                            currentLineContent = this.getLineContent(op.range.startLineNumber);\n                            if (strings.firstNonWhitespaceIndex(currentLineContent) !== -1) {\n                                continue;\n                            }\n                        }\n                        newTrimAutoWhitespaceCandidates.push({ lineNumber: lineNumber, oldContent: currentLineContent });\n                    }\n                }\n            }\n        }\n        let reverseOperations = null;\n        if (computeUndoEdits) {\n            let reverseRangeDeltaOffset = 0;\n            reverseOperations = [];\n            for (let i = 0; i < operations.length; i++) {\n                const op = operations[i];\n                const reverseRange = reverseRanges[i];\n                const bufferText = this.getValueInRange(op.range);\n                const reverseRangeOffset = op.rangeOffset + reverseRangeDeltaOffset;\n                reverseRangeDeltaOffset += (op.text.length - bufferText.length);\n                reverseOperations[i] = {\n                    sortIndex: op.sortIndex,\n                    identifier: op.identifier,\n                    range: reverseRange,\n                    text: bufferText,\n                    textChange: new TextChange(op.rangeOffset, bufferText, reverseRangeOffset, op.text)\n                };\n            }\n            // Can only sort reverse operations when the order is not significant\n            if (!hasTouchingRanges) {\n                reverseOperations.sort((a, b) => a.sortIndex - b.sortIndex);\n            }\n        }\n        this._mightContainRTL = mightContainRTL;\n        this._mightContainUnusualLineTerminators = mightContainUnusualLineTerminators;\n        this._mightContainNonBasicASCII = mightContainNonBasicASCII;\n        const contentChanges = this._doApplyEdits(operations);\n        let trimAutoWhitespaceLineNumbers = null;\n        if (recordTrimAutoWhitespace && newTrimAutoWhitespaceCandidates.length > 0) {\n            // sort line numbers auto whitespace removal candidates for next edit descending\n            newTrimAutoWhitespaceCandidates.sort((a, b) => b.lineNumber - a.lineNumber);\n            trimAutoWhitespaceLineNumbers = [];\n            for (let i = 0, len = newTrimAutoWhitespaceCandidates.length; i < len; i++) {\n                const lineNumber = newTrimAutoWhitespaceCandidates[i].lineNumber;\n                if (i > 0 && newTrimAutoWhitespaceCandidates[i - 1].lineNumber === lineNumber) {\n                    // Do not have the same line number twice\n                    continue;\n                }\n                const prevContent = newTrimAutoWhitespaceCandidates[i].oldContent;\n                const lineContent = this.getLineContent(lineNumber);\n                if (lineContent.length === 0 || lineContent === prevContent || strings.firstNonWhitespaceIndex(lineContent) !== -1) {\n                    continue;\n                }\n                trimAutoWhitespaceLineNumbers.push(lineNumber);\n            }\n        }\n        this._onDidChangeContent.fire();\n        return new ApplyEditsResult(reverseOperations, contentChanges, trimAutoWhitespaceLineNumbers);\n    }\n    /**\n     * Transform operations such that they represent the same logic edit,\n     * but that they also do not cause OOM crashes.\n     */\n    _reduceOperations(operations) {\n        if (operations.length < 1000) {\n            // We know from empirical testing that a thousand edits work fine regardless of their shape.\n            return operations;\n        }\n        // At one point, due to how events are emitted and how each operation is handled,\n        // some operations can trigger a high amount of temporary string allocations,\n        // that will immediately get edited again.\n        // e.g. a formatter inserting ridiculous ammounts of \\n on a model with a single line\n        // Therefore, the strategy is to collapse all the operations into a huge single edit operation\n        return [this._toSingleEditOperation(operations)];\n    }\n    _toSingleEditOperation(operations) {\n        let forceMoveMarkers = false;\n        const firstEditRange = operations[0].range;\n        const lastEditRange = operations[operations.length - 1].range;\n        const entireEditRange = new Range(firstEditRange.startLineNumber, firstEditRange.startColumn, lastEditRange.endLineNumber, lastEditRange.endColumn);\n        let lastEndLineNumber = firstEditRange.startLineNumber;\n        let lastEndColumn = firstEditRange.startColumn;\n        const result = [];\n        for (let i = 0, len = operations.length; i < len; i++) {\n            const operation = operations[i];\n            const range = operation.range;\n            forceMoveMarkers = forceMoveMarkers || operation.forceMoveMarkers;\n            // (1) -- Push old text\n            result.push(this.getValueInRange(new Range(lastEndLineNumber, lastEndColumn, range.startLineNumber, range.startColumn)));\n            // (2) -- Push new text\n            if (operation.text.length > 0) {\n                result.push(operation.text);\n            }\n            lastEndLineNumber = range.endLineNumber;\n            lastEndColumn = range.endColumn;\n        }\n        const text = result.join('');\n        const [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n        return {\n            sortIndex: 0,\n            identifier: operations[0].identifier,\n            range: entireEditRange,\n            rangeOffset: this.getOffsetAt(entireEditRange.startLineNumber, entireEditRange.startColumn),\n            rangeLength: this.getValueLengthInRange(entireEditRange, 0 /* TextDefined */),\n            text: text,\n            eolCount: eolCount,\n            firstLineLength: firstLineLength,\n            lastLineLength: lastLineLength,\n            forceMoveMarkers: forceMoveMarkers,\n            isAutoWhitespaceEdit: false\n        };\n    }\n    _doApplyEdits(operations) {\n        operations.sort(PieceTreeTextBuffer._sortOpsDescending);\n        const contentChanges = [];\n        // operations are from bottom to top\n        for (let i = 0; i < operations.length; i++) {\n            const op = operations[i];\n            const startLineNumber = op.range.startLineNumber;\n            const startColumn = op.range.startColumn;\n            const endLineNumber = op.range.endLineNumber;\n            const endColumn = op.range.endColumn;\n            if (startLineNumber === endLineNumber && startColumn === endColumn && op.text.length === 0) {\n                // no-op\n                continue;\n            }\n            if (op.text) {\n                // replacement\n                this._pieceTree.delete(op.rangeOffset, op.rangeLength);\n                this._pieceTree.insert(op.rangeOffset, op.text, true);\n            }\n            else {\n                // deletion\n                this._pieceTree.delete(op.rangeOffset, op.rangeLength);\n            }\n            const contentChangeRange = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            contentChanges.push({\n                range: contentChangeRange,\n                rangeLength: op.rangeLength,\n                text: op.text,\n                rangeOffset: op.rangeOffset,\n                forceMoveMarkers: op.forceMoveMarkers\n            });\n        }\n        return contentChanges;\n    }\n    findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount) {\n        return this._pieceTree.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n    }\n    /**\n     * Assumes `operations` are validated and sorted ascending\n     */\n    static _getInverseEditRanges(operations) {\n        const result = [];\n        let prevOpEndLineNumber = 0;\n        let prevOpEndColumn = 0;\n        let prevOp = null;\n        for (let i = 0, len = operations.length; i < len; i++) {\n            const op = operations[i];\n            let startLineNumber;\n            let startColumn;\n            if (prevOp) {\n                if (prevOp.range.endLineNumber === op.range.startLineNumber) {\n                    startLineNumber = prevOpEndLineNumber;\n                    startColumn = prevOpEndColumn + (op.range.startColumn - prevOp.range.endColumn);\n                }\n                else {\n                    startLineNumber = prevOpEndLineNumber + (op.range.startLineNumber - prevOp.range.endLineNumber);\n                    startColumn = op.range.startColumn;\n                }\n            }\n            else {\n                startLineNumber = op.range.startLineNumber;\n                startColumn = op.range.startColumn;\n            }\n            let resultRange;\n            if (op.text.length > 0) {\n                // the operation inserts something\n                const lineCount = op.eolCount + 1;\n                if (lineCount === 1) {\n                    // single line insert\n                    resultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + op.firstLineLength);\n                }\n                else {\n                    // multi line insert\n                    resultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, op.lastLineLength + 1);\n                }\n            }\n            else {\n                // There is nothing to insert\n                resultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n            }\n            prevOpEndLineNumber = resultRange.endLineNumber;\n            prevOpEndColumn = resultRange.endColumn;\n            result.push(resultRange);\n            prevOp = op;\n        }\n        return result;\n    }\n    static _sortOpsAscending(a, b) {\n        const r = Range.compareRangesUsingEnds(a.range, b.range);\n        if (r === 0) {\n            return a.sortIndex - b.sortIndex;\n        }\n        return r;\n    }\n    static _sortOpsDescending(a, b) {\n        const r = Range.compareRangesUsingEnds(a.range, b.range);\n        if (r === 0) {\n            return b.sortIndex - a.sortIndex;\n        }\n        return -r;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { StringBuffer, createLineStarts, createLineStartsFast } from './pieceTreeBase.js';\nimport { PieceTreeTextBuffer } from './pieceTreeTextBuffer.js';\nexport class PieceTreeTextBufferFactory {\n    constructor(_chunks, _bom, _cr, _lf, _crlf, _containsRTL, _containsUnusualLineTerminators, _isBasicASCII, _normalizeEOL) {\n        this._chunks = _chunks;\n        this._bom = _bom;\n        this._cr = _cr;\n        this._lf = _lf;\n        this._crlf = _crlf;\n        this._containsRTL = _containsRTL;\n        this._containsUnusualLineTerminators = _containsUnusualLineTerminators;\n        this._isBasicASCII = _isBasicASCII;\n        this._normalizeEOL = _normalizeEOL;\n    }\n    _getEOL(defaultEOL) {\n        const totalEOLCount = this._cr + this._lf + this._crlf;\n        const totalCRCount = this._cr + this._crlf;\n        if (totalEOLCount === 0) {\n            // This is an empty file or a file with precisely one line\n            return (defaultEOL === 1 /* LF */ ? '\\n' : '\\r\\n');\n        }\n        if (totalCRCount > totalEOLCount / 2) {\n            // More than half of the file contains \\r\\n ending lines\n            return '\\r\\n';\n        }\n        // At least one line more ends in \\n\n        return '\\n';\n    }\n    create(defaultEOL) {\n        const eol = this._getEOL(defaultEOL);\n        const chunks = this._chunks;\n        if (this._normalizeEOL &&\n            ((eol === '\\r\\n' && (this._cr > 0 || this._lf > 0))\n                || (eol === '\\n' && (this._cr > 0 || this._crlf > 0)))) {\n            // Normalize pieces\n            for (let i = 0, len = chunks.length; i < len; i++) {\n                const str = chunks[i].buffer.replace(/\\r\\n|\\r|\\n/g, eol);\n                const newLineStart = createLineStartsFast(str);\n                chunks[i] = new StringBuffer(str, newLineStart);\n            }\n        }\n        const textBuffer = new PieceTreeTextBuffer(chunks, this._bom, eol, this._containsRTL, this._containsUnusualLineTerminators, this._isBasicASCII, this._normalizeEOL);\n        return { textBuffer: textBuffer, disposable: textBuffer };\n    }\n}\nexport class PieceTreeTextBufferBuilder {\n    constructor() {\n        this.chunks = [];\n        this.BOM = '';\n        this._hasPreviousChar = false;\n        this._previousChar = 0;\n        this._tmpLineStarts = [];\n        this.cr = 0;\n        this.lf = 0;\n        this.crlf = 0;\n        this.containsRTL = false;\n        this.containsUnusualLineTerminators = false;\n        this.isBasicASCII = true;\n    }\n    acceptChunk(chunk) {\n        if (chunk.length === 0) {\n            return;\n        }\n        if (this.chunks.length === 0) {\n            if (strings.startsWithUTF8BOM(chunk)) {\n                this.BOM = strings.UTF8_BOM_CHARACTER;\n                chunk = chunk.substr(1);\n            }\n        }\n        const lastChar = chunk.charCodeAt(chunk.length - 1);\n        if (lastChar === 13 /* CarriageReturn */ || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n            // last character is \\r or a high surrogate => keep it back\n            this._acceptChunk1(chunk.substr(0, chunk.length - 1), false);\n            this._hasPreviousChar = true;\n            this._previousChar = lastChar;\n        }\n        else {\n            this._acceptChunk1(chunk, false);\n            this._hasPreviousChar = false;\n            this._previousChar = lastChar;\n        }\n    }\n    _acceptChunk1(chunk, allowEmptyStrings) {\n        if (!allowEmptyStrings && chunk.length === 0) {\n            // Nothing to do\n            return;\n        }\n        if (this._hasPreviousChar) {\n            this._acceptChunk2(String.fromCharCode(this._previousChar) + chunk);\n        }\n        else {\n            this._acceptChunk2(chunk);\n        }\n    }\n    _acceptChunk2(chunk) {\n        const lineStarts = createLineStarts(this._tmpLineStarts, chunk);\n        this.chunks.push(new StringBuffer(chunk, lineStarts.lineStarts));\n        this.cr += lineStarts.cr;\n        this.lf += lineStarts.lf;\n        this.crlf += lineStarts.crlf;\n        if (this.isBasicASCII) {\n            this.isBasicASCII = lineStarts.isBasicASCII;\n        }\n        if (!this.isBasicASCII && !this.containsRTL) {\n            // No need to check if it is basic ASCII\n            this.containsRTL = strings.containsRTL(chunk);\n        }\n        if (!this.isBasicASCII && !this.containsUnusualLineTerminators) {\n            // No need to check if it is basic ASCII\n            this.containsUnusualLineTerminators = strings.containsUnusualLineTerminators(chunk);\n        }\n    }\n    finish(normalizeEOL = true) {\n        this._finish();\n        return new PieceTreeTextBufferFactory(this.chunks, this.BOM, this.cr, this.lf, this.crlf, this.containsRTL, this.containsUnusualLineTerminators, this.isBasicASCII, normalizeEOL);\n    }\n    _finish() {\n        if (this.chunks.length === 0) {\n            this._acceptChunk1('', true);\n        }\n        if (this._hasPreviousChar) {\n            this._hasPreviousChar = false;\n            // recreate last chunk\n            const lastChunk = this.chunks[this.chunks.length - 1];\n            lastChunk.buffer += String.fromCharCode(this._previousChar);\n            const newLineStarts = createLineStartsFast(lastChunk.buffer);\n            lastChunk.lineStarts = newLineStarts;\n            if (this._previousChar === 13 /* CarriageReturn */) {\n                this.cr++;\n            }\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * An event describing that a model has been reset to a new value.\n * @internal\n */\nexport class ModelRawFlush {\n    constructor() {\n        this.changeType = 1 /* Flush */;\n    }\n}\n/**\n * Represents text injected on a line\n * @internal\n */\nexport class LineInjectedText {\n    constructor(ownerId, lineNumber, column, options, order) {\n        this.ownerId = ownerId;\n        this.lineNumber = lineNumber;\n        this.column = column;\n        this.options = options;\n        this.order = order;\n    }\n    static applyInjectedText(lineText, injectedTexts) {\n        if (!injectedTexts || injectedTexts.length === 0) {\n            return lineText;\n        }\n        let result = '';\n        let lastOriginalOffset = 0;\n        for (const injectedText of injectedTexts) {\n            result += lineText.substring(lastOriginalOffset, injectedText.column - 1);\n            lastOriginalOffset = injectedText.column - 1;\n            result += injectedText.options.content;\n        }\n        result += lineText.substring(lastOriginalOffset);\n        return result;\n    }\n    static fromDecorations(decorations) {\n        const result = [];\n        for (const decoration of decorations) {\n            if (decoration.options.before && decoration.options.before.content.length > 0) {\n                result.push(new LineInjectedText(decoration.ownerId, decoration.range.startLineNumber, decoration.range.startColumn, decoration.options.before, 0));\n            }\n            if (decoration.options.after && decoration.options.after.content.length > 0) {\n                result.push(new LineInjectedText(decoration.ownerId, decoration.range.endLineNumber, decoration.range.endColumn, decoration.options.after, 1));\n            }\n        }\n        result.sort((a, b) => {\n            if (a.lineNumber === b.lineNumber) {\n                if (a.column === b.column) {\n                    return a.order - b.order;\n                }\n                return a.column - b.column;\n            }\n            return a.lineNumber - b.lineNumber;\n        });\n        return result;\n    }\n}\n/**\n * An event describing that a line has changed in a model.\n * @internal\n */\nexport class ModelRawLineChanged {\n    constructor(lineNumber, detail, injectedText) {\n        this.changeType = 2 /* LineChanged */;\n        this.lineNumber = lineNumber;\n        this.detail = detail;\n        this.injectedText = injectedText;\n    }\n}\n/**\n * An event describing that line(s) have been deleted in a model.\n * @internal\n */\nexport class ModelRawLinesDeleted {\n    constructor(fromLineNumber, toLineNumber) {\n        this.changeType = 3 /* LinesDeleted */;\n        this.fromLineNumber = fromLineNumber;\n        this.toLineNumber = toLineNumber;\n    }\n}\n/**\n * An event describing that line(s) have been inserted in a model.\n * @internal\n */\nexport class ModelRawLinesInserted {\n    constructor(fromLineNumber, toLineNumber, detail, injectedTexts) {\n        this.changeType = 4 /* LinesInserted */;\n        this.injectedTexts = injectedTexts;\n        this.fromLineNumber = fromLineNumber;\n        this.toLineNumber = toLineNumber;\n        this.detail = detail;\n    }\n}\n/**\n * An event describing that a model has had its EOL changed.\n * @internal\n */\nexport class ModelRawEOLChanged {\n    constructor() {\n        this.changeType = 5 /* EOLChanged */;\n    }\n}\n/**\n * An event describing a change in the text of a model.\n * @internal\n */\nexport class ModelRawContentChangedEvent {\n    constructor(changes, versionId, isUndoing, isRedoing) {\n        this.changes = changes;\n        this.versionId = versionId;\n        this.isUndoing = isUndoing;\n        this.isRedoing = isRedoing;\n        this.resultingSelection = null;\n    }\n    containsEvent(type) {\n        for (let i = 0, len = this.changes.length; i < len; i++) {\n            const change = this.changes[i];\n            if (change.changeType === type) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static merge(a, b) {\n        const changes = [].concat(a.changes).concat(b.changes);\n        const versionId = b.versionId;\n        const isUndoing = (a.isUndoing || b.isUndoing);\n        const isRedoing = (a.isRedoing || b.isRedoing);\n        return new ModelRawContentChangedEvent(changes, versionId, isUndoing, isRedoing);\n    }\n}\n/**\n * An event describing a change in injected text.\n * @internal\n */\nexport class ModelInjectedTextChangedEvent {\n    constructor(changes) {\n        this.changes = changes;\n    }\n}\n/**\n * @internal\n */\nexport class InternalModelContentChangeEvent {\n    constructor(rawContentChangedEvent, contentChangedEvent) {\n        this.rawContentChangedEvent = rawContentChangedEvent;\n        this.contentChangedEvent = contentChangedEvent;\n    }\n    merge(other) {\n        const rawContentChangedEvent = ModelRawContentChangedEvent.merge(this.rawContentChangedEvent, other.rawContentChangedEvent);\n        const contentChangedEvent = InternalModelContentChangeEvent._mergeChangeEvents(this.contentChangedEvent, other.contentChangedEvent);\n        return new InternalModelContentChangeEvent(rawContentChangedEvent, contentChangedEvent);\n    }\n    static _mergeChangeEvents(a, b) {\n        const changes = [].concat(a.changes).concat(b.changes);\n        const eol = b.eol;\n        const versionId = b.versionId;\n        const isUndoing = (a.isUndoing || b.isUndoing);\n        const isRedoing = (a.isRedoing || b.isRedoing);\n        const isFlush = (a.isFlush || b.isFlush);\n        return {\n            changes: changes,\n            eol: eol,\n            versionId: versionId,\n            isUndoing: isUndoing,\n            isRedoing: isRedoing,\n            isFlush: isFlush\n        };\n    }\n}\n", "/**\n * Represents contiguous tokens over a contiguous range of lines.\n */\nexport class ContiguousMultilineTokens {\n    constructor(startLineNumber, tokens) {\n        this._startLineNumber = startLineNumber;\n        this._tokens = tokens;\n    }\n    /**\n     * (Inclusive) start line number for these tokens.\n     */\n    get startLineNumber() {\n        return this._startLineNumber;\n    }\n    /**\n     * (Inclusive) end line number for these tokens.\n     */\n    get endLineNumber() {\n        return this._startLineNumber + this._tokens.length - 1;\n    }\n    /**\n     * @see {@link _tokens}\n     */\n    getLineTokens(lineNumber) {\n        return this._tokens[lineNumber - this._startLineNumber];\n    }\n    appendLineTokens(lineTokens) {\n        this._tokens.push(lineTokens);\n    }\n}\n", "import { ContiguousMultilineTokens } from './contiguousMultilineTokens.js';\nexport class ContiguousMultilineTokensBuilder {\n    constructor() {\n        this._tokens = [];\n    }\n    add(lineNumber, lineTokens) {\n        if (this._tokens.length > 0) {\n            const last = this._tokens[this._tokens.length - 1];\n            if (last.endLineNumber + 1 === lineNumber) {\n                // append\n                last.appendLineTokens(lineTokens);\n                return;\n            }\n        }\n        this._tokens.push(new ContiguousMultilineTokens(lineNumber, [lineTokens]));\n    }\n    finalize() {\n        return this._tokens;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { LineTokens } from '../tokens/lineTokens.js';\nimport { TokenizationRegistry } from '../languages.js';\nimport { nullTokenizeEncoded } from '../languages/nullTokenize.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { countEOL } from '../core/eolCounter.js';\nimport { ContiguousMultilineTokensBuilder } from '../tokens/contiguousMultilineTokensBuilder.js';\nimport { runWhenIdle } from '../../../base/common/async.js';\nimport { setTimeout0 } from '../../../base/common/platform.js';\n/**\n * An array that avoids being sparse by always\n * filling up unused indices with a default value.\n */\nclass ContiguousGrowingArray {\n    constructor(_default) {\n        this._default = _default;\n        this._store = [];\n    }\n    get(index) {\n        if (index < this._store.length) {\n            return this._store[index];\n        }\n        return this._default;\n    }\n    set(index, value) {\n        while (index >= this._store.length) {\n            this._store[this._store.length] = this._default;\n        }\n        this._store[index] = value;\n    }\n    delete(deleteIndex, deleteCount) {\n        if (deleteCount === 0 || deleteIndex >= this._store.length) {\n            return;\n        }\n        this._store.splice(deleteIndex, deleteCount);\n    }\n    insert(insertIndex, insertCount) {\n        if (insertCount === 0 || insertIndex >= this._store.length) {\n            return;\n        }\n        const arr = [];\n        for (let i = 0; i < insertCount; i++) {\n            arr[i] = this._default;\n        }\n        this._store = arrays.arrayInsert(this._store, insertIndex, arr);\n    }\n}\n/**\n * Stores the states at the start of each line and keeps track of which lines\n * must be retokenized. Also uses state equality to quickly validate lines\n * that don't need to be retokenized.\n *\n * For example, when typing on a line, the line gets marked as needing to be tokenized.\n * Once the line is tokenized, the end state is checked for equality against the begin\n * state of the next line. If the states are equal, tokenization doesn't need to run\n * again over the rest of the file. If the states are not equal, the next line gets marked\n * as needing to be tokenized.\n */\nexport class TokenizationStateStore {\n    constructor(tokenizationSupport, initialState) {\n        this.tokenizationSupport = tokenizationSupport;\n        this.initialState = initialState;\n        /**\n         * `lineBeginState[i]` contains the begin state used to tokenize line number `i + 1`.\n         */\n        this._lineBeginState = new ContiguousGrowingArray(null);\n        /**\n         * `lineNeedsTokenization[i]` describes if line number `i + 1` needs to be tokenized.\n         */\n        this._lineNeedsTokenization = new ContiguousGrowingArray(true);\n        this._firstLineNeedsTokenization = 0;\n        this._lineBeginState.set(0, this.initialState);\n    }\n    get invalidLineStartIndex() {\n        return this._firstLineNeedsTokenization;\n    }\n    markMustBeTokenized(lineIndex) {\n        this._lineNeedsTokenization.set(lineIndex, true);\n        this._firstLineNeedsTokenization = Math.min(this._firstLineNeedsTokenization, lineIndex);\n    }\n    getBeginState(lineIndex) {\n        return this._lineBeginState.get(lineIndex);\n    }\n    setEndState(linesLength, lineIndex, endState) {\n        this._lineNeedsTokenization.set(lineIndex, false);\n        this._firstLineNeedsTokenization = lineIndex + 1;\n        // Check if this was the last line\n        if (lineIndex === linesLength - 1) {\n            return;\n        }\n        // Check if the end state has changed\n        const previousEndState = this._lineBeginState.get(lineIndex + 1);\n        if (previousEndState === null || !endState.equals(previousEndState)) {\n            this._lineBeginState.set(lineIndex + 1, endState);\n            this.markMustBeTokenized(lineIndex + 1);\n            return;\n        }\n        // Perhaps we can skip tokenizing some lines...\n        let i = lineIndex + 1;\n        while (i < linesLength) {\n            if (this._lineNeedsTokenization.get(i)) {\n                break;\n            }\n            i++;\n        }\n        this._firstLineNeedsTokenization = i;\n    }\n    //#region Editing\n    applyEdits(range, eolCount) {\n        this.markMustBeTokenized(range.startLineNumber - 1);\n        this._lineBeginState.delete(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        this._lineNeedsTokenization.delete(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        this._lineBeginState.insert(range.startLineNumber, eolCount);\n        this._lineNeedsTokenization.insert(range.startLineNumber, eolCount);\n    }\n}\nexport class TextModelTokenization extends Disposable {\n    constructor(_textModel, _languageIdCodec) {\n        super();\n        this._textModel = _textModel;\n        this._languageIdCodec = _languageIdCodec;\n        this._isScheduled = false;\n        this._isDisposed = false;\n        this._tokenizationStateStore = null;\n        this._register(TokenizationRegistry.onDidChange((e) => {\n            const languageId = this._textModel.getLanguageId();\n            if (e.changedLanguages.indexOf(languageId) === -1) {\n                return;\n            }\n            this._resetTokenizationState();\n            this._textModel.clearTokens();\n        }));\n        this._resetTokenizationState();\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    //#region TextModel events\n    handleDidChangeContent(e) {\n        if (e.isFlush) {\n            this._resetTokenizationState();\n            return;\n        }\n        if (this._tokenizationStateStore) {\n            for (let i = 0, len = e.changes.length; i < len; i++) {\n                const change = e.changes[i];\n                const [eolCount] = countEOL(change.text);\n                this._tokenizationStateStore.applyEdits(change.range, eolCount);\n            }\n        }\n        this._beginBackgroundTokenization();\n    }\n    handleDidChangeAttached() {\n        this._beginBackgroundTokenization();\n    }\n    handleDidChangeLanguage(e) {\n        this._resetTokenizationState();\n        this._textModel.clearTokens();\n    }\n    //#endregion\n    _resetTokenizationState() {\n        const [tokenizationSupport, initialState] = initializeTokenization(this._textModel);\n        if (tokenizationSupport && initialState) {\n            this._tokenizationStateStore = new TokenizationStateStore(tokenizationSupport, initialState);\n        }\n        else {\n            this._tokenizationStateStore = null;\n        }\n        this._beginBackgroundTokenization();\n    }\n    _beginBackgroundTokenization() {\n        if (this._isScheduled || !this._textModel.isAttachedToEditor() || !this._hasLinesToTokenize()) {\n            return;\n        }\n        this._isScheduled = true;\n        runWhenIdle((deadline) => {\n            this._isScheduled = false;\n            this._backgroundTokenizeWithDeadline(deadline);\n        });\n    }\n    /**\n     * Tokenize until the deadline occurs, but try to yield every 1-2ms.\n     */\n    _backgroundTokenizeWithDeadline(deadline) {\n        // Read the time remaining from the `deadline` immediately because it is unclear\n        // if the `deadline` object will be valid after execution leaves this function.\n        const endTime = Date.now() + deadline.timeRemaining();\n        const execute = () => {\n            if (this._isDisposed || !this._textModel.isAttachedToEditor() || !this._hasLinesToTokenize()) {\n                // disposed in the meantime or detached or finished\n                return;\n            }\n            this._backgroundTokenizeForAtLeast1ms();\n            if (Date.now() < endTime) {\n                // There is still time before reaching the deadline, so yield to the browser and then\n                // continue execution\n                setTimeout0(execute);\n            }\n            else {\n                // The deadline has been reached, so schedule a new idle callback if necessary\n                this._beginBackgroundTokenization();\n            }\n        };\n        execute();\n    }\n    /**\n     * Tokenize for at least 1ms.\n     */\n    _backgroundTokenizeForAtLeast1ms() {\n        const lineCount = this._textModel.getLineCount();\n        const builder = new ContiguousMultilineTokensBuilder();\n        const sw = StopWatch.create(false);\n        do {\n            if (sw.elapsed() > 1) {\n                // the comparison is intentionally > 1 and not >= 1 to ensure that\n                // a full millisecond has elapsed, given how microseconds are rounded\n                // to milliseconds\n                break;\n            }\n            const tokenizedLineNumber = this._tokenizeOneInvalidLine(builder);\n            if (tokenizedLineNumber >= lineCount) {\n                break;\n            }\n        } while (this._hasLinesToTokenize());\n        this._textModel.setTokens(builder.finalize(), !this._hasLinesToTokenize());\n    }\n    tokenizeViewport(startLineNumber, endLineNumber) {\n        const builder = new ContiguousMultilineTokensBuilder();\n        this._tokenizeViewport(builder, startLineNumber, endLineNumber);\n        this._textModel.setTokens(builder.finalize(), !this._hasLinesToTokenize());\n    }\n    reset() {\n        this._resetTokenizationState();\n        this._textModel.clearTokens();\n    }\n    forceTokenization(lineNumber) {\n        const builder = new ContiguousMultilineTokensBuilder();\n        this._updateTokensUntilLine(builder, lineNumber);\n        this._textModel.setTokens(builder.finalize(), !this._hasLinesToTokenize());\n    }\n    getTokenTypeIfInsertingCharacter(position, character) {\n        if (!this._tokenizationStateStore) {\n            return 0 /* Other */;\n        }\n        this.forceTokenization(position.lineNumber);\n        const lineStartState = this._tokenizationStateStore.getBeginState(position.lineNumber - 1);\n        if (!lineStartState) {\n            return 0 /* Other */;\n        }\n        const languageId = this._textModel.getLanguageId();\n        const lineContent = this._textModel.getLineContent(position.lineNumber);\n        // Create the text as if `character` was inserted\n        const text = (lineContent.substring(0, position.column - 1)\n            + character\n            + lineContent.substring(position.column - 1));\n        const r = safeTokenize(this._languageIdCodec, languageId, this._tokenizationStateStore.tokenizationSupport, text, true, lineStartState);\n        const lineTokens = new LineTokens(r.tokens, text, this._languageIdCodec);\n        if (lineTokens.getCount() === 0) {\n            return 0 /* Other */;\n        }\n        const tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n        return lineTokens.getStandardTokenType(tokenIndex);\n    }\n    tokenizeLineWithEdit(position, length, newText) {\n        const lineNumber = position.lineNumber;\n        const column = position.column;\n        if (!this._tokenizationStateStore) {\n            return null;\n        }\n        this.forceTokenization(lineNumber);\n        const lineStartState = this._tokenizationStateStore.getBeginState(lineNumber - 1);\n        if (!lineStartState) {\n            return null;\n        }\n        const curLineContent = this._textModel.getLineContent(lineNumber);\n        const newLineContent = curLineContent.substring(0, column - 1)\n            + newText + curLineContent.substring(column - 1 + length);\n        const languageId = this._textModel.getLanguageIdAtPosition(lineNumber, 0);\n        const result = safeTokenize(this._languageIdCodec, languageId, this._tokenizationStateStore.tokenizationSupport, newLineContent, true, lineStartState);\n        const lineTokens = new LineTokens(result.tokens, newLineContent, this._languageIdCodec);\n        return lineTokens;\n    }\n    isCheapToTokenize(lineNumber) {\n        if (!this._tokenizationStateStore) {\n            return true;\n        }\n        const firstInvalidLineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\n        if (lineNumber > firstInvalidLineNumber) {\n            return false;\n        }\n        if (lineNumber < firstInvalidLineNumber) {\n            return true;\n        }\n        if (this._textModel.getLineLength(lineNumber) < 2048 /* CHEAP_TOKENIZATION_LENGTH_LIMIT */) {\n            return true;\n        }\n        return false;\n    }\n    _hasLinesToTokenize() {\n        if (!this._tokenizationStateStore) {\n            return false;\n        }\n        return (this._tokenizationStateStore.invalidLineStartIndex < this._textModel.getLineCount());\n    }\n    _tokenizeOneInvalidLine(builder) {\n        if (!this._tokenizationStateStore || !this._hasLinesToTokenize()) {\n            return this._textModel.getLineCount() + 1;\n        }\n        const lineNumber = this._tokenizationStateStore.invalidLineStartIndex + 1;\n        this._updateTokensUntilLine(builder, lineNumber);\n        return lineNumber;\n    }\n    _updateTokensUntilLine(builder, lineNumber) {\n        if (!this._tokenizationStateStore) {\n            return;\n        }\n        const languageId = this._textModel.getLanguageId();\n        const linesLength = this._textModel.getLineCount();\n        const endLineIndex = lineNumber - 1;\n        // Validate all states up to and including endLineIndex\n        for (let lineIndex = this._tokenizationStateStore.invalidLineStartIndex; lineIndex <= endLineIndex; lineIndex++) {\n            const text = this._textModel.getLineContent(lineIndex + 1);\n            const lineStartState = this._tokenizationStateStore.getBeginState(lineIndex);\n            const r = safeTokenize(this._languageIdCodec, languageId, this._tokenizationStateStore.tokenizationSupport, text, true, lineStartState);\n            builder.add(lineIndex + 1, r.tokens);\n            this._tokenizationStateStore.setEndState(linesLength, lineIndex, r.endState);\n            lineIndex = this._tokenizationStateStore.invalidLineStartIndex - 1; // -1 because the outer loop increments it\n        }\n    }\n    _tokenizeViewport(builder, startLineNumber, endLineNumber) {\n        if (!this._tokenizationStateStore) {\n            // nothing to do\n            return;\n        }\n        if (endLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\n            // nothing to do\n            return;\n        }\n        if (startLineNumber <= this._tokenizationStateStore.invalidLineStartIndex) {\n            // tokenization has reached the viewport start...\n            this._updateTokensUntilLine(builder, endLineNumber);\n            return;\n        }\n        let nonWhitespaceColumn = this._textModel.getLineFirstNonWhitespaceColumn(startLineNumber);\n        const fakeLines = [];\n        let initialState = null;\n        for (let i = startLineNumber - 1; nonWhitespaceColumn > 1 && i >= 1; i--) {\n            const newNonWhitespaceIndex = this._textModel.getLineFirstNonWhitespaceColumn(i);\n            if (newNonWhitespaceIndex === 0) {\n                continue;\n            }\n            if (newNonWhitespaceIndex < nonWhitespaceColumn) {\n                initialState = this._tokenizationStateStore.getBeginState(i - 1);\n                if (initialState) {\n                    break;\n                }\n                fakeLines.push(this._textModel.getLineContent(i));\n                nonWhitespaceColumn = newNonWhitespaceIndex;\n            }\n        }\n        if (!initialState) {\n            initialState = this._tokenizationStateStore.initialState;\n        }\n        const languageId = this._textModel.getLanguageId();\n        let state = initialState;\n        for (let i = fakeLines.length - 1; i >= 0; i--) {\n            const r = safeTokenize(this._languageIdCodec, languageId, this._tokenizationStateStore.tokenizationSupport, fakeLines[i], false, state);\n            state = r.endState;\n        }\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const text = this._textModel.getLineContent(lineNumber);\n            const r = safeTokenize(this._languageIdCodec, languageId, this._tokenizationStateStore.tokenizationSupport, text, true, state);\n            builder.add(lineNumber, r.tokens);\n            this._tokenizationStateStore.markMustBeTokenized(lineNumber - 1);\n            state = r.endState;\n        }\n    }\n}\nfunction initializeTokenization(textModel) {\n    if (textModel.isTooLargeForTokenization()) {\n        return [null, null];\n    }\n    const tokenizationSupport = TokenizationRegistry.get(textModel.getLanguageId());\n    if (!tokenizationSupport) {\n        return [null, null];\n    }\n    let initialState;\n    try {\n        initialState = tokenizationSupport.getInitialState();\n    }\n    catch (e) {\n        onUnexpectedError(e);\n        return [null, null];\n    }\n    return [tokenizationSupport, initialState];\n}\nfunction safeTokenize(languageIdCodec, languageId, tokenizationSupport, text, hasEOL, state) {\n    let r = null;\n    if (tokenizationSupport) {\n        try {\n            r = tokenizationSupport.tokenizeEncoded(text, hasEOL, state.clone());\n        }\n        catch (e) {\n            onUnexpectedError(e);\n        }\n    }\n    if (!r) {\n        r = nullTokenizeEncoded(languageIdCodec.encodeLanguageId(languageId), state);\n    }\n    LineTokens.convertToEndOffset(r.tokens, text.length);\n    return r;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LineTokens } from './lineTokens.js';\nexport const EMPTY_LINE_TOKENS = (new Uint32Array(0)).buffer;\nexport class ContiguousTokensEditing {\n    static deleteBeginning(lineTokens, toChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        return ContiguousTokensEditing.delete(lineTokens, 0, toChIndex);\n    }\n    static deleteEnding(lineTokens, fromChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const lineTextLength = tokens[tokens.length - 2];\n        return ContiguousTokensEditing.delete(lineTokens, fromChIndex, lineTextLength);\n    }\n    static delete(lineTokens, fromChIndex, toChIndex) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS || fromChIndex === toChIndex) {\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const tokensCount = (tokens.length >>> 1);\n        // special case: deleting everything\n        if (fromChIndex === 0 && tokens[tokens.length - 2] === toChIndex) {\n            return EMPTY_LINE_TOKENS;\n        }\n        const fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, fromChIndex);\n        const fromTokenStartOffset = (fromTokenIndex > 0 ? tokens[(fromTokenIndex - 1) << 1] : 0);\n        const fromTokenEndOffset = tokens[fromTokenIndex << 1];\n        if (toChIndex < fromTokenEndOffset) {\n            // the delete range is inside a single token\n            const delta = (toChIndex - fromChIndex);\n            for (let i = fromTokenIndex; i < tokensCount; i++) {\n                tokens[i << 1] -= delta;\n            }\n            return lineTokens;\n        }\n        let dest;\n        let lastEnd;\n        if (fromTokenStartOffset !== fromChIndex) {\n            tokens[fromTokenIndex << 1] = fromChIndex;\n            dest = ((fromTokenIndex + 1) << 1);\n            lastEnd = fromChIndex;\n        }\n        else {\n            dest = (fromTokenIndex << 1);\n            lastEnd = fromTokenStartOffset;\n        }\n        const delta = (toChIndex - fromChIndex);\n        for (let tokenIndex = fromTokenIndex + 1; tokenIndex < tokensCount; tokenIndex++) {\n            const tokenEndOffset = tokens[tokenIndex << 1] - delta;\n            if (tokenEndOffset > lastEnd) {\n                tokens[dest++] = tokenEndOffset;\n                tokens[dest++] = tokens[(tokenIndex << 1) + 1];\n                lastEnd = tokenEndOffset;\n            }\n        }\n        if (dest === tokens.length) {\n            // nothing to trim\n            return lineTokens;\n        }\n        const tmp = new Uint32Array(dest);\n        tmp.set(tokens.subarray(0, dest), 0);\n        return tmp.buffer;\n    }\n    static append(lineTokens, _otherTokens) {\n        if (_otherTokens === EMPTY_LINE_TOKENS) {\n            return lineTokens;\n        }\n        if (lineTokens === EMPTY_LINE_TOKENS) {\n            return _otherTokens;\n        }\n        if (lineTokens === null) {\n            return lineTokens;\n        }\n        if (_otherTokens === null) {\n            // cannot determine combined line length...\n            return null;\n        }\n        const myTokens = toUint32Array(lineTokens);\n        const otherTokens = toUint32Array(_otherTokens);\n        const otherTokensCount = (otherTokens.length >>> 1);\n        const result = new Uint32Array(myTokens.length + otherTokens.length);\n        result.set(myTokens, 0);\n        let dest = myTokens.length;\n        const delta = myTokens[myTokens.length - 2];\n        for (let i = 0; i < otherTokensCount; i++) {\n            result[dest++] = otherTokens[(i << 1)] + delta;\n            result[dest++] = otherTokens[(i << 1) + 1];\n        }\n        return result.buffer;\n    }\n    static insert(lineTokens, chIndex, textLength) {\n        if (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n            // nothing to do\n            return lineTokens;\n        }\n        const tokens = toUint32Array(lineTokens);\n        const tokensCount = (tokens.length >>> 1);\n        let fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, chIndex);\n        if (fromTokenIndex > 0) {\n            const fromTokenStartOffset = tokens[(fromTokenIndex - 1) << 1];\n            if (fromTokenStartOffset === chIndex) {\n                fromTokenIndex--;\n            }\n        }\n        for (let tokenIndex = fromTokenIndex; tokenIndex < tokensCount; tokenIndex++) {\n            tokens[tokenIndex << 1] += textLength;\n        }\n        return lineTokens;\n    }\n}\nexport function toUint32Array(arr) {\n    if (arr instanceof Uint32Array) {\n        return arr;\n    }\n    else {\n        return new Uint32Array(arr);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { Position } from '../core/position.js';\nimport { ContiguousTokensEditing, EMPTY_LINE_TOKENS, toUint32Array } from './contiguousTokensEditing.js';\nimport { LineTokens } from './lineTokens.js';\nimport { TokenMetadata } from '../languages.js';\n/**\n * Represents contiguous tokens in a text model.\n */\nexport class ContiguousTokensStore {\n    constructor(languageIdCodec) {\n        this._lineTokens = [];\n        this._len = 0;\n        this._languageIdCodec = languageIdCodec;\n    }\n    flush() {\n        this._lineTokens = [];\n        this._len = 0;\n    }\n    getTokens(topLevelLanguageId, lineIndex, lineText) {\n        let rawLineTokens = null;\n        if (lineIndex < this._len) {\n            rawLineTokens = this._lineTokens[lineIndex];\n        }\n        if (rawLineTokens !== null && rawLineTokens !== EMPTY_LINE_TOKENS) {\n            return new LineTokens(toUint32Array(rawLineTokens), lineText, this._languageIdCodec);\n        }\n        const lineTokens = new Uint32Array(2);\n        lineTokens[0] = lineText.length;\n        lineTokens[1] = getDefaultMetadata(this._languageIdCodec.encodeLanguageId(topLevelLanguageId));\n        return new LineTokens(lineTokens, lineText, this._languageIdCodec);\n    }\n    static _massageTokens(topLevelLanguageId, lineTextLength, _tokens) {\n        const tokens = _tokens ? toUint32Array(_tokens) : null;\n        if (lineTextLength === 0) {\n            let hasDifferentLanguageId = false;\n            if (tokens && tokens.length > 1) {\n                hasDifferentLanguageId = (TokenMetadata.getLanguageId(tokens[1]) !== topLevelLanguageId);\n            }\n            if (!hasDifferentLanguageId) {\n                return EMPTY_LINE_TOKENS;\n            }\n        }\n        if (!tokens || tokens.length === 0) {\n            const tokens = new Uint32Array(2);\n            tokens[0] = lineTextLength;\n            tokens[1] = getDefaultMetadata(topLevelLanguageId);\n            return tokens.buffer;\n        }\n        // Ensure the last token covers the end of the text\n        tokens[tokens.length - 2] = lineTextLength;\n        if (tokens.byteOffset === 0 && tokens.byteLength === tokens.buffer.byteLength) {\n            // Store directly the ArrayBuffer pointer to save an object\n            return tokens.buffer;\n        }\n        return tokens;\n    }\n    _ensureLine(lineIndex) {\n        while (lineIndex >= this._len) {\n            this._lineTokens[this._len] = null;\n            this._len++;\n        }\n    }\n    _deleteLines(start, deleteCount) {\n        if (deleteCount === 0) {\n            return;\n        }\n        if (start + deleteCount > this._len) {\n            deleteCount = this._len - start;\n        }\n        this._lineTokens.splice(start, deleteCount);\n        this._len -= deleteCount;\n    }\n    _insertLines(insertIndex, insertCount) {\n        if (insertCount === 0) {\n            return;\n        }\n        const lineTokens = [];\n        for (let i = 0; i < insertCount; i++) {\n            lineTokens[i] = null;\n        }\n        this._lineTokens = arrays.arrayInsert(this._lineTokens, insertIndex, lineTokens);\n        this._len += insertCount;\n    }\n    setTokens(topLevelLanguageId, lineIndex, lineTextLength, _tokens, checkEquality) {\n        const tokens = ContiguousTokensStore._massageTokens(this._languageIdCodec.encodeLanguageId(topLevelLanguageId), lineTextLength, _tokens);\n        this._ensureLine(lineIndex);\n        const oldTokens = this._lineTokens[lineIndex];\n        this._lineTokens[lineIndex] = tokens;\n        if (checkEquality) {\n            return !ContiguousTokensStore._equals(oldTokens, tokens);\n        }\n        return false;\n    }\n    static _equals(_a, _b) {\n        if (!_a || !_b) {\n            return !_a && !_b;\n        }\n        const a = toUint32Array(_a);\n        const b = toUint32Array(_b);\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //#region Editing\n    acceptEdit(range, eolCount, firstLineLength) {\n        this._acceptDeleteRange(range);\n        this._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount, firstLineLength);\n    }\n    _acceptDeleteRange(range) {\n        const firstLineIndex = range.startLineNumber - 1;\n        if (firstLineIndex >= this._len) {\n            return;\n        }\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            this._lineTokens[firstLineIndex] = ContiguousTokensEditing.delete(this._lineTokens[firstLineIndex], range.startColumn - 1, range.endColumn - 1);\n            return;\n        }\n        this._lineTokens[firstLineIndex] = ContiguousTokensEditing.deleteEnding(this._lineTokens[firstLineIndex], range.startColumn - 1);\n        const lastLineIndex = range.endLineNumber - 1;\n        let lastLineTokens = null;\n        if (lastLineIndex < this._len) {\n            lastLineTokens = ContiguousTokensEditing.deleteBeginning(this._lineTokens[lastLineIndex], range.endColumn - 1);\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._lineTokens[firstLineIndex] = ContiguousTokensEditing.append(this._lineTokens[firstLineIndex], lastLineTokens);\n        // Delete middle lines\n        this._deleteLines(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n    }\n    _acceptInsertText(position, eolCount, firstLineLength) {\n        if (eolCount === 0 && firstLineLength === 0) {\n            // Nothing to insert\n            return;\n        }\n        const lineIndex = position.lineNumber - 1;\n        if (lineIndex >= this._len) {\n            return;\n        }\n        if (eolCount === 0) {\n            // Inserting text on one line\n            this._lineTokens[lineIndex] = ContiguousTokensEditing.insert(this._lineTokens[lineIndex], position.column - 1, firstLineLength);\n            return;\n        }\n        this._lineTokens[lineIndex] = ContiguousTokensEditing.deleteEnding(this._lineTokens[lineIndex], position.column - 1);\n        this._lineTokens[lineIndex] = ContiguousTokensEditing.insert(this._lineTokens[lineIndex], position.column - 1, firstLineLength);\n        this._insertLines(position.lineNumber, eolCount);\n    }\n}\nfunction getDefaultMetadata(topLevelLanguageId) {\n    return ((topLevelLanguageId << 0 /* LANGUAGEID_OFFSET */)\n        | (0 /* Other */ << 8 /* TOKEN_TYPE_OFFSET */)\n        | (0 /* None */ << 10 /* FONT_STYLE_OFFSET */)\n        | (1 /* DefaultForeground */ << 14 /* FOREGROUND_OFFSET */)\n        | (2 /* DefaultBackground */ << 23 /* BACKGROUND_OFFSET */)) >>> 0;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { LineTokens } from './lineTokens.js';\n/**\n * Represents sparse tokens in a text model.\n */\nexport class SparseTokensStore {\n    constructor(languageIdCodec) {\n        this._pieces = [];\n        this._isComplete = false;\n        this._languageIdCodec = languageIdCodec;\n    }\n    flush() {\n        this._pieces = [];\n        this._isComplete = false;\n    }\n    isEmpty() {\n        return (this._pieces.length === 0);\n    }\n    set(pieces, isComplete) {\n        this._pieces = pieces || [];\n        this._isComplete = isComplete;\n    }\n    setPartial(_range, pieces) {\n        // console.log(`setPartial ${_range} ${pieces.map(p => p.toString()).join(', ')}`);\n        let range = _range;\n        if (pieces.length > 0) {\n            const _firstRange = pieces[0].getRange();\n            const _lastRange = pieces[pieces.length - 1].getRange();\n            if (!_firstRange || !_lastRange) {\n                return _range;\n            }\n            range = _range.plusRange(_firstRange).plusRange(_lastRange);\n        }\n        let insertPosition = null;\n        for (let i = 0, len = this._pieces.length; i < len; i++) {\n            const piece = this._pieces[i];\n            if (piece.endLineNumber < range.startLineNumber) {\n                // this piece is before the range\n                continue;\n            }\n            if (piece.startLineNumber > range.endLineNumber) {\n                // this piece is after the range, so mark the spot before this piece\n                // as a good insertion position and stop looping\n                insertPosition = insertPosition || { index: i };\n                break;\n            }\n            // this piece might intersect with the range\n            piece.removeTokens(range);\n            if (piece.isEmpty()) {\n                // remove the piece if it became empty\n                this._pieces.splice(i, 1);\n                i--;\n                len--;\n                continue;\n            }\n            if (piece.endLineNumber < range.startLineNumber) {\n                // after removal, this piece is before the range\n                continue;\n            }\n            if (piece.startLineNumber > range.endLineNumber) {\n                // after removal, this piece is after the range\n                insertPosition = insertPosition || { index: i };\n                continue;\n            }\n            // after removal, this piece contains the range\n            const [a, b] = piece.split(range);\n            if (a.isEmpty()) {\n                // this piece is actually after the range\n                insertPosition = insertPosition || { index: i };\n                continue;\n            }\n            if (b.isEmpty()) {\n                // this piece is actually before the range\n                continue;\n            }\n            this._pieces.splice(i, 1, a, b);\n            i++;\n            len++;\n            insertPosition = insertPosition || { index: i };\n        }\n        insertPosition = insertPosition || { index: this._pieces.length };\n        if (pieces.length > 0) {\n            this._pieces = arrays.arrayInsert(this._pieces, insertPosition.index, pieces);\n        }\n        // console.log(`I HAVE ${this._pieces.length} pieces`);\n        // console.log(`${this._pieces.map(p => p.toString()).join('\\n')}`);\n        return range;\n    }\n    isComplete() {\n        return this._isComplete;\n    }\n    addSparseTokens(lineNumber, aTokens) {\n        const pieces = this._pieces;\n        if (pieces.length === 0) {\n            return aTokens;\n        }\n        const pieceIndex = SparseTokensStore._findFirstPieceWithLine(pieces, lineNumber);\n        const bTokens = pieces[pieceIndex].getLineTokens(lineNumber);\n        if (!bTokens) {\n            return aTokens;\n        }\n        const aLen = aTokens.getCount();\n        const bLen = bTokens.getCount();\n        let aIndex = 0;\n        const result = [];\n        let resultLen = 0;\n        let lastEndOffset = 0;\n        const emitToken = (endOffset, metadata) => {\n            if (endOffset === lastEndOffset) {\n                return;\n            }\n            lastEndOffset = endOffset;\n            result[resultLen++] = endOffset;\n            result[resultLen++] = metadata;\n        };\n        for (let bIndex = 0; bIndex < bLen; bIndex++) {\n            const bStartCharacter = bTokens.getStartCharacter(bIndex);\n            const bEndCharacter = bTokens.getEndCharacter(bIndex);\n            const bMetadata = bTokens.getMetadata(bIndex);\n            const bMask = (((bMetadata & 1 /* SEMANTIC_USE_ITALIC */) ? 1024 /* ITALIC_MASK */ : 0)\n                | ((bMetadata & 2 /* SEMANTIC_USE_BOLD */) ? 2048 /* BOLD_MASK */ : 0)\n                | ((bMetadata & 4 /* SEMANTIC_USE_UNDERLINE */) ? 4096 /* UNDERLINE_MASK */ : 0)\n                | ((bMetadata & 8 /* SEMANTIC_USE_STRIKETHROUGH */) ? 8192 /* STRIKETHROUGH_MASK */ : 0)\n                | ((bMetadata & 16 /* SEMANTIC_USE_FOREGROUND */) ? 8372224 /* FOREGROUND_MASK */ : 0)\n                | ((bMetadata & 32 /* SEMANTIC_USE_BACKGROUND */) ? 4286578688 /* BACKGROUND_MASK */ : 0)) >>> 0;\n            const aMask = (~bMask) >>> 0;\n            // push any token from `a` that is before `b`\n            while (aIndex < aLen && aTokens.getEndOffset(aIndex) <= bStartCharacter) {\n                emitToken(aTokens.getEndOffset(aIndex), aTokens.getMetadata(aIndex));\n                aIndex++;\n            }\n            // push the token from `a` if it intersects the token from `b`\n            if (aIndex < aLen && aTokens.getStartOffset(aIndex) < bStartCharacter) {\n                emitToken(bStartCharacter, aTokens.getMetadata(aIndex));\n            }\n            // skip any tokens from `a` that are contained inside `b`\n            while (aIndex < aLen && aTokens.getEndOffset(aIndex) < bEndCharacter) {\n                emitToken(aTokens.getEndOffset(aIndex), (aTokens.getMetadata(aIndex) & aMask) | (bMetadata & bMask));\n                aIndex++;\n            }\n            if (aIndex < aLen) {\n                emitToken(bEndCharacter, (aTokens.getMetadata(aIndex) & aMask) | (bMetadata & bMask));\n                if (aTokens.getEndOffset(aIndex) === bEndCharacter) {\n                    // `a` ends exactly at the same spot as `b`!\n                    aIndex++;\n                }\n            }\n            else {\n                const aMergeIndex = Math.min(Math.max(0, aIndex - 1), aLen - 1);\n                // push the token from `b`\n                emitToken(bEndCharacter, (aTokens.getMetadata(aMergeIndex) & aMask) | (bMetadata & bMask));\n            }\n        }\n        // push the remaining tokens from `a`\n        while (aIndex < aLen) {\n            emitToken(aTokens.getEndOffset(aIndex), aTokens.getMetadata(aIndex));\n            aIndex++;\n        }\n        return new LineTokens(new Uint32Array(result), aTokens.getLineContent(), this._languageIdCodec);\n    }\n    static _findFirstPieceWithLine(pieces, lineNumber) {\n        let low = 0;\n        let high = pieces.length - 1;\n        while (low < high) {\n            let mid = low + Math.floor((high - low) / 2);\n            if (pieces[mid].endLineNumber < lineNumber) {\n                low = mid + 1;\n            }\n            else if (pieces[mid].startLineNumber > lineNumber) {\n                high = mid - 1;\n            }\n            else {\n                while (mid > low && pieces[mid - 1].startLineNumber <= lineNumber && lineNumber <= pieces[mid - 1].endLineNumber) {\n                    mid--;\n                }\n                return mid;\n            }\n        }\n        return low;\n    }\n    acceptEdit(range, eolCount, firstLineLength, lastLineLength, firstCharCode) {\n        for (const piece of this._pieces) {\n            piece.acceptEdit(range, eolCount, firstLineLength, lastLineLength, firstCharCode);\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IUndoRedoService = createDecorator('undoRedoService');\nexport class ResourceEditStackSnapshot {\n    constructor(resource, elements) {\n        this.resource = resource;\n        this.elements = elements;\n    }\n}\nexport class UndoRedoGroup {\n    constructor() {\n        this.id = UndoRedoGroup._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoGroup._ID = 0;\nUndoRedoGroup.None = new UndoRedoGroup();\nexport class UndoRedoSource {\n    constructor() {\n        this.id = UndoRedoSource._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoSource._ID = 0;\nUndoRedoSource.None = new UndoRedoSource();\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nfunction _normalizeIndentationFromWhitespace(str, indentSize, insertSpaces) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += indentSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / indentSize);\n        spacesCnt = spacesCnt % indentSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\nexport function normalizeIndentation(str, indentSize, insertSpaces) {\n    let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(str);\n    if (firstNonWhitespaceIndex === -1) {\n        firstNonWhitespaceIndex = str.length;\n    }\n    return _normalizeIndentationFromWhitespace(str.substring(0, firstNonWhitespaceIndex), indentSize, insertSpaces) + str.substring(firstNonWhitespaceIndex);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ArrayQueue } from '../../../base/common/arrays.js';\nimport { Color } from '../../../base/common/color.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { combinedDisposable, Disposable } from '../../../base/common/lifecycle.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport * as model from '../model.js';\nimport { BracketPairsTextModelPart } from './bracketPairsTextModelPart/bracketPairsImpl.js';\nimport { ColorizedBracketPairsDecorationProvider } from './bracketPairsTextModelPart/colorizedBracketPairsDecorationProvider.js';\nimport { EditStack } from './editStack.js';\nimport { GuidesTextModelPart } from './guidesTextModelPart.js';\nimport { guessIndentation } from './indentationGuesser.js';\nimport { IntervalNode, IntervalTree, recomputeMaxEnd } from './intervalTree.js';\nimport { PieceTreeTextBuffer } from './pieceTreeTextBuffer/pieceTreeTextBuffer.js';\nimport { PieceTreeTextBufferBuilder } from './pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js';\nimport { InternalModelContentChangeEvent, LineInjectedText, ModelInjectedTextChangedEvent, ModelRawContentChangedEvent, ModelRawEOLChanged, ModelRawFlush, ModelRawLineChanged, ModelRawLinesDeleted, ModelRawLinesInserted } from '../textModelEvents.js';\nimport { SearchParams, TextModelSearch } from './textModelSearch.js';\nimport { TextModelTokenization } from './textModelTokens.js';\nimport { countEOL } from '../core/eolCounter.js';\nimport { ContiguousTokensStore } from '../tokens/contiguousTokensStore.js';\nimport { SparseTokensStore } from '../tokens/sparseTokensStore.js';\nimport { getWordAtText } from '../core/wordHelper.js';\nimport { ILanguageConfigurationService } from '../languages/languageConfigurationRegistry.js';\nimport { ILanguageService } from '../languages/language.js';\nimport { IUndoRedoService } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/textModelDefaults.js';\nimport { normalizeIndentation } from '../core/indentation.js';\nfunction createTextBufferBuilder() {\n    return new PieceTreeTextBufferBuilder();\n}\nexport function createTextBufferFactory(text) {\n    const builder = createTextBufferBuilder();\n    builder.acceptChunk(text);\n    return builder.finish();\n}\nexport function createTextBuffer(value, defaultEOL) {\n    const factory = (typeof value === 'string' ? createTextBufferFactory(value) : value);\n    return factory.create(defaultEOL);\n}\nlet MODEL_ID = 0;\nconst LIMIT_FIND_COUNT = 999;\nexport const LONG_LINE_BOUNDARY = 10000;\nclass TextModelSnapshot {\n    constructor(source) {\n        this._source = source;\n        this._eos = false;\n    }\n    read() {\n        if (this._eos) {\n            return null;\n        }\n        const result = [];\n        let resultCnt = 0;\n        let resultLength = 0;\n        do {\n            const tmp = this._source.read();\n            if (tmp === null) {\n                // end-of-stream\n                this._eos = true;\n                if (resultCnt === 0) {\n                    return null;\n                }\n                else {\n                    return result.join('');\n                }\n            }\n            if (tmp.length > 0) {\n                result[resultCnt++] = tmp;\n                resultLength += tmp.length;\n            }\n            if (resultLength >= 64 * 1024) {\n                return result.join('');\n            }\n        } while (true);\n    }\n}\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\nlet TextModel = class TextModel extends Disposable {\n    constructor(source, languageId, creationOptions, associatedResource = null, _undoRedoService, _languageService, _languageConfigurationService) {\n        super();\n        this._undoRedoService = _undoRedoService;\n        this._languageService = _languageService;\n        this._languageConfigurationService = _languageConfigurationService;\n        //#region Events\n        this._onWillDispose = this._register(new Emitter());\n        this.onWillDispose = this._onWillDispose.event;\n        this._onDidChangeDecorations = this._register(new DidChangeDecorationsEmitter(affectedInjectedTextLines => this.handleBeforeFireDecorationsChangedEvent(affectedInjectedTextLines)));\n        this.onDidChangeDecorations = this._onDidChangeDecorations.event;\n        this._onDidChangeLanguage = this._register(new Emitter());\n        this.onDidChangeLanguage = this._onDidChangeLanguage.event;\n        this._onDidChangeLanguageConfiguration = this._register(new Emitter());\n        this.onDidChangeLanguageConfiguration = this._onDidChangeLanguageConfiguration.event;\n        this._onDidChangeTokens = this._register(new Emitter());\n        this.onDidChangeTokens = this._onDidChangeTokens.event;\n        this._onDidChangeOptions = this._register(new Emitter());\n        this.onDidChangeOptions = this._onDidChangeOptions.event;\n        this._onDidChangeAttached = this._register(new Emitter());\n        this.onDidChangeAttached = this._onDidChangeAttached.event;\n        this._onDidChangeInjectedText = this._register(new Emitter());\n        this._eventEmitter = this._register(new DidChangeContentEmitter());\n        this._backgroundTokenizationState = 0 /* Uninitialized */;\n        this._onBackgroundTokenizationStateChanged = this._register(new Emitter());\n        // Generate a new unique model id\n        MODEL_ID++;\n        this.id = '$model' + MODEL_ID;\n        this.isForSimpleWidget = creationOptions.isForSimpleWidget;\n        if (typeof associatedResource === 'undefined' || associatedResource === null) {\n            this._associatedResource = URI.parse('inmemory://model/' + MODEL_ID);\n        }\n        else {\n            this._associatedResource = associatedResource;\n        }\n        this._attachedEditorCount = 0;\n        const { textBuffer, disposable } = createTextBuffer(source, creationOptions.defaultEOL);\n        this._buffer = textBuffer;\n        this._bufferDisposable = disposable;\n        this._options = TextModel.resolveOptions(this._buffer, creationOptions);\n        const bufferLineCount = this._buffer.getLineCount();\n        const bufferTextLength = this._buffer.getValueLengthInRange(new Range(1, 1, bufferLineCount, this._buffer.getLineLength(bufferLineCount) + 1), 0 /* TextDefined */);\n        // !!! Make a decision in the ctor and permanently respect this decision !!!\n        // If a model is too large at construction time, it will never get tokenized,\n        // under no circumstances.\n        if (creationOptions.largeFileOptimizations) {\n            this._isTooLargeForTokenization = ((bufferTextLength > TextModel.LARGE_FILE_SIZE_THRESHOLD)\n                || (bufferLineCount > TextModel.LARGE_FILE_LINE_COUNT_THRESHOLD));\n        }\n        else {\n            this._isTooLargeForTokenization = false;\n        }\n        this._isTooLargeForSyncing = (bufferTextLength > TextModel.MODEL_SYNC_LIMIT);\n        this._versionId = 1;\n        this._alternativeVersionId = 1;\n        this._initialUndoRedoSnapshot = null;\n        this._isDisposed = false;\n        this._isDisposing = false;\n        this._languageId = languageId;\n        this._languageRegistryListener = this._languageConfigurationService.onDidChange(e => {\n            if (e.affects(this._languageId)) {\n                this._onDidChangeLanguageConfiguration.fire({});\n            }\n        });\n        this._instanceId = strings.singleLetterHash(MODEL_ID);\n        this._lastDecorationId = 0;\n        this._decorations = Object.create(null);\n        this._decorationsTree = new DecorationsTrees();\n        this._commandManager = new EditStack(this, this._undoRedoService);\n        this._isUndoing = false;\n        this._isRedoing = false;\n        this._trimAutoWhitespaceLines = null;\n        this._tokens = new ContiguousTokensStore(this._languageService.languageIdCodec);\n        this._semanticTokens = new SparseTokensStore(this._languageService.languageIdCodec);\n        this._tokenization = new TextModelTokenization(this, this._languageService.languageIdCodec);\n        this._bracketPairColorizer = this._register(new BracketPairsTextModelPart(this, this._languageConfigurationService));\n        this._guidesTextModelPart = this._register(new GuidesTextModelPart(this, this._languageConfigurationService));\n        this._decorationProvider = this._register(new ColorizedBracketPairsDecorationProvider(this));\n        this._register(this._decorationProvider.onDidChange(() => {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            this._onDidChangeDecorations.fire();\n            this._onDidChangeDecorations.endDeferredEmit();\n        }));\n    }\n    static resolveOptions(textBuffer, options) {\n        if (options.detectIndentation) {\n            const guessedIndentation = guessIndentation(textBuffer, options.tabSize, options.insertSpaces);\n            return new model.TextModelResolvedOptions({\n                tabSize: guessedIndentation.tabSize,\n                indentSize: guessedIndentation.tabSize,\n                insertSpaces: guessedIndentation.insertSpaces,\n                trimAutoWhitespace: options.trimAutoWhitespace,\n                defaultEOL: options.defaultEOL,\n                bracketPairColorizationOptions: options.bracketPairColorizationOptions,\n            });\n        }\n        return new model.TextModelResolvedOptions({\n            tabSize: options.tabSize,\n            indentSize: options.indentSize,\n            insertSpaces: options.insertSpaces,\n            trimAutoWhitespace: options.trimAutoWhitespace,\n            defaultEOL: options.defaultEOL,\n            bracketPairColorizationOptions: options.bracketPairColorizationOptions,\n        });\n    }\n    onDidChangeContent(listener) {\n        return this._eventEmitter.slowEvent((e) => listener(e.contentChangedEvent));\n    }\n    onDidChangeContentOrInjectedText(listener) {\n        return combinedDisposable(this._eventEmitter.fastEvent(e => listener(e.rawContentChangedEvent)), this._onDidChangeInjectedText.event(e => listener(e)));\n    }\n    get bracketPairs() { return this._bracketPairColorizer; }\n    get guides() { return this._guidesTextModelPart; }\n    get backgroundTokenizationState() {\n        return this._backgroundTokenizationState;\n    }\n    handleTokenizationProgress(completed) {\n        if (this._backgroundTokenizationState === 2 /* Completed */) {\n            // We already did a full tokenization and don't go back to progressing.\n            return;\n        }\n        const newState = completed ? 2 /* Completed */ : 1 /* InProgress */;\n        if (this._backgroundTokenizationState !== newState) {\n            this._backgroundTokenizationState = newState;\n            this._bracketPairColorizer.handleDidChangeBackgroundTokenizationState();\n            this._onBackgroundTokenizationStateChanged.fire();\n        }\n    }\n    dispose() {\n        this._isDisposing = true;\n        this._onWillDispose.fire();\n        this._languageRegistryListener.dispose();\n        this._tokenization.dispose();\n        this._isDisposed = true;\n        super.dispose();\n        this._bufferDisposable.dispose();\n        this._isDisposing = false;\n        // Manually release reference to previous text buffer to avoid large leaks\n        // in case someone leaks a TextModel reference\n        const emptyDisposedTextBuffer = new PieceTreeTextBuffer([], '', '\\n', false, false, true, true);\n        emptyDisposedTextBuffer.dispose();\n        this._buffer = emptyDisposedTextBuffer;\n        this._bufferDisposable = Disposable.None;\n    }\n    _assertNotDisposed() {\n        if (this._isDisposed) {\n            throw new Error('Model is disposed!');\n        }\n    }\n    _emitContentChangedEvent(rawChange, change) {\n        if (this._isDisposing) {\n            // Do not confuse listeners by emitting any event after disposing\n            return;\n        }\n        this._bracketPairColorizer.handleDidChangeContent(change);\n        this._tokenization.handleDidChangeContent(change);\n        this._eventEmitter.fire(new InternalModelContentChangeEvent(rawChange, change));\n    }\n    setValue(value) {\n        this._assertNotDisposed();\n        if (value === null) {\n            // There's nothing to do\n            return;\n        }\n        const { textBuffer, disposable } = createTextBuffer(value, this._options.defaultEOL);\n        this._setValueFromTextBuffer(textBuffer, disposable);\n    }\n    _createContentChanged2(range, rangeOffset, rangeLength, text, isUndoing, isRedoing, isFlush) {\n        return {\n            changes: [{\n                    range: range,\n                    rangeOffset: rangeOffset,\n                    rangeLength: rangeLength,\n                    text: text,\n                }],\n            eol: this._buffer.getEOL(),\n            versionId: this.getVersionId(),\n            isUndoing: isUndoing,\n            isRedoing: isRedoing,\n            isFlush: isFlush\n        };\n    }\n    _setValueFromTextBuffer(textBuffer, textBufferDisposable) {\n        this._assertNotDisposed();\n        const oldFullModelRange = this.getFullModelRange();\n        const oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n        const endLineNumber = this.getLineCount();\n        const endColumn = this.getLineMaxColumn(endLineNumber);\n        this._buffer = textBuffer;\n        this._bufferDisposable.dispose();\n        this._bufferDisposable = textBufferDisposable;\n        this._increaseVersionId();\n        // Flush all tokens\n        this._tokens.flush();\n        this._semanticTokens.flush();\n        // Destroy all my decorations\n        this._decorations = Object.create(null);\n        this._decorationsTree = new DecorationsTrees();\n        // Destroy my edit history and settings\n        this._commandManager.clear();\n        this._trimAutoWhitespaceLines = null;\n        this._emitContentChangedEvent(new ModelRawContentChangedEvent([\n            new ModelRawFlush()\n        ], this._versionId, false, false), this._createContentChanged2(new Range(1, 1, endLineNumber, endColumn), 0, oldModelValueLength, this.getValue(), false, false, true));\n    }\n    setEOL(eol) {\n        this._assertNotDisposed();\n        const newEOL = (eol === 1 /* CRLF */ ? '\\r\\n' : '\\n');\n        if (this._buffer.getEOL() === newEOL) {\n            // Nothing to do\n            return;\n        }\n        const oldFullModelRange = this.getFullModelRange();\n        const oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n        const endLineNumber = this.getLineCount();\n        const endColumn = this.getLineMaxColumn(endLineNumber);\n        this._onBeforeEOLChange();\n        this._buffer.setEOL(newEOL);\n        this._increaseVersionId();\n        this._onAfterEOLChange();\n        this._emitContentChangedEvent(new ModelRawContentChangedEvent([\n            new ModelRawEOLChanged()\n        ], this._versionId, false, false), this._createContentChanged2(new Range(1, 1, endLineNumber, endColumn), 0, oldModelValueLength, this.getValue(), false, false, false));\n    }\n    _onBeforeEOLChange() {\n        // Ensure all decorations get their `range` set.\n        this._decorationsTree.ensureAllNodesHaveRanges(this);\n    }\n    _onAfterEOLChange() {\n        // Transform back `range` to offsets\n        const versionId = this.getVersionId();\n        const allDecorations = this._decorationsTree.collectNodesPostOrder();\n        for (let i = 0, len = allDecorations.length; i < len; i++) {\n            const node = allDecorations[i];\n            const range = node.range; // the range is defined due to `_onBeforeEOLChange`\n            const delta = node.cachedAbsoluteStart - node.start;\n            const startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n            const endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n            node.cachedAbsoluteStart = startOffset;\n            node.cachedAbsoluteEnd = endOffset;\n            node.cachedVersionId = versionId;\n            node.start = startOffset - delta;\n            node.end = endOffset - delta;\n            recomputeMaxEnd(node);\n        }\n    }\n    onBeforeAttached() {\n        this._attachedEditorCount++;\n        if (this._attachedEditorCount === 1) {\n            this._tokenization.handleDidChangeAttached();\n            this._onDidChangeAttached.fire(undefined);\n        }\n    }\n    onBeforeDetached() {\n        this._attachedEditorCount--;\n        if (this._attachedEditorCount === 0) {\n            this._tokenization.handleDidChangeAttached();\n            this._onDidChangeAttached.fire(undefined);\n        }\n    }\n    isAttachedToEditor() {\n        return this._attachedEditorCount > 0;\n    }\n    getAttachedEditorCount() {\n        return this._attachedEditorCount;\n    }\n    isTooLargeForSyncing() {\n        return this._isTooLargeForSyncing;\n    }\n    isTooLargeForTokenization() {\n        return this._isTooLargeForTokenization;\n    }\n    isDisposed() {\n        return this._isDisposed;\n    }\n    isDominatedByLongLines() {\n        this._assertNotDisposed();\n        if (this.isTooLargeForTokenization()) {\n            // Cannot word wrap huge files anyways, so it doesn't really matter\n            return false;\n        }\n        let smallLineCharCount = 0;\n        let longLineCharCount = 0;\n        const lineCount = this._buffer.getLineCount();\n        for (let lineNumber = 1; lineNumber <= lineCount; lineNumber++) {\n            const lineLength = this._buffer.getLineLength(lineNumber);\n            if (lineLength >= LONG_LINE_BOUNDARY) {\n                longLineCharCount += lineLength;\n            }\n            else {\n                smallLineCharCount += lineLength;\n            }\n        }\n        return (longLineCharCount > smallLineCharCount);\n    }\n    get uri() {\n        return this._associatedResource;\n    }\n    //#region Options\n    getOptions() {\n        this._assertNotDisposed();\n        return this._options;\n    }\n    getFormattingOptions() {\n        return {\n            tabSize: this._options.indentSize,\n            insertSpaces: this._options.insertSpaces\n        };\n    }\n    updateOptions(_newOpts) {\n        this._assertNotDisposed();\n        const tabSize = (typeof _newOpts.tabSize !== 'undefined') ? _newOpts.tabSize : this._options.tabSize;\n        const indentSize = (typeof _newOpts.indentSize !== 'undefined') ? _newOpts.indentSize : this._options.indentSize;\n        const insertSpaces = (typeof _newOpts.insertSpaces !== 'undefined') ? _newOpts.insertSpaces : this._options.insertSpaces;\n        const trimAutoWhitespace = (typeof _newOpts.trimAutoWhitespace !== 'undefined') ? _newOpts.trimAutoWhitespace : this._options.trimAutoWhitespace;\n        const bracketPairColorizationOptions = (typeof _newOpts.bracketColorizationOptions !== 'undefined') ? _newOpts.bracketColorizationOptions : this._options.bracketPairColorizationOptions;\n        const newOpts = new model.TextModelResolvedOptions({\n            tabSize: tabSize,\n            indentSize: indentSize,\n            insertSpaces: insertSpaces,\n            defaultEOL: this._options.defaultEOL,\n            trimAutoWhitespace: trimAutoWhitespace,\n            bracketPairColorizationOptions,\n        });\n        if (this._options.equals(newOpts)) {\n            return;\n        }\n        const e = this._options.createChangeEvent(newOpts);\n        this._options = newOpts;\n        this._bracketPairColorizer.handleDidChangeOptions(e);\n        this._decorationProvider.handleDidChangeOptions(e);\n        this._onDidChangeOptions.fire(e);\n    }\n    detectIndentation(defaultInsertSpaces, defaultTabSize) {\n        this._assertNotDisposed();\n        const guessedIndentation = guessIndentation(this._buffer, defaultTabSize, defaultInsertSpaces);\n        this.updateOptions({\n            insertSpaces: guessedIndentation.insertSpaces,\n            tabSize: guessedIndentation.tabSize,\n            indentSize: guessedIndentation.tabSize, // TODO@Alex: guess indentSize independent of tabSize\n        });\n    }\n    normalizeIndentation(str) {\n        this._assertNotDisposed();\n        return normalizeIndentation(str, this._options.indentSize, this._options.insertSpaces);\n    }\n    //#endregion\n    //#region Reading\n    getVersionId() {\n        this._assertNotDisposed();\n        return this._versionId;\n    }\n    mightContainRTL() {\n        return this._buffer.mightContainRTL();\n    }\n    mightContainUnusualLineTerminators() {\n        return this._buffer.mightContainUnusualLineTerminators();\n    }\n    removeUnusualLineTerminators(selections = null) {\n        const matches = this.findMatches(strings.UNUSUAL_LINE_TERMINATORS.source, false, true, false, null, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\n        this._buffer.resetMightContainUnusualLineTerminators();\n        this.pushEditOperations(selections, matches.map(m => ({ range: m.range, text: null })), () => null);\n    }\n    mightContainNonBasicASCII() {\n        return this._buffer.mightContainNonBasicASCII();\n    }\n    getAlternativeVersionId() {\n        this._assertNotDisposed();\n        return this._alternativeVersionId;\n    }\n    getInitialUndoRedoSnapshot() {\n        this._assertNotDisposed();\n        return this._initialUndoRedoSnapshot;\n    }\n    getOffsetAt(rawPosition) {\n        this._assertNotDisposed();\n        const position = this._validatePosition(rawPosition.lineNumber, rawPosition.column, 0 /* Relaxed */);\n        return this._buffer.getOffsetAt(position.lineNumber, position.column);\n    }\n    getPositionAt(rawOffset) {\n        this._assertNotDisposed();\n        const offset = (Math.min(this._buffer.getLength(), Math.max(0, rawOffset)));\n        return this._buffer.getPositionAt(offset);\n    }\n    _increaseVersionId() {\n        this._versionId = this._versionId + 1;\n        this._alternativeVersionId = this._versionId;\n    }\n    _overwriteVersionId(versionId) {\n        this._versionId = versionId;\n    }\n    _overwriteAlternativeVersionId(newAlternativeVersionId) {\n        this._alternativeVersionId = newAlternativeVersionId;\n    }\n    _overwriteInitialUndoRedoSnapshot(newInitialUndoRedoSnapshot) {\n        this._initialUndoRedoSnapshot = newInitialUndoRedoSnapshot;\n    }\n    getValue(eol, preserveBOM = false) {\n        this._assertNotDisposed();\n        const fullModelRange = this.getFullModelRange();\n        const fullModelValue = this.getValueInRange(fullModelRange, eol);\n        if (preserveBOM) {\n            return this._buffer.getBOM() + fullModelValue;\n        }\n        return fullModelValue;\n    }\n    createSnapshot(preserveBOM = false) {\n        return new TextModelSnapshot(this._buffer.createSnapshot(preserveBOM));\n    }\n    getValueLength(eol, preserveBOM = false) {\n        this._assertNotDisposed();\n        const fullModelRange = this.getFullModelRange();\n        const fullModelValue = this.getValueLengthInRange(fullModelRange, eol);\n        if (preserveBOM) {\n            return this._buffer.getBOM().length + fullModelValue;\n        }\n        return fullModelValue;\n    }\n    getValueInRange(rawRange, eol = 0 /* TextDefined */) {\n        this._assertNotDisposed();\n        return this._buffer.getValueInRange(this.validateRange(rawRange), eol);\n    }\n    getValueLengthInRange(rawRange, eol = 0 /* TextDefined */) {\n        this._assertNotDisposed();\n        return this._buffer.getValueLengthInRange(this.validateRange(rawRange), eol);\n    }\n    getCharacterCountInRange(rawRange, eol = 0 /* TextDefined */) {\n        this._assertNotDisposed();\n        return this._buffer.getCharacterCountInRange(this.validateRange(rawRange), eol);\n    }\n    getLineCount() {\n        this._assertNotDisposed();\n        return this._buffer.getLineCount();\n    }\n    getLineContent(lineNumber) {\n        this._assertNotDisposed();\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return this._buffer.getLineContent(lineNumber);\n    }\n    getLineLength(lineNumber) {\n        this._assertNotDisposed();\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return this._buffer.getLineLength(lineNumber);\n    }\n    getLinesContent() {\n        this._assertNotDisposed();\n        return this._buffer.getLinesContent();\n    }\n    getEOL() {\n        this._assertNotDisposed();\n        return this._buffer.getEOL();\n    }\n    getEndOfLineSequence() {\n        this._assertNotDisposed();\n        return (this._buffer.getEOL() === '\\n'\n            ? 0 /* LF */\n            : 1 /* CRLF */);\n    }\n    getLineMinColumn(lineNumber) {\n        this._assertNotDisposed();\n        return 1;\n    }\n    getLineMaxColumn(lineNumber) {\n        this._assertNotDisposed();\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return this._buffer.getLineLength(lineNumber) + 1;\n    }\n    getLineFirstNonWhitespaceColumn(lineNumber) {\n        this._assertNotDisposed();\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return this._buffer.getLineFirstNonWhitespaceColumn(lineNumber);\n    }\n    getLineLastNonWhitespaceColumn(lineNumber) {\n        this._assertNotDisposed();\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return this._buffer.getLineLastNonWhitespaceColumn(lineNumber);\n    }\n    /**\n     * Validates `range` is within buffer bounds, but allows it to sit in between surrogate pairs, etc.\n     * Will try to not allocate if possible.\n     */\n    _validateRangeRelaxedNoAllocations(range) {\n        const linesCount = this._buffer.getLineCount();\n        const initialStartLineNumber = range.startLineNumber;\n        const initialStartColumn = range.startColumn;\n        let startLineNumber = Math.floor((typeof initialStartLineNumber === 'number' && !isNaN(initialStartLineNumber)) ? initialStartLineNumber : 1);\n        let startColumn = Math.floor((typeof initialStartColumn === 'number' && !isNaN(initialStartColumn)) ? initialStartColumn : 1);\n        if (startLineNumber < 1) {\n            startLineNumber = 1;\n            startColumn = 1;\n        }\n        else if (startLineNumber > linesCount) {\n            startLineNumber = linesCount;\n            startColumn = this.getLineMaxColumn(startLineNumber);\n        }\n        else {\n            if (startColumn <= 1) {\n                startColumn = 1;\n            }\n            else {\n                const maxColumn = this.getLineMaxColumn(startLineNumber);\n                if (startColumn >= maxColumn) {\n                    startColumn = maxColumn;\n                }\n            }\n        }\n        const initialEndLineNumber = range.endLineNumber;\n        const initialEndColumn = range.endColumn;\n        let endLineNumber = Math.floor((typeof initialEndLineNumber === 'number' && !isNaN(initialEndLineNumber)) ? initialEndLineNumber : 1);\n        let endColumn = Math.floor((typeof initialEndColumn === 'number' && !isNaN(initialEndColumn)) ? initialEndColumn : 1);\n        if (endLineNumber < 1) {\n            endLineNumber = 1;\n            endColumn = 1;\n        }\n        else if (endLineNumber > linesCount) {\n            endLineNumber = linesCount;\n            endColumn = this.getLineMaxColumn(endLineNumber);\n        }\n        else {\n            if (endColumn <= 1) {\n                endColumn = 1;\n            }\n            else {\n                const maxColumn = this.getLineMaxColumn(endLineNumber);\n                if (endColumn >= maxColumn) {\n                    endColumn = maxColumn;\n                }\n            }\n        }\n        if (initialStartLineNumber === startLineNumber\n            && initialStartColumn === startColumn\n            && initialEndLineNumber === endLineNumber\n            && initialEndColumn === endColumn\n            && range instanceof Range\n            && !(range instanceof Selection)) {\n            return range;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    _isValidPosition(lineNumber, column, validationType) {\n        if (typeof lineNumber !== 'number' || typeof column !== 'number') {\n            return false;\n        }\n        if (isNaN(lineNumber) || isNaN(column)) {\n            return false;\n        }\n        if (lineNumber < 1 || column < 1) {\n            return false;\n        }\n        if ((lineNumber | 0) !== lineNumber || (column | 0) !== column) {\n            return false;\n        }\n        const lineCount = this._buffer.getLineCount();\n        if (lineNumber > lineCount) {\n            return false;\n        }\n        if (column === 1) {\n            return true;\n        }\n        const maxColumn = this.getLineMaxColumn(lineNumber);\n        if (column > maxColumn) {\n            return false;\n        }\n        if (validationType === 1 /* SurrogatePairs */) {\n            // !!At this point, column > 1\n            const charCodeBefore = this._buffer.getLineCharCode(lineNumber, column - 2);\n            if (strings.isHighSurrogate(charCodeBefore)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    _validatePosition(_lineNumber, _column, validationType) {\n        const lineNumber = Math.floor((typeof _lineNumber === 'number' && !isNaN(_lineNumber)) ? _lineNumber : 1);\n        const column = Math.floor((typeof _column === 'number' && !isNaN(_column)) ? _column : 1);\n        const lineCount = this._buffer.getLineCount();\n        if (lineNumber < 1) {\n            return new Position(1, 1);\n        }\n        if (lineNumber > lineCount) {\n            return new Position(lineCount, this.getLineMaxColumn(lineCount));\n        }\n        if (column <= 1) {\n            return new Position(lineNumber, 1);\n        }\n        const maxColumn = this.getLineMaxColumn(lineNumber);\n        if (column >= maxColumn) {\n            return new Position(lineNumber, maxColumn);\n        }\n        if (validationType === 1 /* SurrogatePairs */) {\n            // If the position would end up in the middle of a high-low surrogate pair,\n            // we move it to before the pair\n            // !!At this point, column > 1\n            const charCodeBefore = this._buffer.getLineCharCode(lineNumber, column - 2);\n            if (strings.isHighSurrogate(charCodeBefore)) {\n                return new Position(lineNumber, column - 1);\n            }\n        }\n        return new Position(lineNumber, column);\n    }\n    validatePosition(position) {\n        const validationType = 1 /* SurrogatePairs */;\n        this._assertNotDisposed();\n        // Avoid object allocation and cover most likely case\n        if (position instanceof Position) {\n            if (this._isValidPosition(position.lineNumber, position.column, validationType)) {\n                return position;\n            }\n        }\n        return this._validatePosition(position.lineNumber, position.column, validationType);\n    }\n    _isValidRange(range, validationType) {\n        const startLineNumber = range.startLineNumber;\n        const startColumn = range.startColumn;\n        const endLineNumber = range.endLineNumber;\n        const endColumn = range.endColumn;\n        if (!this._isValidPosition(startLineNumber, startColumn, 0 /* Relaxed */)) {\n            return false;\n        }\n        if (!this._isValidPosition(endLineNumber, endColumn, 0 /* Relaxed */)) {\n            return false;\n        }\n        if (validationType === 1 /* SurrogatePairs */) {\n            const charCodeBeforeStart = (startColumn > 1 ? this._buffer.getLineCharCode(startLineNumber, startColumn - 2) : 0);\n            const charCodeBeforeEnd = (endColumn > 1 && endColumn <= this._buffer.getLineLength(endLineNumber) ? this._buffer.getLineCharCode(endLineNumber, endColumn - 2) : 0);\n            const startInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeStart);\n            const endInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeEnd);\n            if (!startInsideSurrogatePair && !endInsideSurrogatePair) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    }\n    validateRange(_range) {\n        const validationType = 1 /* SurrogatePairs */;\n        this._assertNotDisposed();\n        // Avoid object allocation and cover most likely case\n        if ((_range instanceof Range) && !(_range instanceof Selection)) {\n            if (this._isValidRange(_range, validationType)) {\n                return _range;\n            }\n        }\n        const start = this._validatePosition(_range.startLineNumber, _range.startColumn, 0 /* Relaxed */);\n        const end = this._validatePosition(_range.endLineNumber, _range.endColumn, 0 /* Relaxed */);\n        const startLineNumber = start.lineNumber;\n        const startColumn = start.column;\n        const endLineNumber = end.lineNumber;\n        const endColumn = end.column;\n        if (validationType === 1 /* SurrogatePairs */) {\n            const charCodeBeforeStart = (startColumn > 1 ? this._buffer.getLineCharCode(startLineNumber, startColumn - 2) : 0);\n            const charCodeBeforeEnd = (endColumn > 1 && endColumn <= this._buffer.getLineLength(endLineNumber) ? this._buffer.getLineCharCode(endLineNumber, endColumn - 2) : 0);\n            const startInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeStart);\n            const endInsideSurrogatePair = strings.isHighSurrogate(charCodeBeforeEnd);\n            if (!startInsideSurrogatePair && !endInsideSurrogatePair) {\n                return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            }\n            if (startLineNumber === endLineNumber && startColumn === endColumn) {\n                // do not expand a collapsed range, simply move it to a valid location\n                return new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn - 1);\n            }\n            if (startInsideSurrogatePair && endInsideSurrogatePair) {\n                // expand range at both ends\n                return new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn + 1);\n            }\n            if (startInsideSurrogatePair) {\n                // only expand range at the start\n                return new Range(startLineNumber, startColumn - 1, endLineNumber, endColumn);\n            }\n            // only expand range at the end\n            return new Range(startLineNumber, startColumn, endLineNumber, endColumn + 1);\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    modifyPosition(rawPosition, offset) {\n        this._assertNotDisposed();\n        const candidate = this.getOffsetAt(rawPosition) + offset;\n        return this.getPositionAt(Math.min(this._buffer.getLength(), Math.max(0, candidate)));\n    }\n    getFullModelRange() {\n        this._assertNotDisposed();\n        const lineCount = this.getLineCount();\n        return new Range(1, 1, lineCount, this.getLineMaxColumn(lineCount));\n    }\n    findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount) {\n        return this._buffer.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n    }\n    findMatches(searchString, rawSearchScope, isRegex, matchCase, wordSeparators, captureMatches, limitResultCount = LIMIT_FIND_COUNT) {\n        this._assertNotDisposed();\n        let searchRanges = null;\n        if (rawSearchScope !== null) {\n            if (!Array.isArray(rawSearchScope)) {\n                rawSearchScope = [rawSearchScope];\n            }\n            if (rawSearchScope.every((searchScope) => Range.isIRange(searchScope))) {\n                searchRanges = rawSearchScope.map((searchScope) => this.validateRange(searchScope));\n            }\n        }\n        if (searchRanges === null) {\n            searchRanges = [this.getFullModelRange()];\n        }\n        searchRanges = searchRanges.sort((d1, d2) => d1.startLineNumber - d2.startLineNumber || d1.startColumn - d2.startColumn);\n        const uniqueSearchRanges = [];\n        uniqueSearchRanges.push(searchRanges.reduce((prev, curr) => {\n            if (Range.areIntersecting(prev, curr)) {\n                return prev.plusRange(curr);\n            }\n            uniqueSearchRanges.push(prev);\n            return curr;\n        }));\n        let matchMapper;\n        if (!isRegex && searchString.indexOf('\\n') < 0) {\n            // not regex, not multi line\n            const searchParams = new SearchParams(searchString, isRegex, matchCase, wordSeparators);\n            const searchData = searchParams.parseSearchRequest();\n            if (!searchData) {\n                return [];\n            }\n            matchMapper = (searchRange) => this.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n        }\n        else {\n            matchMapper = (searchRange) => TextModelSearch.findMatches(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchRange, captureMatches, limitResultCount);\n        }\n        return uniqueSearchRanges.map(matchMapper).reduce((arr, matches) => arr.concat(matches), []);\n    }\n    findNextMatch(searchString, rawSearchStart, isRegex, matchCase, wordSeparators, captureMatches) {\n        this._assertNotDisposed();\n        const searchStart = this.validatePosition(rawSearchStart);\n        if (!isRegex && searchString.indexOf('\\n') < 0) {\n            const searchParams = new SearchParams(searchString, isRegex, matchCase, wordSeparators);\n            const searchData = searchParams.parseSearchRequest();\n            if (!searchData) {\n                return null;\n            }\n            const lineCount = this.getLineCount();\n            let searchRange = new Range(searchStart.lineNumber, searchStart.column, lineCount, this.getLineMaxColumn(lineCount));\n            let ret = this.findMatchesLineByLine(searchRange, searchData, captureMatches, 1);\n            TextModelSearch.findNextMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n            if (ret.length > 0) {\n                return ret[0];\n            }\n            searchRange = new Range(1, 1, searchStart.lineNumber, this.getLineMaxColumn(searchStart.lineNumber));\n            ret = this.findMatchesLineByLine(searchRange, searchData, captureMatches, 1);\n            if (ret.length > 0) {\n                return ret[0];\n            }\n            return null;\n        }\n        return TextModelSearch.findNextMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n    }\n    findPreviousMatch(searchString, rawSearchStart, isRegex, matchCase, wordSeparators, captureMatches) {\n        this._assertNotDisposed();\n        const searchStart = this.validatePosition(rawSearchStart);\n        return TextModelSearch.findPreviousMatch(this, new SearchParams(searchString, isRegex, matchCase, wordSeparators), searchStart, captureMatches);\n    }\n    //#endregion\n    //#region Editing\n    pushStackElement() {\n        this._commandManager.pushStackElement();\n    }\n    popStackElement() {\n        this._commandManager.popStackElement();\n    }\n    pushEOL(eol) {\n        const currentEOL = (this.getEOL() === '\\n' ? 0 /* LF */ : 1 /* CRLF */);\n        if (currentEOL === eol) {\n            return;\n        }\n        try {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            this._eventEmitter.beginDeferredEmit();\n            if (this._initialUndoRedoSnapshot === null) {\n                this._initialUndoRedoSnapshot = this._undoRedoService.createSnapshot(this.uri);\n            }\n            this._commandManager.pushEOL(eol);\n        }\n        finally {\n            this._eventEmitter.endDeferredEmit();\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    _validateEditOperation(rawOperation) {\n        if (rawOperation instanceof model.ValidAnnotatedEditOperation) {\n            return rawOperation;\n        }\n        return new model.ValidAnnotatedEditOperation(rawOperation.identifier || null, this.validateRange(rawOperation.range), rawOperation.text, rawOperation.forceMoveMarkers || false, rawOperation.isAutoWhitespaceEdit || false, rawOperation._isTracked || false);\n    }\n    _validateEditOperations(rawOperations) {\n        const result = [];\n        for (let i = 0, len = rawOperations.length; i < len; i++) {\n            result[i] = this._validateEditOperation(rawOperations[i]);\n        }\n        return result;\n    }\n    pushEditOperations(beforeCursorState, editOperations, cursorStateComputer) {\n        try {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            this._eventEmitter.beginDeferredEmit();\n            return this._pushEditOperations(beforeCursorState, this._validateEditOperations(editOperations), cursorStateComputer);\n        }\n        finally {\n            this._eventEmitter.endDeferredEmit();\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    _pushEditOperations(beforeCursorState, editOperations, cursorStateComputer) {\n        if (this._options.trimAutoWhitespace && this._trimAutoWhitespaceLines) {\n            // Go through each saved line number and insert a trim whitespace edit\n            // if it is safe to do so (no conflicts with other edits).\n            const incomingEdits = editOperations.map((op) => {\n                return {\n                    range: this.validateRange(op.range),\n                    text: op.text\n                };\n            });\n            // Sometimes, auto-formatters change ranges automatically which can cause undesired auto whitespace trimming near the cursor\n            // We'll use the following heuristic: if the edits occur near the cursor, then it's ok to trim auto whitespace\n            let editsAreNearCursors = true;\n            if (beforeCursorState) {\n                for (let i = 0, len = beforeCursorState.length; i < len; i++) {\n                    const sel = beforeCursorState[i];\n                    let foundEditNearSel = false;\n                    for (let j = 0, lenJ = incomingEdits.length; j < lenJ; j++) {\n                        const editRange = incomingEdits[j].range;\n                        const selIsAbove = editRange.startLineNumber > sel.endLineNumber;\n                        const selIsBelow = sel.startLineNumber > editRange.endLineNumber;\n                        if (!selIsAbove && !selIsBelow) {\n                            foundEditNearSel = true;\n                            break;\n                        }\n                    }\n                    if (!foundEditNearSel) {\n                        editsAreNearCursors = false;\n                        break;\n                    }\n                }\n            }\n            if (editsAreNearCursors) {\n                for (let i = 0, len = this._trimAutoWhitespaceLines.length; i < len; i++) {\n                    const trimLineNumber = this._trimAutoWhitespaceLines[i];\n                    const maxLineColumn = this.getLineMaxColumn(trimLineNumber);\n                    let allowTrimLine = true;\n                    for (let j = 0, lenJ = incomingEdits.length; j < lenJ; j++) {\n                        const editRange = incomingEdits[j].range;\n                        const editText = incomingEdits[j].text;\n                        if (trimLineNumber < editRange.startLineNumber || trimLineNumber > editRange.endLineNumber) {\n                            // `trimLine` is completely outside this edit\n                            continue;\n                        }\n                        // At this point:\n                        //   editRange.startLineNumber <= trimLine <= editRange.endLineNumber\n                        if (trimLineNumber === editRange.startLineNumber && editRange.startColumn === maxLineColumn\n                            && editRange.isEmpty() && editText && editText.length > 0 && editText.charAt(0) === '\\n') {\n                            // This edit inserts a new line (and maybe other text) after `trimLine`\n                            continue;\n                        }\n                        if (trimLineNumber === editRange.startLineNumber && editRange.startColumn === 1\n                            && editRange.isEmpty() && editText && editText.length > 0 && editText.charAt(editText.length - 1) === '\\n') {\n                            // This edit inserts a new line (and maybe other text) before `trimLine`\n                            continue;\n                        }\n                        // Looks like we can't trim this line as it would interfere with an incoming edit\n                        allowTrimLine = false;\n                        break;\n                    }\n                    if (allowTrimLine) {\n                        const trimRange = new Range(trimLineNumber, 1, trimLineNumber, maxLineColumn);\n                        editOperations.push(new model.ValidAnnotatedEditOperation(null, trimRange, null, false, false, false));\n                    }\n                }\n            }\n            this._trimAutoWhitespaceLines = null;\n        }\n        if (this._initialUndoRedoSnapshot === null) {\n            this._initialUndoRedoSnapshot = this._undoRedoService.createSnapshot(this.uri);\n        }\n        return this._commandManager.pushEditOperation(beforeCursorState, editOperations, cursorStateComputer);\n    }\n    _applyUndo(changes, eol, resultingAlternativeVersionId, resultingSelection) {\n        const edits = changes.map((change) => {\n            const rangeStart = this.getPositionAt(change.newPosition);\n            const rangeEnd = this.getPositionAt(change.newEnd);\n            return {\n                range: new Range(rangeStart.lineNumber, rangeStart.column, rangeEnd.lineNumber, rangeEnd.column),\n                text: change.oldText\n            };\n        });\n        this._applyUndoRedoEdits(edits, eol, true, false, resultingAlternativeVersionId, resultingSelection);\n    }\n    _applyRedo(changes, eol, resultingAlternativeVersionId, resultingSelection) {\n        const edits = changes.map((change) => {\n            const rangeStart = this.getPositionAt(change.oldPosition);\n            const rangeEnd = this.getPositionAt(change.oldEnd);\n            return {\n                range: new Range(rangeStart.lineNumber, rangeStart.column, rangeEnd.lineNumber, rangeEnd.column),\n                text: change.newText\n            };\n        });\n        this._applyUndoRedoEdits(edits, eol, false, true, resultingAlternativeVersionId, resultingSelection);\n    }\n    _applyUndoRedoEdits(edits, eol, isUndoing, isRedoing, resultingAlternativeVersionId, resultingSelection) {\n        try {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            this._eventEmitter.beginDeferredEmit();\n            this._isUndoing = isUndoing;\n            this._isRedoing = isRedoing;\n            this.applyEdits(edits, false);\n            this.setEOL(eol);\n            this._overwriteAlternativeVersionId(resultingAlternativeVersionId);\n        }\n        finally {\n            this._isUndoing = false;\n            this._isRedoing = false;\n            this._eventEmitter.endDeferredEmit(resultingSelection);\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    applyEdits(rawOperations, computeUndoEdits = false) {\n        try {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            this._eventEmitter.beginDeferredEmit();\n            const operations = this._validateEditOperations(rawOperations);\n            return this._doApplyEdits(operations, computeUndoEdits);\n        }\n        finally {\n            this._eventEmitter.endDeferredEmit();\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    _doApplyEdits(rawOperations, computeUndoEdits) {\n        const oldLineCount = this._buffer.getLineCount();\n        const result = this._buffer.applyEdits(rawOperations, this._options.trimAutoWhitespace, computeUndoEdits);\n        const newLineCount = this._buffer.getLineCount();\n        const contentChanges = result.changes;\n        this._trimAutoWhitespaceLines = result.trimAutoWhitespaceLineNumbers;\n        if (contentChanges.length !== 0) {\n            // We do a first pass to update tokens and decorations\n            // because we want to read decorations in the second pass\n            // where we will emit content change events\n            // and we want to read the final decorations\n            for (let i = 0, len = contentChanges.length; i < len; i++) {\n                const change = contentChanges[i];\n                const [eolCount, firstLineLength, lastLineLength] = countEOL(change.text);\n                this._tokens.acceptEdit(change.range, eolCount, firstLineLength);\n                this._semanticTokens.acceptEdit(change.range, eolCount, firstLineLength, lastLineLength, change.text.length > 0 ? change.text.charCodeAt(0) : 0 /* Null */);\n                this._decorationsTree.acceptReplace(change.rangeOffset, change.rangeLength, change.text.length, change.forceMoveMarkers);\n            }\n            const rawContentChanges = [];\n            this._increaseVersionId();\n            let lineCount = oldLineCount;\n            for (let i = 0, len = contentChanges.length; i < len; i++) {\n                const change = contentChanges[i];\n                const [eolCount] = countEOL(change.text);\n                this._onDidChangeDecorations.fire();\n                const startLineNumber = change.range.startLineNumber;\n                const endLineNumber = change.range.endLineNumber;\n                const deletingLinesCnt = endLineNumber - startLineNumber;\n                const insertingLinesCnt = eolCount;\n                const editingLinesCnt = Math.min(deletingLinesCnt, insertingLinesCnt);\n                const changeLineCountDelta = (insertingLinesCnt - deletingLinesCnt);\n                const currentEditStartLineNumber = newLineCount - lineCount - changeLineCountDelta + startLineNumber;\n                const firstEditLineNumber = currentEditStartLineNumber;\n                const lastInsertedLineNumber = currentEditStartLineNumber + insertingLinesCnt;\n                const decorationsWithInjectedTextInEditedRange = this._decorationsTree.getInjectedTextInInterval(this, this.getOffsetAt(new Position(firstEditLineNumber, 1)), this.getOffsetAt(new Position(lastInsertedLineNumber, this.getLineMaxColumn(lastInsertedLineNumber))), 0);\n                const injectedTextInEditedRange = LineInjectedText.fromDecorations(decorationsWithInjectedTextInEditedRange);\n                const injectedTextInEditedRangeQueue = new ArrayQueue(injectedTextInEditedRange);\n                for (let j = editingLinesCnt; j >= 0; j--) {\n                    const editLineNumber = startLineNumber + j;\n                    const currentEditLineNumber = currentEditStartLineNumber + j;\n                    injectedTextInEditedRangeQueue.takeFromEndWhile(r => r.lineNumber > currentEditLineNumber);\n                    const decorationsInCurrentLine = injectedTextInEditedRangeQueue.takeFromEndWhile(r => r.lineNumber === currentEditLineNumber);\n                    rawContentChanges.push(new ModelRawLineChanged(editLineNumber, this.getLineContent(currentEditLineNumber), decorationsInCurrentLine));\n                }\n                if (editingLinesCnt < deletingLinesCnt) {\n                    // Must delete some lines\n                    const spliceStartLineNumber = startLineNumber + editingLinesCnt;\n                    rawContentChanges.push(new ModelRawLinesDeleted(spliceStartLineNumber + 1, endLineNumber));\n                }\n                if (editingLinesCnt < insertingLinesCnt) {\n                    const injectedTextInEditedRangeQueue = new ArrayQueue(injectedTextInEditedRange);\n                    // Must insert some lines\n                    const spliceLineNumber = startLineNumber + editingLinesCnt;\n                    const cnt = insertingLinesCnt - editingLinesCnt;\n                    const fromLineNumber = newLineCount - lineCount - cnt + spliceLineNumber + 1;\n                    const injectedTexts = [];\n                    const newLines = [];\n                    for (let i = 0; i < cnt; i++) {\n                        const lineNumber = fromLineNumber + i;\n                        newLines[i] = this.getLineContent(lineNumber);\n                        injectedTextInEditedRangeQueue.takeWhile(r => r.lineNumber < lineNumber);\n                        injectedTexts[i] = injectedTextInEditedRangeQueue.takeWhile(r => r.lineNumber === lineNumber);\n                    }\n                    rawContentChanges.push(new ModelRawLinesInserted(spliceLineNumber + 1, startLineNumber + insertingLinesCnt, newLines, injectedTexts));\n                }\n                lineCount += changeLineCountDelta;\n            }\n            this._emitContentChangedEvent(new ModelRawContentChangedEvent(rawContentChanges, this.getVersionId(), this._isUndoing, this._isRedoing), {\n                changes: contentChanges,\n                eol: this._buffer.getEOL(),\n                versionId: this.getVersionId(),\n                isUndoing: this._isUndoing,\n                isRedoing: this._isRedoing,\n                isFlush: false\n            });\n        }\n        return (result.reverseEdits === null ? undefined : result.reverseEdits);\n    }\n    undo() {\n        return this._undoRedoService.undo(this.uri);\n    }\n    canUndo() {\n        return this._undoRedoService.canUndo(this.uri);\n    }\n    redo() {\n        return this._undoRedoService.redo(this.uri);\n    }\n    canRedo() {\n        return this._undoRedoService.canRedo(this.uri);\n    }\n    //#endregion\n    //#region Decorations\n    handleBeforeFireDecorationsChangedEvent(affectedInjectedTextLines) {\n        // This is called before the decoration changed event is fired.\n        if (affectedInjectedTextLines === null || affectedInjectedTextLines.size === 0) {\n            return;\n        }\n        const affectedLines = [...affectedInjectedTextLines];\n        const lineChangeEvents = affectedLines.map(lineNumber => new ModelRawLineChanged(lineNumber, this.getLineContent(lineNumber), this._getInjectedTextInLine(lineNumber)));\n        this._onDidChangeInjectedText.fire(new ModelInjectedTextChangedEvent(lineChangeEvents));\n    }\n    changeDecorations(callback, ownerId = 0) {\n        this._assertNotDisposed();\n        try {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            return this._changeDecorations(ownerId, callback);\n        }\n        finally {\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    _changeDecorations(ownerId, callback) {\n        const changeAccessor = {\n            addDecoration: (range, options) => {\n                return this._deltaDecorationsImpl(ownerId, [], [{ range: range, options: options }])[0];\n            },\n            changeDecoration: (id, newRange) => {\n                this._changeDecorationImpl(id, newRange);\n            },\n            changeDecorationOptions: (id, options) => {\n                this._changeDecorationOptionsImpl(id, _normalizeOptions(options));\n            },\n            removeDecoration: (id) => {\n                this._deltaDecorationsImpl(ownerId, [id], []);\n            },\n            deltaDecorations: (oldDecorations, newDecorations) => {\n                if (oldDecorations.length === 0 && newDecorations.length === 0) {\n                    // nothing to do\n                    return [];\n                }\n                return this._deltaDecorationsImpl(ownerId, oldDecorations, newDecorations);\n            }\n        };\n        let result = null;\n        try {\n            result = callback(changeAccessor);\n        }\n        catch (e) {\n            onUnexpectedError(e);\n        }\n        // Invalidate change accessor\n        changeAccessor.addDecoration = invalidFunc;\n        changeAccessor.changeDecoration = invalidFunc;\n        changeAccessor.changeDecorationOptions = invalidFunc;\n        changeAccessor.removeDecoration = invalidFunc;\n        changeAccessor.deltaDecorations = invalidFunc;\n        return result;\n    }\n    deltaDecorations(oldDecorations, newDecorations, ownerId = 0) {\n        this._assertNotDisposed();\n        if (!oldDecorations) {\n            oldDecorations = [];\n        }\n        if (oldDecorations.length === 0 && newDecorations.length === 0) {\n            // nothing to do\n            return [];\n        }\n        try {\n            this._onDidChangeDecorations.beginDeferredEmit();\n            return this._deltaDecorationsImpl(ownerId, oldDecorations, newDecorations);\n        }\n        finally {\n            this._onDidChangeDecorations.endDeferredEmit();\n        }\n    }\n    _getTrackedRange(id) {\n        return this.getDecorationRange(id);\n    }\n    _setTrackedRange(id, newRange, newStickiness) {\n        const node = (id ? this._decorations[id] : null);\n        if (!node) {\n            if (!newRange) {\n                // node doesn't exist, the request is to delete => nothing to do\n                return null;\n            }\n            // node doesn't exist, the request is to set => add the tracked range\n            return this._deltaDecorationsImpl(0, [], [{ range: newRange, options: TRACKED_RANGE_OPTIONS[newStickiness] }])[0];\n        }\n        if (!newRange) {\n            // node exists, the request is to delete => delete node\n            this._decorationsTree.delete(node);\n            delete this._decorations[node.id];\n            return null;\n        }\n        // node exists, the request is to set => change the tracked range and its options\n        const range = this._validateRangeRelaxedNoAllocations(newRange);\n        const startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n        const endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n        this._decorationsTree.delete(node);\n        node.reset(this.getVersionId(), startOffset, endOffset, range);\n        node.setOptions(TRACKED_RANGE_OPTIONS[newStickiness]);\n        this._decorationsTree.insert(node);\n        return node.id;\n    }\n    removeAllDecorationsWithOwnerId(ownerId) {\n        if (this._isDisposed) {\n            return;\n        }\n        const nodes = this._decorationsTree.collectNodesFromOwner(ownerId);\n        for (let i = 0, len = nodes.length; i < len; i++) {\n            const node = nodes[i];\n            this._decorationsTree.delete(node);\n            delete this._decorations[node.id];\n        }\n    }\n    getDecorationOptions(decorationId) {\n        const node = this._decorations[decorationId];\n        if (!node) {\n            return null;\n        }\n        return node.options;\n    }\n    getDecorationRange(decorationId) {\n        const node = this._decorations[decorationId];\n        if (!node) {\n            return null;\n        }\n        return this._decorationsTree.getNodeRange(this, node);\n    }\n    getLineDecorations(lineNumber, ownerId = 0, filterOutValidation = false) {\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            return [];\n        }\n        return this.getLinesDecorations(lineNumber, lineNumber, ownerId, filterOutValidation);\n    }\n    getLinesDecorations(_startLineNumber, _endLineNumber, ownerId = 0, filterOutValidation = false) {\n        const lineCount = this.getLineCount();\n        const startLineNumber = Math.min(lineCount, Math.max(1, _startLineNumber));\n        const endLineNumber = Math.min(lineCount, Math.max(1, _endLineNumber));\n        const endColumn = this.getLineMaxColumn(endLineNumber);\n        const range = new Range(startLineNumber, 1, endLineNumber, endColumn);\n        const decorations = this._getDecorationsInRange(range, ownerId, filterOutValidation);\n        decorations.push(...this._decorationProvider.getDecorationsInRange(range, ownerId, filterOutValidation));\n        return decorations;\n    }\n    getDecorationsInRange(range, ownerId = 0, filterOutValidation = false) {\n        const validatedRange = this.validateRange(range);\n        const decorations = this._getDecorationsInRange(validatedRange, ownerId, filterOutValidation);\n        decorations.push(...this._decorationProvider.getDecorationsInRange(validatedRange, ownerId, filterOutValidation));\n        return decorations;\n    }\n    getOverviewRulerDecorations(ownerId = 0, filterOutValidation = false) {\n        return this._decorationsTree.getAll(this, ownerId, filterOutValidation, true);\n    }\n    getInjectedTextDecorations(ownerId = 0) {\n        return this._decorationsTree.getAllInjectedText(this, ownerId);\n    }\n    _getInjectedTextInLine(lineNumber) {\n        const startOffset = this._buffer.getOffsetAt(lineNumber, 1);\n        const endOffset = startOffset + this._buffer.getLineLength(lineNumber);\n        const result = this._decorationsTree.getInjectedTextInInterval(this, startOffset, endOffset, 0);\n        return LineInjectedText.fromDecorations(result).filter(t => t.lineNumber === lineNumber);\n    }\n    getAllDecorations(ownerId = 0, filterOutValidation = false) {\n        let result = this._decorationsTree.getAll(this, ownerId, filterOutValidation, false);\n        result = result.concat(this._decorationProvider.getAllDecorations(ownerId, filterOutValidation));\n        return result;\n    }\n    _getDecorationsInRange(filterRange, filterOwnerId, filterOutValidation) {\n        const startOffset = this._buffer.getOffsetAt(filterRange.startLineNumber, filterRange.startColumn);\n        const endOffset = this._buffer.getOffsetAt(filterRange.endLineNumber, filterRange.endColumn);\n        return this._decorationsTree.getAllInInterval(this, startOffset, endOffset, filterOwnerId, filterOutValidation);\n    }\n    getRangeAt(start, end) {\n        return this._buffer.getRangeAt(start, end - start);\n    }\n    _changeDecorationImpl(decorationId, _range) {\n        const node = this._decorations[decorationId];\n        if (!node) {\n            return;\n        }\n        if (node.options.after) {\n            const oldRange = this.getDecorationRange(decorationId);\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(oldRange.endLineNumber);\n        }\n        if (node.options.before) {\n            const oldRange = this.getDecorationRange(decorationId);\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(oldRange.startLineNumber);\n        }\n        const range = this._validateRangeRelaxedNoAllocations(_range);\n        const startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n        const endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n        this._decorationsTree.delete(node);\n        node.reset(this.getVersionId(), startOffset, endOffset, range);\n        this._decorationsTree.insert(node);\n        this._onDidChangeDecorations.checkAffectedAndFire(node.options);\n        if (node.options.after) {\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(range.endLineNumber);\n        }\n        if (node.options.before) {\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(range.startLineNumber);\n        }\n    }\n    _changeDecorationOptionsImpl(decorationId, options) {\n        const node = this._decorations[decorationId];\n        if (!node) {\n            return;\n        }\n        const nodeWasInOverviewRuler = (node.options.overviewRuler && node.options.overviewRuler.color ? true : false);\n        const nodeIsInOverviewRuler = (options.overviewRuler && options.overviewRuler.color ? true : false);\n        this._onDidChangeDecorations.checkAffectedAndFire(node.options);\n        this._onDidChangeDecorations.checkAffectedAndFire(options);\n        if (node.options.after || options.after) {\n            const nodeRange = this._decorationsTree.getNodeRange(this, node);\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.endLineNumber);\n        }\n        if (node.options.before || options.before) {\n            const nodeRange = this._decorationsTree.getNodeRange(this, node);\n            this._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.startLineNumber);\n        }\n        if (nodeWasInOverviewRuler !== nodeIsInOverviewRuler) {\n            // Delete + Insert due to an overview ruler status change\n            this._decorationsTree.delete(node);\n            node.setOptions(options);\n            this._decorationsTree.insert(node);\n        }\n        else {\n            node.setOptions(options);\n        }\n    }\n    _deltaDecorationsImpl(ownerId, oldDecorationsIds, newDecorations) {\n        const versionId = this.getVersionId();\n        const oldDecorationsLen = oldDecorationsIds.length;\n        let oldDecorationIndex = 0;\n        const newDecorationsLen = newDecorations.length;\n        let newDecorationIndex = 0;\n        const result = new Array(newDecorationsLen);\n        while (oldDecorationIndex < oldDecorationsLen || newDecorationIndex < newDecorationsLen) {\n            let node = null;\n            if (oldDecorationIndex < oldDecorationsLen) {\n                // (1) get ourselves an old node\n                do {\n                    node = this._decorations[oldDecorationsIds[oldDecorationIndex++]];\n                } while (!node && oldDecorationIndex < oldDecorationsLen);\n                // (2) remove the node from the tree (if it exists)\n                if (node) {\n                    if (node.options.after) {\n                        const nodeRange = this._decorationsTree.getNodeRange(this, node);\n                        this._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.endLineNumber);\n                    }\n                    if (node.options.before) {\n                        const nodeRange = this._decorationsTree.getNodeRange(this, node);\n                        this._onDidChangeDecorations.recordLineAffectedByInjectedText(nodeRange.startLineNumber);\n                    }\n                    this._decorationsTree.delete(node);\n                    this._onDidChangeDecorations.checkAffectedAndFire(node.options);\n                }\n            }\n            if (newDecorationIndex < newDecorationsLen) {\n                // (3) create a new node if necessary\n                if (!node) {\n                    const internalDecorationId = (++this._lastDecorationId);\n                    const decorationId = `${this._instanceId};${internalDecorationId}`;\n                    node = new IntervalNode(decorationId, 0, 0);\n                    this._decorations[decorationId] = node;\n                }\n                // (4) initialize node\n                const newDecoration = newDecorations[newDecorationIndex];\n                const range = this._validateRangeRelaxedNoAllocations(newDecoration.range);\n                const options = _normalizeOptions(newDecoration.options);\n                const startOffset = this._buffer.getOffsetAt(range.startLineNumber, range.startColumn);\n                const endOffset = this._buffer.getOffsetAt(range.endLineNumber, range.endColumn);\n                node.ownerId = ownerId;\n                node.reset(versionId, startOffset, endOffset, range);\n                node.setOptions(options);\n                if (node.options.after) {\n                    this._onDidChangeDecorations.recordLineAffectedByInjectedText(range.endLineNumber);\n                }\n                if (node.options.before) {\n                    this._onDidChangeDecorations.recordLineAffectedByInjectedText(range.startLineNumber);\n                }\n                this._onDidChangeDecorations.checkAffectedAndFire(options);\n                this._decorationsTree.insert(node);\n                result[newDecorationIndex] = node.id;\n                newDecorationIndex++;\n            }\n            else {\n                if (node) {\n                    delete this._decorations[node.id];\n                }\n            }\n        }\n        return result;\n    }\n    setTokens(tokens, backgroundTokenizationCompleted = false) {\n        if (tokens.length !== 0) {\n            const ranges = [];\n            for (let i = 0, len = tokens.length; i < len; i++) {\n                const element = tokens[i];\n                let minChangedLineNumber = 0;\n                let maxChangedLineNumber = 0;\n                let hasChange = false;\n                for (let lineNumber = element.startLineNumber; lineNumber <= element.endLineNumber; lineNumber++) {\n                    if (hasChange) {\n                        this._tokens.setTokens(this._languageId, lineNumber - 1, this._buffer.getLineLength(lineNumber), element.getLineTokens(lineNumber), false);\n                        maxChangedLineNumber = lineNumber;\n                    }\n                    else {\n                        const lineHasChange = this._tokens.setTokens(this._languageId, lineNumber - 1, this._buffer.getLineLength(lineNumber), element.getLineTokens(lineNumber), true);\n                        if (lineHasChange) {\n                            hasChange = true;\n                            minChangedLineNumber = lineNumber;\n                            maxChangedLineNumber = lineNumber;\n                        }\n                    }\n                }\n                if (hasChange) {\n                    ranges.push({ fromLineNumber: minChangedLineNumber, toLineNumber: maxChangedLineNumber });\n                }\n            }\n            if (ranges.length > 0) {\n                this._emitModelTokensChangedEvent({\n                    tokenizationSupportChanged: false,\n                    semanticTokensApplied: false,\n                    ranges: ranges\n                });\n            }\n        }\n        this.handleTokenizationProgress(backgroundTokenizationCompleted);\n    }\n    setSemanticTokens(tokens, isComplete) {\n        this._semanticTokens.set(tokens, isComplete);\n        this._emitModelTokensChangedEvent({\n            tokenizationSupportChanged: false,\n            semanticTokensApplied: tokens !== null,\n            ranges: [{ fromLineNumber: 1, toLineNumber: this.getLineCount() }]\n        });\n    }\n    hasCompleteSemanticTokens() {\n        return this._semanticTokens.isComplete();\n    }\n    hasSomeSemanticTokens() {\n        return !this._semanticTokens.isEmpty();\n    }\n    setPartialSemanticTokens(range, tokens) {\n        if (this.hasCompleteSemanticTokens()) {\n            return;\n        }\n        const changedRange = this.validateRange(this._semanticTokens.setPartial(range, tokens));\n        this._emitModelTokensChangedEvent({\n            tokenizationSupportChanged: false,\n            semanticTokensApplied: true,\n            ranges: [{ fromLineNumber: changedRange.startLineNumber, toLineNumber: changedRange.endLineNumber }]\n        });\n    }\n    tokenizeViewport(startLineNumber, endLineNumber) {\n        startLineNumber = Math.max(1, startLineNumber);\n        endLineNumber = Math.min(this._buffer.getLineCount(), endLineNumber);\n        this._tokenization.tokenizeViewport(startLineNumber, endLineNumber);\n    }\n    clearTokens() {\n        this._tokens.flush();\n        this._emitModelTokensChangedEvent({\n            tokenizationSupportChanged: true,\n            semanticTokensApplied: false,\n            ranges: [{\n                    fromLineNumber: 1,\n                    toLineNumber: this._buffer.getLineCount()\n                }]\n        });\n    }\n    _emitModelTokensChangedEvent(e) {\n        if (!this._isDisposing) {\n            this._bracketPairColorizer.handleDidChangeTokens(e);\n            this._onDidChangeTokens.fire(e);\n        }\n    }\n    resetTokenization() {\n        this._tokenization.reset();\n    }\n    forceTokenization(lineNumber) {\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        this._tokenization.forceTokenization(lineNumber);\n    }\n    isCheapToTokenize(lineNumber) {\n        return this._tokenization.isCheapToTokenize(lineNumber);\n    }\n    tokenizeIfCheap(lineNumber) {\n        if (this.isCheapToTokenize(lineNumber)) {\n            this.forceTokenization(lineNumber);\n        }\n    }\n    getLineTokens(lineNumber) {\n        if (lineNumber < 1 || lineNumber > this.getLineCount()) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return this._getLineTokens(lineNumber);\n    }\n    _getLineTokens(lineNumber) {\n        const lineText = this.getLineContent(lineNumber);\n        const syntacticTokens = this._tokens.getTokens(this._languageId, lineNumber - 1, lineText);\n        return this._semanticTokens.addSparseTokens(lineNumber, syntacticTokens);\n    }\n    getLanguageId() {\n        return this._languageId;\n    }\n    setMode(languageId) {\n        if (this._languageId === languageId) {\n            // There's nothing to do\n            return;\n        }\n        const e = {\n            oldLanguage: this._languageId,\n            newLanguage: languageId\n        };\n        this._languageId = languageId;\n        this._bracketPairColorizer.handleDidChangeLanguage(e);\n        this._tokenization.handleDidChangeLanguage(e);\n        this._onDidChangeLanguage.fire(e);\n        this._onDidChangeLanguageConfiguration.fire({});\n    }\n    getLanguageIdAtPosition(lineNumber, column) {\n        const position = this.validatePosition(new Position(lineNumber, column));\n        const lineTokens = this.getLineTokens(position.lineNumber);\n        return lineTokens.getLanguageId(lineTokens.findTokenIndexAtOffset(position.column - 1));\n    }\n    getTokenTypeIfInsertingCharacter(lineNumber, column, character) {\n        const position = this.validatePosition(new Position(lineNumber, column));\n        return this._tokenization.getTokenTypeIfInsertingCharacter(position, character);\n    }\n    tokenizeLineWithEdit(position, length, newText) {\n        const validatedPosition = this.validatePosition(position);\n        return this._tokenization.tokenizeLineWithEdit(validatedPosition, length, newText);\n    }\n    getLanguageConfiguration(languageId) {\n        return this._languageConfigurationService.getLanguageConfiguration(languageId);\n    }\n    // Having tokens allows implementing additional helper methods\n    getWordAtPosition(_position) {\n        this._assertNotDisposed();\n        const position = this.validatePosition(_position);\n        const lineContent = this.getLineContent(position.lineNumber);\n        const lineTokens = this._getLineTokens(position.lineNumber);\n        const tokenIndex = lineTokens.findTokenIndexAtOffset(position.column - 1);\n        // (1). First try checking right biased word\n        const [rbStartOffset, rbEndOffset] = TextModel._findLanguageBoundaries(lineTokens, tokenIndex);\n        const rightBiasedWord = getWordAtText(position.column, this.getLanguageConfiguration(lineTokens.getLanguageId(tokenIndex)).getWordDefinition(), lineContent.substring(rbStartOffset, rbEndOffset), rbStartOffset);\n        // Make sure the result touches the original passed in position\n        if (rightBiasedWord && rightBiasedWord.startColumn <= _position.column && _position.column <= rightBiasedWord.endColumn) {\n            return rightBiasedWord;\n        }\n        // (2). Else, if we were at a language boundary, check the left biased word\n        if (tokenIndex > 0 && rbStartOffset === position.column - 1) {\n            // edge case, where `position` sits between two tokens belonging to two different languages\n            const [lbStartOffset, lbEndOffset] = TextModel._findLanguageBoundaries(lineTokens, tokenIndex - 1);\n            const leftBiasedWord = getWordAtText(position.column, this.getLanguageConfiguration(lineTokens.getLanguageId(tokenIndex - 1)).getWordDefinition(), lineContent.substring(lbStartOffset, lbEndOffset), lbStartOffset);\n            // Make sure the result touches the original passed in position\n            if (leftBiasedWord && leftBiasedWord.startColumn <= _position.column && _position.column <= leftBiasedWord.endColumn) {\n                return leftBiasedWord;\n            }\n        }\n        return null;\n    }\n    static _findLanguageBoundaries(lineTokens, tokenIndex) {\n        const languageId = lineTokens.getLanguageId(tokenIndex);\n        // go left until a different language is hit\n        let startOffset = 0;\n        for (let i = tokenIndex; i >= 0 && lineTokens.getLanguageId(i) === languageId; i--) {\n            startOffset = lineTokens.getStartOffset(i);\n        }\n        // go right until a different language is hit\n        let endOffset = lineTokens.getLineContent().length;\n        for (let i = tokenIndex, tokenCount = lineTokens.getCount(); i < tokenCount && lineTokens.getLanguageId(i) === languageId; i++) {\n            endOffset = lineTokens.getEndOffset(i);\n        }\n        return [startOffset, endOffset];\n    }\n    getWordUntilPosition(position) {\n        const wordAtPosition = this.getWordAtPosition(position);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: wordAtPosition.word.substr(0, position.column - wordAtPosition.startColumn),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    }\n    //#endregion\n    normalizePosition(position, affinity) {\n        return position;\n    }\n    /**\n     * Gets the column at which indentation stops at a given line.\n     * @internal\n    */\n    getLineIndentColumn(lineNumber) {\n        // Columns start with 1.\n        return indentOfLine(this.getLineContent(lineNumber)) + 1;\n    }\n};\nTextModel.MODEL_SYNC_LIMIT = 50 * 1024 * 1024; // 50 MB\nTextModel.LARGE_FILE_SIZE_THRESHOLD = 20 * 1024 * 1024; // 20 MB;\nTextModel.LARGE_FILE_LINE_COUNT_THRESHOLD = 300 * 1000; // 300K lines\nTextModel.DEFAULT_CREATION_OPTIONS = {\n    isForSimpleWidget: false,\n    tabSize: EDITOR_MODEL_DEFAULTS.tabSize,\n    indentSize: EDITOR_MODEL_DEFAULTS.indentSize,\n    insertSpaces: EDITOR_MODEL_DEFAULTS.insertSpaces,\n    detectIndentation: false,\n    defaultEOL: 1 /* LF */,\n    trimAutoWhitespace: EDITOR_MODEL_DEFAULTS.trimAutoWhitespace,\n    largeFileOptimizations: EDITOR_MODEL_DEFAULTS.largeFileOptimizations,\n    bracketPairColorizationOptions: EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions,\n};\nTextModel = __decorate([\n    __param(4, IUndoRedoService),\n    __param(5, ILanguageService),\n    __param(6, ILanguageConfigurationService)\n], TextModel);\nexport { TextModel };\nfunction indentOfLine(line) {\n    let indent = 0;\n    for (const c of line) {\n        if (c === ' ' || c === '\\t') {\n            indent++;\n        }\n        else {\n            break;\n        }\n    }\n    return indent;\n}\n//#region Decorations\nfunction isNodeInOverviewRuler(node) {\n    return (node.options.overviewRuler && node.options.overviewRuler.color ? true : false);\n}\nfunction isNodeInjectedText(node) {\n    return !!node.options.after || !!node.options.before;\n}\nclass DecorationsTrees {\n    constructor() {\n        this._decorationsTree0 = new IntervalTree();\n        this._decorationsTree1 = new IntervalTree();\n        this._injectedTextDecorationsTree = new IntervalTree();\n    }\n    ensureAllNodesHaveRanges(host) {\n        this.getAll(host, 0, false, false);\n    }\n    _ensureNodesHaveRanges(host, nodes) {\n        for (const node of nodes) {\n            if (node.range === null) {\n                node.range = host.getRangeAt(node.cachedAbsoluteStart, node.cachedAbsoluteEnd);\n            }\n        }\n        return nodes;\n    }\n    getAllInInterval(host, start, end, filterOwnerId, filterOutValidation) {\n        const versionId = host.getVersionId();\n        const result = this._intervalSearch(start, end, filterOwnerId, filterOutValidation, versionId);\n        return this._ensureNodesHaveRanges(host, result);\n    }\n    _intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId) {\n        const r0 = this._decorationsTree0.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId);\n        const r1 = this._decorationsTree1.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId);\n        const r2 = this._injectedTextDecorationsTree.intervalSearch(start, end, filterOwnerId, filterOutValidation, cachedVersionId);\n        return r0.concat(r1).concat(r2);\n    }\n    getInjectedTextInInterval(host, start, end, filterOwnerId) {\n        const versionId = host.getVersionId();\n        const result = this._injectedTextDecorationsTree.intervalSearch(start, end, filterOwnerId, false, versionId);\n        return this._ensureNodesHaveRanges(host, result).filter((i) => i.options.showIfCollapsed || !i.range.isEmpty());\n    }\n    getAllInjectedText(host, filterOwnerId) {\n        const versionId = host.getVersionId();\n        const result = this._injectedTextDecorationsTree.search(filterOwnerId, false, versionId);\n        return this._ensureNodesHaveRanges(host, result).filter((i) => i.options.showIfCollapsed || !i.range.isEmpty());\n    }\n    getAll(host, filterOwnerId, filterOutValidation, overviewRulerOnly) {\n        const versionId = host.getVersionId();\n        const result = this._search(filterOwnerId, filterOutValidation, overviewRulerOnly, versionId);\n        return this._ensureNodesHaveRanges(host, result);\n    }\n    _search(filterOwnerId, filterOutValidation, overviewRulerOnly, cachedVersionId) {\n        if (overviewRulerOnly) {\n            return this._decorationsTree1.search(filterOwnerId, filterOutValidation, cachedVersionId);\n        }\n        else {\n            const r0 = this._decorationsTree0.search(filterOwnerId, filterOutValidation, cachedVersionId);\n            const r1 = this._decorationsTree1.search(filterOwnerId, filterOutValidation, cachedVersionId);\n            const r2 = this._injectedTextDecorationsTree.search(filterOwnerId, filterOutValidation, cachedVersionId);\n            return r0.concat(r1).concat(r2);\n        }\n    }\n    collectNodesFromOwner(ownerId) {\n        const r0 = this._decorationsTree0.collectNodesFromOwner(ownerId);\n        const r1 = this._decorationsTree1.collectNodesFromOwner(ownerId);\n        const r2 = this._injectedTextDecorationsTree.collectNodesFromOwner(ownerId);\n        return r0.concat(r1).concat(r2);\n    }\n    collectNodesPostOrder() {\n        const r0 = this._decorationsTree0.collectNodesPostOrder();\n        const r1 = this._decorationsTree1.collectNodesPostOrder();\n        const r2 = this._injectedTextDecorationsTree.collectNodesPostOrder();\n        return r0.concat(r1).concat(r2);\n    }\n    insert(node) {\n        if (isNodeInjectedText(node)) {\n            this._injectedTextDecorationsTree.insert(node);\n        }\n        else if (isNodeInOverviewRuler(node)) {\n            this._decorationsTree1.insert(node);\n        }\n        else {\n            this._decorationsTree0.insert(node);\n        }\n    }\n    delete(node) {\n        if (isNodeInjectedText(node)) {\n            this._injectedTextDecorationsTree.delete(node);\n        }\n        else if (isNodeInOverviewRuler(node)) {\n            this._decorationsTree1.delete(node);\n        }\n        else {\n            this._decorationsTree0.delete(node);\n        }\n    }\n    getNodeRange(host, node) {\n        const versionId = host.getVersionId();\n        if (node.cachedVersionId !== versionId) {\n            this._resolveNode(node, versionId);\n        }\n        if (node.range === null) {\n            node.range = host.getRangeAt(node.cachedAbsoluteStart, node.cachedAbsoluteEnd);\n        }\n        return node.range;\n    }\n    _resolveNode(node, cachedVersionId) {\n        if (isNodeInjectedText(node)) {\n            this._injectedTextDecorationsTree.resolveNode(node, cachedVersionId);\n        }\n        else if (isNodeInOverviewRuler(node)) {\n            this._decorationsTree1.resolveNode(node, cachedVersionId);\n        }\n        else {\n            this._decorationsTree0.resolveNode(node, cachedVersionId);\n        }\n    }\n    acceptReplace(offset, length, textLength, forceMoveMarkers) {\n        this._decorationsTree0.acceptReplace(offset, length, textLength, forceMoveMarkers);\n        this._decorationsTree1.acceptReplace(offset, length, textLength, forceMoveMarkers);\n        this._injectedTextDecorationsTree.acceptReplace(offset, length, textLength, forceMoveMarkers);\n    }\n}\nfunction cleanClassName(className) {\n    return className.replace(/[^a-z0-9\\-_]/gi, ' ');\n}\nclass DecorationOptions {\n    constructor(options) {\n        this.color = options.color || '';\n        this.darkColor = options.darkColor || '';\n    }\n}\nexport class ModelDecorationOverviewRulerOptions extends DecorationOptions {\n    constructor(options) {\n        super(options);\n        this._resolvedColor = null;\n        this.position = (typeof options.position === 'number' ? options.position : model.OverviewRulerLane.Center);\n    }\n    getColor(theme) {\n        if (!this._resolvedColor) {\n            if (theme.type !== 'light' && this.darkColor) {\n                this._resolvedColor = this._resolveColor(this.darkColor, theme);\n            }\n            else {\n                this._resolvedColor = this._resolveColor(this.color, theme);\n            }\n        }\n        return this._resolvedColor;\n    }\n    invalidateCachedColor() {\n        this._resolvedColor = null;\n    }\n    _resolveColor(color, theme) {\n        if (typeof color === 'string') {\n            return color;\n        }\n        const c = color ? theme.getColor(color.id) : null;\n        if (!c) {\n            return '';\n        }\n        return c.toString();\n    }\n}\nexport class ModelDecorationMinimapOptions extends DecorationOptions {\n    constructor(options) {\n        super(options);\n        this.position = options.position;\n    }\n    getColor(theme) {\n        if (!this._resolvedColor) {\n            if (theme.type !== 'light' && this.darkColor) {\n                this._resolvedColor = this._resolveColor(this.darkColor, theme);\n            }\n            else {\n                this._resolvedColor = this._resolveColor(this.color, theme);\n            }\n        }\n        return this._resolvedColor;\n    }\n    invalidateCachedColor() {\n        this._resolvedColor = undefined;\n    }\n    _resolveColor(color, theme) {\n        if (typeof color === 'string') {\n            return Color.fromHex(color);\n        }\n        return theme.getColor(color.id);\n    }\n}\nexport class ModelDecorationInjectedTextOptions {\n    constructor(options) {\n        this.content = options.content || '';\n        this.inlineClassName = options.inlineClassName || null;\n        this.inlineClassNameAffectsLetterSpacing = options.inlineClassNameAffectsLetterSpacing || false;\n        this.attachedData = options.attachedData || null;\n        this.cursorStops = options.cursorStops || null;\n    }\n    static from(options) {\n        if (options instanceof ModelDecorationInjectedTextOptions) {\n            return options;\n        }\n        return new ModelDecorationInjectedTextOptions(options);\n    }\n}\nexport class ModelDecorationOptions {\n    constructor(options) {\n        var _a, _b;\n        this.description = options.description;\n        this.stickiness = options.stickiness || 0 /* AlwaysGrowsWhenTypingAtEdges */;\n        this.zIndex = options.zIndex || 0;\n        this.className = options.className ? cleanClassName(options.className) : null;\n        this.hoverMessage = options.hoverMessage || null;\n        this.glyphMarginHoverMessage = options.glyphMarginHoverMessage || null;\n        this.isWholeLine = options.isWholeLine || false;\n        this.showIfCollapsed = options.showIfCollapsed || false;\n        this.collapseOnReplaceEdit = options.collapseOnReplaceEdit || false;\n        this.overviewRuler = options.overviewRuler ? new ModelDecorationOverviewRulerOptions(options.overviewRuler) : null;\n        this.minimap = options.minimap ? new ModelDecorationMinimapOptions(options.minimap) : null;\n        this.glyphMarginClassName = options.glyphMarginClassName ? cleanClassName(options.glyphMarginClassName) : null;\n        this.linesDecorationsClassName = options.linesDecorationsClassName ? cleanClassName(options.linesDecorationsClassName) : null;\n        this.firstLineDecorationClassName = options.firstLineDecorationClassName ? cleanClassName(options.firstLineDecorationClassName) : null;\n        this.marginClassName = options.marginClassName ? cleanClassName(options.marginClassName) : null;\n        this.inlineClassName = options.inlineClassName ? cleanClassName(options.inlineClassName) : null;\n        this.inlineClassNameAffectsLetterSpacing = options.inlineClassNameAffectsLetterSpacing || false;\n        this.beforeContentClassName = options.beforeContentClassName ? cleanClassName(options.beforeContentClassName) : null;\n        this.afterContentClassName = options.afterContentClassName ? cleanClassName(options.afterContentClassName) : null;\n        this.after = options.after ? ModelDecorationInjectedTextOptions.from(options.after) : null;\n        this.before = options.before ? ModelDecorationInjectedTextOptions.from(options.before) : null;\n        this.hideInCommentTokens = (_a = options.hideInCommentTokens) !== null && _a !== void 0 ? _a : false;\n        this.hideInStringTokens = (_b = options.hideInStringTokens) !== null && _b !== void 0 ? _b : false;\n    }\n    static register(options) {\n        return new ModelDecorationOptions(options);\n    }\n    static createDynamic(options) {\n        return new ModelDecorationOptions(options);\n    }\n}\nModelDecorationOptions.EMPTY = ModelDecorationOptions.register({ description: 'empty' });\n/**\n * The order carefully matches the values of the enum.\n */\nconst TRACKED_RANGE_OPTIONS = [\n    ModelDecorationOptions.register({ description: 'tracked-range-always-grows-when-typing-at-edges', stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */ }),\n    ModelDecorationOptions.register({ description: 'tracked-range-never-grows-when-typing-at-edges', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ }),\n    ModelDecorationOptions.register({ description: 'tracked-range-grows-only-when-typing-before', stickiness: 2 /* GrowsOnlyWhenTypingBefore */ }),\n    ModelDecorationOptions.register({ description: 'tracked-range-grows-only-when-typing-after', stickiness: 3 /* GrowsOnlyWhenTypingAfter */ }),\n];\nfunction _normalizeOptions(options) {\n    if (options instanceof ModelDecorationOptions) {\n        return options;\n    }\n    return ModelDecorationOptions.createDynamic(options);\n}\nexport class DidChangeDecorationsEmitter extends Disposable {\n    constructor(handleBeforeFire) {\n        super();\n        this.handleBeforeFire = handleBeforeFire;\n        this._actual = this._register(new Emitter());\n        this.event = this._actual.event;\n        this._affectedInjectedTextLines = null;\n        this._deferredCnt = 0;\n        this._shouldFire = false;\n        this._affectsMinimap = false;\n        this._affectsOverviewRuler = false;\n    }\n    beginDeferredEmit() {\n        this._deferredCnt++;\n    }\n    endDeferredEmit() {\n        var _a;\n        this._deferredCnt--;\n        if (this._deferredCnt === 0) {\n            if (this._shouldFire) {\n                this.handleBeforeFire(this._affectedInjectedTextLines);\n                const event = {\n                    affectsMinimap: this._affectsMinimap,\n                    affectsOverviewRuler: this._affectsOverviewRuler\n                };\n                this._shouldFire = false;\n                this._affectsMinimap = false;\n                this._affectsOverviewRuler = false;\n                this._actual.fire(event);\n            }\n            (_a = this._affectedInjectedTextLines) === null || _a === void 0 ? void 0 : _a.clear();\n            this._affectedInjectedTextLines = null;\n        }\n    }\n    recordLineAffectedByInjectedText(lineNumber) {\n        if (!this._affectedInjectedTextLines) {\n            this._affectedInjectedTextLines = new Set();\n        }\n        this._affectedInjectedTextLines.add(lineNumber);\n    }\n    checkAffectedAndFire(options) {\n        if (!this._affectsMinimap) {\n            this._affectsMinimap = options.minimap && options.minimap.position ? true : false;\n        }\n        if (!this._affectsOverviewRuler) {\n            this._affectsOverviewRuler = options.overviewRuler && options.overviewRuler.color ? true : false;\n        }\n        this._shouldFire = true;\n    }\n    fire() {\n        this._affectsMinimap = true;\n        this._affectsOverviewRuler = true;\n        this._shouldFire = true;\n    }\n}\n//#endregion\nexport class DidChangeContentEmitter extends Disposable {\n    constructor() {\n        super();\n        /**\n         * Both `fastEvent` and `slowEvent` work the same way and contain the same events, but first we invoke `fastEvent` and then `slowEvent`.\n         */\n        this._fastEmitter = this._register(new Emitter());\n        this.fastEvent = this._fastEmitter.event;\n        this._slowEmitter = this._register(new Emitter());\n        this.slowEvent = this._slowEmitter.event;\n        this._deferredCnt = 0;\n        this._deferredEvent = null;\n    }\n    beginDeferredEmit() {\n        this._deferredCnt++;\n    }\n    endDeferredEmit(resultingSelection = null) {\n        this._deferredCnt--;\n        if (this._deferredCnt === 0) {\n            if (this._deferredEvent !== null) {\n                this._deferredEvent.rawContentChangedEvent.resultingSelection = resultingSelection;\n                const e = this._deferredEvent;\n                this._deferredEvent = null;\n                this._fastEmitter.fire(e);\n                this._slowEmitter.fire(e);\n            }\n        }\n    }\n    fire(e) {\n        if (this._deferredCnt > 0) {\n            if (this._deferredEvent) {\n                this._deferredEvent = this._deferredEvent.merge(e);\n            }\n            else {\n                this._deferredEvent = e;\n            }\n            return;\n        }\n        this._fastEmitter.fire(e);\n        this._slowEmitter.fire(e);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class FastDomNode {\n    constructor(domNode) {\n        this.domNode = domNode;\n        this._maxWidth = -1;\n        this._width = -1;\n        this._height = -1;\n        this._top = -1;\n        this._left = -1;\n        this._bottom = -1;\n        this._right = -1;\n        this._fontFamily = '';\n        this._fontWeight = '';\n        this._fontSize = -1;\n        this._fontStyle = '';\n        this._fontFeatureSettings = '';\n        this._textDecoration = '';\n        this._lineHeight = -1;\n        this._letterSpacing = -100;\n        this._className = '';\n        this._display = '';\n        this._position = '';\n        this._visibility = '';\n        this._color = '';\n        this._backgroundColor = '';\n        this._layerHint = false;\n        this._contain = 'none';\n        this._boxShadow = '';\n    }\n    setMaxWidth(maxWidth) {\n        if (this._maxWidth === maxWidth) {\n            return;\n        }\n        this._maxWidth = maxWidth;\n        this.domNode.style.maxWidth = this._maxWidth + 'px';\n    }\n    setWidth(width) {\n        if (this._width === width) {\n            return;\n        }\n        this._width = width;\n        this.domNode.style.width = this._width + 'px';\n    }\n    setHeight(height) {\n        if (this._height === height) {\n            return;\n        }\n        this._height = height;\n        this.domNode.style.height = this._height + 'px';\n    }\n    setTop(top) {\n        if (this._top === top) {\n            return;\n        }\n        this._top = top;\n        this.domNode.style.top = this._top + 'px';\n    }\n    unsetTop() {\n        if (this._top === -1) {\n            return;\n        }\n        this._top = -1;\n        this.domNode.style.top = '';\n    }\n    setLeft(left) {\n        if (this._left === left) {\n            return;\n        }\n        this._left = left;\n        this.domNode.style.left = this._left + 'px';\n    }\n    setBottom(bottom) {\n        if (this._bottom === bottom) {\n            return;\n        }\n        this._bottom = bottom;\n        this.domNode.style.bottom = this._bottom + 'px';\n    }\n    setRight(right) {\n        if (this._right === right) {\n            return;\n        }\n        this._right = right;\n        this.domNode.style.right = this._right + 'px';\n    }\n    setFontFamily(fontFamily) {\n        if (this._fontFamily === fontFamily) {\n            return;\n        }\n        this._fontFamily = fontFamily;\n        this.domNode.style.fontFamily = this._fontFamily;\n    }\n    setFontWeight(fontWeight) {\n        if (this._fontWeight === fontWeight) {\n            return;\n        }\n        this._fontWeight = fontWeight;\n        this.domNode.style.fontWeight = this._fontWeight;\n    }\n    setFontSize(fontSize) {\n        if (this._fontSize === fontSize) {\n            return;\n        }\n        this._fontSize = fontSize;\n        this.domNode.style.fontSize = this._fontSize + 'px';\n    }\n    setFontStyle(fontStyle) {\n        if (this._fontStyle === fontStyle) {\n            return;\n        }\n        this._fontStyle = fontStyle;\n        this.domNode.style.fontStyle = this._fontStyle;\n    }\n    setFontFeatureSettings(fontFeatureSettings) {\n        if (this._fontFeatureSettings === fontFeatureSettings) {\n            return;\n        }\n        this._fontFeatureSettings = fontFeatureSettings;\n        this.domNode.style.fontFeatureSettings = this._fontFeatureSettings;\n    }\n    setTextDecoration(textDecoration) {\n        if (this._textDecoration === textDecoration) {\n            return;\n        }\n        this._textDecoration = textDecoration;\n        this.domNode.style.textDecoration = this._textDecoration;\n    }\n    setLineHeight(lineHeight) {\n        if (this._lineHeight === lineHeight) {\n            return;\n        }\n        this._lineHeight = lineHeight;\n        this.domNode.style.lineHeight = this._lineHeight + 'px';\n    }\n    setLetterSpacing(letterSpacing) {\n        if (this._letterSpacing === letterSpacing) {\n            return;\n        }\n        this._letterSpacing = letterSpacing;\n        this.domNode.style.letterSpacing = this._letterSpacing + 'px';\n    }\n    setClassName(className) {\n        if (this._className === className) {\n            return;\n        }\n        this._className = className;\n        this.domNode.className = this._className;\n    }\n    toggleClassName(className, shouldHaveIt) {\n        this.domNode.classList.toggle(className, shouldHaveIt);\n        this._className = this.domNode.className;\n    }\n    setDisplay(display) {\n        if (this._display === display) {\n            return;\n        }\n        this._display = display;\n        this.domNode.style.display = this._display;\n    }\n    setPosition(position) {\n        if (this._position === position) {\n            return;\n        }\n        this._position = position;\n        this.domNode.style.position = this._position;\n    }\n    setVisibility(visibility) {\n        if (this._visibility === visibility) {\n            return;\n        }\n        this._visibility = visibility;\n        this.domNode.style.visibility = this._visibility;\n    }\n    setColor(color) {\n        if (this._color === color) {\n            return;\n        }\n        this._color = color;\n        this.domNode.style.color = this._color;\n    }\n    setBackgroundColor(backgroundColor) {\n        if (this._backgroundColor === backgroundColor) {\n            return;\n        }\n        this._backgroundColor = backgroundColor;\n        this.domNode.style.backgroundColor = this._backgroundColor;\n    }\n    setLayerHinting(layerHint) {\n        if (this._layerHint === layerHint) {\n            return;\n        }\n        this._layerHint = layerHint;\n        this.domNode.style.transform = this._layerHint ? 'translate3d(0px, 0px, 0px)' : '';\n    }\n    setBoxShadow(boxShadow) {\n        if (this._boxShadow === boxShadow) {\n            return;\n        }\n        this._boxShadow = boxShadow;\n        this.domNode.style.boxShadow = boxShadow;\n    }\n    setContain(contain) {\n        if (this._contain === contain) {\n            return;\n        }\n        this._contain = contain;\n        this.domNode.style.contain = this._contain;\n    }\n    setAttribute(name, value) {\n        this.domNode.setAttribute(name, value);\n    }\n    removeAttribute(name) {\n        this.domNode.removeAttribute(name);\n    }\n    appendChild(child) {\n        this.domNode.appendChild(child.domNode);\n    }\n    removeChild(child) {\n        this.domNode.removeChild(child.domNode);\n    }\n}\nexport function createFastDomNode(domNode) {\n    return new FastDomNode(domNode);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as DOM from './dom.js';\nexport function renderText(text, options = {}) {\n    const element = createElement(options);\n    element.textContent = text;\n    return element;\n}\nexport function renderFormattedText(formattedText, options = {}) {\n    const element = createElement(options);\n    _renderFormattedText(element, parseFormattedText(formattedText, !!options.renderCodeSegments), options.actionHandler, options.renderCodeSegments);\n    return element;\n}\nexport function createElement(options) {\n    const tagName = options.inline ? 'span' : 'div';\n    const element = document.createElement(tagName);\n    if (options.className) {\n        element.className = options.className;\n    }\n    return element;\n}\nclass StringStream {\n    constructor(source) {\n        this.source = source;\n        this.index = 0;\n    }\n    eos() {\n        return this.index >= this.source.length;\n    }\n    next() {\n        const next = this.peek();\n        this.advance();\n        return next;\n    }\n    peek() {\n        return this.source[this.index];\n    }\n    advance() {\n        this.index++;\n    }\n}\nfunction _renderFormattedText(element, treeNode, actionHandler, renderCodeSegments) {\n    let child;\n    if (treeNode.type === 2 /* Text */) {\n        child = document.createTextNode(treeNode.content || '');\n    }\n    else if (treeNode.type === 3 /* Bold */) {\n        child = document.createElement('b');\n    }\n    else if (treeNode.type === 4 /* Italics */) {\n        child = document.createElement('i');\n    }\n    else if (treeNode.type === 7 /* Code */ && renderCodeSegments) {\n        child = document.createElement('code');\n    }\n    else if (treeNode.type === 5 /* Action */ && actionHandler) {\n        const a = document.createElement('a');\n        actionHandler.disposables.add(DOM.addStandardDisposableListener(a, 'click', (event) => {\n            actionHandler.callback(String(treeNode.index), event);\n        }));\n        child = a;\n    }\n    else if (treeNode.type === 8 /* NewLine */) {\n        child = document.createElement('br');\n    }\n    else if (treeNode.type === 1 /* Root */) {\n        child = element;\n    }\n    if (child && element !== child) {\n        element.appendChild(child);\n    }\n    if (child && Array.isArray(treeNode.children)) {\n        treeNode.children.forEach((nodeChild) => {\n            _renderFormattedText(child, nodeChild, actionHandler, renderCodeSegments);\n        });\n    }\n}\nfunction parseFormattedText(content, parseCodeSegments) {\n    const root = {\n        type: 1 /* Root */,\n        children: []\n    };\n    let actionViewItemIndex = 0;\n    let current = root;\n    const stack = [];\n    const stream = new StringStream(content);\n    while (!stream.eos()) {\n        let next = stream.next();\n        const isEscapedFormatType = (next === '\\\\' && formatTagType(stream.peek(), parseCodeSegments) !== 0 /* Invalid */);\n        if (isEscapedFormatType) {\n            next = stream.next(); // unread the backslash if it escapes a format tag type\n        }\n        if (!isEscapedFormatType && isFormatTag(next, parseCodeSegments) && next === stream.peek()) {\n            stream.advance();\n            if (current.type === 2 /* Text */) {\n                current = stack.pop();\n            }\n            const type = formatTagType(next, parseCodeSegments);\n            if (current.type === type || (current.type === 5 /* Action */ && type === 6 /* ActionClose */)) {\n                current = stack.pop();\n            }\n            else {\n                const newCurrent = {\n                    type: type,\n                    children: []\n                };\n                if (type === 5 /* Action */) {\n                    newCurrent.index = actionViewItemIndex;\n                    actionViewItemIndex++;\n                }\n                current.children.push(newCurrent);\n                stack.push(current);\n                current = newCurrent;\n            }\n        }\n        else if (next === '\\n') {\n            if (current.type === 2 /* Text */) {\n                current = stack.pop();\n            }\n            current.children.push({\n                type: 8 /* NewLine */\n            });\n        }\n        else {\n            if (current.type !== 2 /* Text */) {\n                const textCurrent = {\n                    type: 2 /* Text */,\n                    content: next\n                };\n                current.children.push(textCurrent);\n                stack.push(current);\n                current = textCurrent;\n            }\n            else {\n                current.content += next;\n            }\n        }\n    }\n    if (current.type === 2 /* Text */) {\n        current = stack.pop();\n    }\n    if (stack.length) {\n        // incorrectly formatted string literal\n    }\n    return root;\n}\nfunction isFormatTag(char, supportCodeSegments) {\n    return formatTagType(char, supportCodeSegments) !== 0 /* Invalid */;\n}\nfunction formatTagType(char, supportCodeSegments) {\n    switch (char) {\n        case '*':\n            return 3 /* Bold */;\n        case '_':\n            return 4 /* Italics */;\n        case '[':\n            return 5 /* Action */;\n        case ']':\n            return 6 /* ActionClose */;\n        case '`':\n            return supportCodeSegments ? 7 /* Code */ : 0 /* Invalid */;\n        default:\n            return 0 /* Invalid */;\n    }\n}\n", "import { Mimes } from '../common/mime.js';\n// Common data transfers\nexport const DataTransfers = {\n    /**\n     * Application specific resource transfer type\n     */\n    RESOURCES: 'ResourceURLs',\n    /**\n     * Browser specific transfer type to download\n     */\n    DOWNLOAD_URL: 'DownloadURL',\n    /**\n     * Browser specific transfer type for files\n     */\n    FILES: 'Files',\n    /**\n     * Typically transfer type for copy/paste transfers.\n     */\n    TEXT: Mimes.text,\n    /**\n     * Application specific terminal transfer type.\n     */\n    TERMINALS: 'Terminals'\n};\nexport class DragAndDropData {\n    constructor(data) {\n        this.data = data;\n    }\n    update() {\n        // noop\n    }\n    getData() {\n        return this.data;\n    }\n}\nexport const StaticDND = {\n    CurrentDragAndDropData: undefined\n};\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFirefox } from '../../browser.js';\nimport { DataTransfers } from '../../dnd.js';\nimport { $, addDisposableListener, append, EventHelper, EventType } from '../../dom.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { Action, ActionRunner, Separator } from '../../../common/actions.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport * as types from '../../../common/types.js';\nimport './actionbar.css';\nimport * as nls from '../../../../nls.js';\nexport class BaseActionViewItem extends Disposable {\n    constructor(context, action, options = {}) {\n        super();\n        this.options = options;\n        this._context = context || this;\n        this._action = action;\n        if (action instanceof Action) {\n            this._register(action.onDidChange(event => {\n                if (!this.element) {\n                    // we have not been rendered yet, so there\n                    // is no point in updating the UI\n                    return;\n                }\n                this.handleActionChangeEvent(event);\n            }));\n        }\n    }\n    handleActionChangeEvent(event) {\n        if (event.enabled !== undefined) {\n            this.updateEnabled();\n        }\n        if (event.checked !== undefined) {\n            this.updateChecked();\n        }\n        if (event.class !== undefined) {\n            this.updateClass();\n        }\n        if (event.label !== undefined) {\n            this.updateLabel();\n            this.updateTooltip();\n        }\n        if (event.tooltip !== undefined) {\n            this.updateTooltip();\n        }\n    }\n    get actionRunner() {\n        if (!this._actionRunner) {\n            this._actionRunner = this._register(new ActionRunner());\n        }\n        return this._actionRunner;\n    }\n    set actionRunner(actionRunner) {\n        this._actionRunner = actionRunner;\n    }\n    getAction() {\n        return this._action;\n    }\n    isEnabled() {\n        return this._action.enabled;\n    }\n    setActionContext(newContext) {\n        this._context = newContext;\n    }\n    render(container) {\n        const element = this.element = container;\n        this._register(Gesture.addTarget(container));\n        const enableDragging = this.options && this.options.draggable;\n        if (enableDragging) {\n            container.draggable = true;\n            if (isFirefox) {\n                // Firefox: requires to set a text data transfer to get going\n                this._register(addDisposableListener(container, EventType.DRAG_START, e => { var _a; return (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.setData(DataTransfers.TEXT, this._action.label); }));\n            }\n        }\n        this._register(addDisposableListener(element, TouchEventType.Tap, e => this.onClick(e, true))); // Preserve focus on tap #125470\n        this._register(addDisposableListener(element, EventType.MOUSE_DOWN, e => {\n            if (!enableDragging) {\n                EventHelper.stop(e, true); // do not run when dragging is on because that would disable it\n            }\n            if (this._action.enabled && e.button === 0) {\n                element.classList.add('active');\n            }\n        }));\n        if (platform.isMacintosh) {\n            // macOS: allow to trigger the button when holding Ctrl+key and pressing the\n            // main mouse button. This is for scenarios where e.g. some interaction forces\n            // the Ctrl+key to be pressed and hold but the user still wants to interact\n            // with the actions (for example quick access in quick navigation mode).\n            this._register(addDisposableListener(element, EventType.CONTEXT_MENU, e => {\n                if (e.button === 0 && e.ctrlKey === true) {\n                    this.onClick(e);\n                }\n            }));\n        }\n        this._register(addDisposableListener(element, EventType.CLICK, e => {\n            EventHelper.stop(e, true);\n            // menus do not use the click event\n            if (!(this.options && this.options.isMenu)) {\n                this.onClick(e);\n            }\n        }));\n        this._register(addDisposableListener(element, EventType.DBLCLICK, e => {\n            EventHelper.stop(e, true);\n        }));\n        [EventType.MOUSE_UP, EventType.MOUSE_OUT].forEach(event => {\n            this._register(addDisposableListener(element, event, e => {\n                EventHelper.stop(e);\n                element.classList.remove('active');\n            }));\n        });\n    }\n    onClick(event, preserveFocus = false) {\n        var _a;\n        EventHelper.stop(event, true);\n        const context = types.isUndefinedOrNull(this._context) ? ((_a = this.options) === null || _a === void 0 ? void 0 : _a.useEventAsContext) ? event : { preserveFocus } : this._context;\n        this.actionRunner.run(this._action, context);\n    }\n    // Only set the tabIndex on the element once it is about to get focused\n    // That way this element wont be a tab stop when it is not needed #106441\n    focus() {\n        if (this.element) {\n            this.element.tabIndex = 0;\n            this.element.focus();\n            this.element.classList.add('focused');\n        }\n    }\n    blur() {\n        if (this.element) {\n            this.element.blur();\n            this.element.tabIndex = -1;\n            this.element.classList.remove('focused');\n        }\n    }\n    setFocusable(focusable) {\n        if (this.element) {\n            this.element.tabIndex = focusable ? 0 : -1;\n        }\n    }\n    get trapsArrowNavigation() {\n        return false;\n    }\n    updateEnabled() {\n        // implement in subclass\n    }\n    updateLabel() {\n        // implement in subclass\n    }\n    updateTooltip() {\n        // implement in subclass\n    }\n    updateClass() {\n        // implement in subclass\n    }\n    updateChecked() {\n        // implement in subclass\n    }\n    dispose() {\n        if (this.element) {\n            this.element.remove();\n            this.element = undefined;\n        }\n        super.dispose();\n    }\n}\nexport class ActionViewItem extends BaseActionViewItem {\n    constructor(context, action, options = {}) {\n        super(context, action, options);\n        this.options = options;\n        this.options.icon = options.icon !== undefined ? options.icon : false;\n        this.options.label = options.label !== undefined ? options.label : true;\n        this.cssClass = '';\n    }\n    render(container) {\n        super.render(container);\n        if (this.element) {\n            this.label = append(this.element, $('a.action-label'));\n        }\n        if (this.label) {\n            if (this._action.id === Separator.ID) {\n                this.label.setAttribute('role', 'presentation'); // A separator is a presentation item\n            }\n            else {\n                if (this.options.isMenu) {\n                    this.label.setAttribute('role', 'menuitem');\n                }\n                else {\n                    this.label.setAttribute('role', 'button');\n                }\n            }\n        }\n        if (this.options.label && this.options.keybinding && this.element) {\n            append(this.element, $('span.keybinding')).textContent = this.options.keybinding;\n        }\n        this.updateClass();\n        this.updateLabel();\n        this.updateTooltip();\n        this.updateEnabled();\n        this.updateChecked();\n    }\n    // Only set the tabIndex on the element once it is about to get focused\n    // That way this element wont be a tab stop when it is not needed #106441\n    focus() {\n        if (this.label) {\n            this.label.tabIndex = 0;\n            this.label.focus();\n        }\n    }\n    blur() {\n        if (this.label) {\n            this.label.tabIndex = -1;\n        }\n    }\n    setFocusable(focusable) {\n        if (this.label) {\n            this.label.tabIndex = focusable ? 0 : -1;\n        }\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this.getAction().label;\n        }\n    }\n    updateTooltip() {\n        let title = null;\n        if (this.getAction().tooltip) {\n            title = this.getAction().tooltip;\n        }\n        else if (!this.options.label && this.getAction().label && this.options.icon) {\n            title = this.getAction().label;\n            if (this.options.keybinding) {\n                title = nls.localize({ key: 'titleLabel', comment: ['action title', 'action keybinding'] }, \"{0} ({1})\", title, this.options.keybinding);\n            }\n        }\n        if (title && this.label) {\n            this.label.title = title;\n        }\n    }\n    updateClass() {\n        if (this.cssClass && this.label) {\n            this.label.classList.remove(...this.cssClass.split(' '));\n        }\n        if (this.options.icon) {\n            this.cssClass = this.getAction().class;\n            if (this.label) {\n                this.label.classList.add('codicon');\n                if (this.cssClass) {\n                    this.label.classList.add(...this.cssClass.split(' '));\n                }\n            }\n            this.updateEnabled();\n        }\n        else {\n            if (this.label) {\n                this.label.classList.remove('codicon');\n            }\n        }\n    }\n    updateEnabled() {\n        if (this.getAction().enabled) {\n            if (this.label) {\n                this.label.removeAttribute('aria-disabled');\n                this.label.classList.remove('disabled');\n            }\n            if (this.element) {\n                this.element.classList.remove('disabled');\n            }\n        }\n        else {\n            if (this.label) {\n                this.label.setAttribute('aria-disabled', 'true');\n                this.label.classList.add('disabled');\n            }\n            if (this.element) {\n                this.element.classList.add('disabled');\n            }\n        }\n    }\n    updateChecked() {\n        if (this.label) {\n            if (this.getAction().checked) {\n                this.label.classList.add('checked');\n            }\n            else {\n                this.label.classList.remove('checked');\n            }\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as DOM from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem } from './actionViewItems.js';\nimport { ActionRunner } from '../../../common/actions.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable, dispose } from '../../../common/lifecycle.js';\nimport * as types from '../../../common/types.js';\nimport './actionbar.css';\nexport class ActionBar extends Disposable {\n    constructor(container, options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        super();\n        // Trigger Key Tracking\n        this.triggerKeyDown = false;\n        this.focusable = true;\n        this._onDidBlur = this._register(new Emitter());\n        this.onDidBlur = this._onDidBlur.event;\n        this._onDidCancel = this._register(new Emitter({ onFirstListenerAdd: () => this.cancelHasListener = true }));\n        this.onDidCancel = this._onDidCancel.event;\n        this.cancelHasListener = false;\n        this._onDidRun = this._register(new Emitter());\n        this.onDidRun = this._onDidRun.event;\n        this._onBeforeRun = this._register(new Emitter());\n        this.onBeforeRun = this._onBeforeRun.event;\n        this.options = options;\n        this._context = (_a = options.context) !== null && _a !== void 0 ? _a : null;\n        this._orientation = (_b = this.options.orientation) !== null && _b !== void 0 ? _b : 0 /* HORIZONTAL */;\n        this._triggerKeys = {\n            keyDown: (_d = (_c = this.options.triggerKeys) === null || _c === void 0 ? void 0 : _c.keyDown) !== null && _d !== void 0 ? _d : false,\n            keys: (_f = (_e = this.options.triggerKeys) === null || _e === void 0 ? void 0 : _e.keys) !== null && _f !== void 0 ? _f : [3 /* Enter */, 10 /* Space */]\n        };\n        if (this.options.actionRunner) {\n            this._actionRunner = this.options.actionRunner;\n        }\n        else {\n            this._actionRunner = new ActionRunner();\n            this._register(this._actionRunner);\n        }\n        this._register(this._actionRunner.onDidRun(e => this._onDidRun.fire(e)));\n        this._register(this._actionRunner.onBeforeRun(e => this._onBeforeRun.fire(e)));\n        this._actionIds = [];\n        this.viewItems = [];\n        this.focusedItem = undefined;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'monaco-action-bar';\n        if (options.animated !== false) {\n            this.domNode.classList.add('animated');\n        }\n        let previousKeys;\n        let nextKeys;\n        switch (this._orientation) {\n            case 0 /* HORIZONTAL */:\n                previousKeys = [15 /* LeftArrow */];\n                nextKeys = [17 /* RightArrow */];\n                break;\n            case 1 /* VERTICAL */:\n                previousKeys = [16 /* UpArrow */];\n                nextKeys = [18 /* DownArrow */];\n                this.domNode.className += ' vertical';\n                break;\n        }\n        this._register(DOM.addDisposableListener(this.domNode, DOM.EventType.KEY_DOWN, e => {\n            const event = new StandardKeyboardEvent(e);\n            let eventHandled = true;\n            const focusedItem = typeof this.focusedItem === 'number' ? this.viewItems[this.focusedItem] : undefined;\n            if (previousKeys && (event.equals(previousKeys[0]) || event.equals(previousKeys[1]))) {\n                eventHandled = this.focusPrevious();\n            }\n            else if (nextKeys && (event.equals(nextKeys[0]) || event.equals(nextKeys[1]))) {\n                eventHandled = this.focusNext();\n            }\n            else if (event.equals(9 /* Escape */) && this.cancelHasListener) {\n                this._onDidCancel.fire();\n            }\n            else if (event.equals(14 /* Home */)) {\n                eventHandled = this.focusFirst();\n            }\n            else if (event.equals(13 /* End */)) {\n                eventHandled = this.focusLast();\n            }\n            else if (event.equals(2 /* Tab */) && focusedItem instanceof BaseActionViewItem && focusedItem.trapsArrowNavigation) {\n                eventHandled = this.focusNext();\n            }\n            else if (this.isTriggerKeyEvent(event)) {\n                // Staying out of the else branch even if not triggered\n                if (this._triggerKeys.keyDown) {\n                    this.doTrigger(event);\n                }\n                else {\n                    this.triggerKeyDown = true;\n                }\n            }\n            else {\n                eventHandled = false;\n            }\n            if (eventHandled) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        }));\n        this._register(DOM.addDisposableListener(this.domNode, DOM.EventType.KEY_UP, e => {\n            const event = new StandardKeyboardEvent(e);\n            // Run action on Enter/Space\n            if (this.isTriggerKeyEvent(event)) {\n                if (!this._triggerKeys.keyDown && this.triggerKeyDown) {\n                    this.triggerKeyDown = false;\n                    this.doTrigger(event);\n                }\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            // Recompute focused item\n            else if (event.equals(2 /* Tab */) || event.equals(1024 /* Shift */ | 2 /* Tab */)) {\n                this.updateFocusedItem();\n            }\n        }));\n        this.focusTracker = this._register(DOM.trackFocus(this.domNode));\n        this._register(this.focusTracker.onDidBlur(() => {\n            if (DOM.getActiveElement() === this.domNode || !DOM.isAncestor(DOM.getActiveElement(), this.domNode)) {\n                this._onDidBlur.fire();\n                this.focusedItem = undefined;\n                this.previouslyFocusedItem = undefined;\n                this.triggerKeyDown = false;\n            }\n        }));\n        this._register(this.focusTracker.onDidFocus(() => this.updateFocusedItem()));\n        this.actionsList = document.createElement('ul');\n        this.actionsList.className = 'actions-container';\n        this.actionsList.setAttribute('role', 'toolbar');\n        if (this.options.ariaLabel) {\n            this.actionsList.setAttribute('aria-label', this.options.ariaLabel);\n        }\n        this.domNode.appendChild(this.actionsList);\n        container.appendChild(this.domNode);\n    }\n    refreshRole() {\n        if (this.length() >= 2) {\n            this.actionsList.setAttribute('role', 'toolbar');\n        }\n        else {\n            this.actionsList.setAttribute('role', 'presentation');\n        }\n    }\n    // Some action bars should not be focusable at times\n    // When an action bar is not focusable make sure to make all the elements inside it not focusable\n    // When an action bar is focusable again, make sure the first item can be focused\n    setFocusable(focusable) {\n        this.focusable = focusable;\n        if (this.focusable) {\n            const firstEnabled = this.viewItems.find(vi => vi instanceof BaseActionViewItem && vi.isEnabled());\n            if (firstEnabled instanceof BaseActionViewItem) {\n                firstEnabled.setFocusable(true);\n            }\n        }\n        else {\n            this.viewItems.forEach(vi => {\n                if (vi instanceof BaseActionViewItem) {\n                    vi.setFocusable(false);\n                }\n            });\n        }\n    }\n    isTriggerKeyEvent(event) {\n        let ret = false;\n        this._triggerKeys.keys.forEach(keyCode => {\n            ret = ret || event.equals(keyCode);\n        });\n        return ret;\n    }\n    updateFocusedItem() {\n        for (let i = 0; i < this.actionsList.children.length; i++) {\n            const elem = this.actionsList.children[i];\n            if (DOM.isAncestor(DOM.getActiveElement(), elem)) {\n                this.focusedItem = i;\n                break;\n            }\n        }\n    }\n    get context() {\n        return this._context;\n    }\n    set context(context) {\n        this._context = context;\n        this.viewItems.forEach(i => i.setActionContext(context));\n    }\n    get actionRunner() {\n        return this._actionRunner;\n    }\n    set actionRunner(actionRunner) {\n        if (actionRunner) {\n            this._actionRunner = actionRunner;\n            this.viewItems.forEach(item => item.actionRunner = actionRunner);\n        }\n    }\n    getContainer() {\n        return this.domNode;\n    }\n    push(arg, options = {}) {\n        const actions = Array.isArray(arg) ? arg : [arg];\n        let index = types.isNumber(options.index) ? options.index : null;\n        actions.forEach((action) => {\n            const actionViewItemElement = document.createElement('li');\n            actionViewItemElement.className = 'action-item';\n            actionViewItemElement.setAttribute('role', 'presentation');\n            // Prevent native context menu on actions\n            if (!this.options.allowContextMenu) {\n                this._register(DOM.addDisposableListener(actionViewItemElement, DOM.EventType.CONTEXT_MENU, (e) => {\n                    DOM.EventHelper.stop(e, true);\n                }));\n            }\n            let item;\n            if (this.options.actionViewItemProvider) {\n                item = this.options.actionViewItemProvider(action);\n            }\n            if (!item) {\n                item = new ActionViewItem(this.context, action, options);\n            }\n            item.actionRunner = this._actionRunner;\n            item.setActionContext(this.context);\n            item.render(actionViewItemElement);\n            if (this.focusable && item instanceof BaseActionViewItem && this.viewItems.length === 0) {\n                // We need to allow for the first enabled item to be focused on using tab navigation #106441\n                item.setFocusable(true);\n            }\n            if (index === null || index < 0 || index >= this.actionsList.children.length) {\n                this.actionsList.appendChild(actionViewItemElement);\n                this.viewItems.push(item);\n                this._actionIds.push(action.id);\n            }\n            else {\n                this.actionsList.insertBefore(actionViewItemElement, this.actionsList.children[index]);\n                this.viewItems.splice(index, 0, item);\n                this._actionIds.splice(index, 0, action.id);\n                index++;\n            }\n        });\n        if (typeof this.focusedItem === 'number') {\n            // After a clear actions might be re-added to simply toggle some actions. We should preserve focus #97128\n            this.focus(this.focusedItem);\n        }\n        this.refreshRole();\n    }\n    clear() {\n        dispose(this.viewItems);\n        this.viewItems = [];\n        this._actionIds = [];\n        DOM.clearNode(this.actionsList);\n        this.refreshRole();\n    }\n    length() {\n        return this.viewItems.length;\n    }\n    focus(arg) {\n        let selectFirst = false;\n        let index = undefined;\n        if (arg === undefined) {\n            selectFirst = true;\n        }\n        else if (typeof arg === 'number') {\n            index = arg;\n        }\n        else if (typeof arg === 'boolean') {\n            selectFirst = arg;\n        }\n        if (selectFirst && typeof this.focusedItem === 'undefined') {\n            const firstEnabled = this.viewItems.findIndex(item => item.isEnabled());\n            // Focus the first enabled item\n            this.focusedItem = firstEnabled === -1 ? undefined : firstEnabled;\n            this.updateFocus(undefined, undefined, true);\n        }\n        else {\n            if (index !== undefined) {\n                this.focusedItem = index;\n            }\n            this.updateFocus(undefined, undefined, true);\n        }\n    }\n    focusFirst() {\n        this.focusedItem = this.length() - 1;\n        return this.focusNext(true);\n    }\n    focusLast() {\n        this.focusedItem = 0;\n        return this.focusPrevious(true);\n    }\n    focusNext(forceLoop) {\n        if (typeof this.focusedItem === 'undefined') {\n            this.focusedItem = this.viewItems.length - 1;\n        }\n        else if (this.viewItems.length <= 1) {\n            return false;\n        }\n        const startIndex = this.focusedItem;\n        let item;\n        do {\n            if (!forceLoop && this.options.preventLoopNavigation && this.focusedItem + 1 >= this.viewItems.length) {\n                this.focusedItem = startIndex;\n                return false;\n            }\n            this.focusedItem = (this.focusedItem + 1) % this.viewItems.length;\n            item = this.viewItems[this.focusedItem];\n        } while (this.focusedItem !== startIndex && this.options.focusOnlyEnabledItems && !item.isEnabled());\n        this.updateFocus();\n        return true;\n    }\n    focusPrevious(forceLoop) {\n        if (typeof this.focusedItem === 'undefined') {\n            this.focusedItem = 0;\n        }\n        else if (this.viewItems.length <= 1) {\n            return false;\n        }\n        const startIndex = this.focusedItem;\n        let item;\n        do {\n            this.focusedItem = this.focusedItem - 1;\n            if (this.focusedItem < 0) {\n                if (!forceLoop && this.options.preventLoopNavigation) {\n                    this.focusedItem = startIndex;\n                    return false;\n                }\n                this.focusedItem = this.viewItems.length - 1;\n            }\n            item = this.viewItems[this.focusedItem];\n        } while (this.focusedItem !== startIndex && this.options.focusOnlyEnabledItems && !item.isEnabled());\n        this.updateFocus(true);\n        return true;\n    }\n    updateFocus(fromRight, preventScroll, forceFocus = false) {\n        var _a;\n        if (typeof this.focusedItem === 'undefined') {\n            this.actionsList.focus({ preventScroll });\n        }\n        if (this.previouslyFocusedItem !== undefined && this.previouslyFocusedItem !== this.focusedItem) {\n            (_a = this.viewItems[this.previouslyFocusedItem]) === null || _a === void 0 ? void 0 : _a.blur();\n        }\n        const actionViewItem = this.focusedItem !== undefined && this.viewItems[this.focusedItem];\n        if (actionViewItem) {\n            let focusItem = true;\n            if (!types.isFunction(actionViewItem.focus)) {\n                focusItem = false;\n            }\n            if (this.options.focusOnlyEnabledItems && types.isFunction(actionViewItem.isEnabled) && !actionViewItem.isEnabled()) {\n                focusItem = false;\n            }\n            if (!focusItem) {\n                this.actionsList.focus({ preventScroll });\n                this.previouslyFocusedItem = undefined;\n            }\n            else if (forceFocus || this.previouslyFocusedItem !== this.focusedItem) {\n                actionViewItem.focus(fromRight);\n                this.previouslyFocusedItem = this.focusedItem;\n            }\n        }\n    }\n    doTrigger(event) {\n        if (typeof this.focusedItem === 'undefined') {\n            return; //nothing to focus\n        }\n        // trigger action\n        const actionViewItem = this.viewItems[this.focusedItem];\n        if (actionViewItem instanceof BaseActionViewItem) {\n            const context = (actionViewItem._context === null || actionViewItem._context === undefined) ? event : actionViewItem._context;\n            this.run(actionViewItem._action, context);\n        }\n    }\n    run(action, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._actionRunner.run(action, context);\n        });\n    }\n    dispose() {\n        dispose(this.viewItems);\n        this.viewItems = [];\n        this._actionIds = [];\n        this.getContainer().remove();\n        super.dispose();\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from './dom.js';\nimport { IframeUtils } from './iframe.js';\nimport { StandardMouseEvent } from './mouseEvent.js';\nimport { DisposableStore } from '../common/lifecycle.js';\nimport { isIOS } from '../common/platform.js';\nexport function standardMouseMoveMerger(lastEvent, currentEvent) {\n    let ev = new StandardMouseEvent(currentEvent);\n    ev.preventDefault();\n    return {\n        leftButton: ev.leftButton,\n        buttons: ev.buttons,\n        posx: ev.posx,\n        posy: ev.posy\n    };\n}\nexport class GlobalMouseMoveMonitor {\n    constructor() {\n        this._hooks = new DisposableStore();\n        this._mouseMoveEventMerger = null;\n        this._mouseMoveCallback = null;\n        this._onStopCallback = null;\n    }\n    dispose() {\n        this.stopMonitoring(false);\n        this._hooks.dispose();\n    }\n    stopMonitoring(invokeStopCallback, browserEvent) {\n        if (!this.isMonitoring()) {\n            // Not monitoring\n            return;\n        }\n        // Unhook\n        this._hooks.clear();\n        this._mouseMoveEventMerger = null;\n        this._mouseMoveCallback = null;\n        const onStopCallback = this._onStopCallback;\n        this._onStopCallback = null;\n        if (invokeStopCallback && onStopCallback) {\n            onStopCallback(browserEvent);\n        }\n    }\n    isMonitoring() {\n        return !!this._mouseMoveEventMerger;\n    }\n    startMonitoring(initialElement, initialButtons, mouseMoveEventMerger, mouseMoveCallback, onStopCallback) {\n        if (this.isMonitoring()) {\n            // I am already hooked\n            return;\n        }\n        this._mouseMoveEventMerger = mouseMoveEventMerger;\n        this._mouseMoveCallback = mouseMoveCallback;\n        this._onStopCallback = onStopCallback;\n        const windowChain = IframeUtils.getSameOriginWindowChain();\n        const mouseMove = isIOS ? 'pointermove' : 'mousemove'; // Safari sends wrong event, workaround for #122653\n        const mouseUp = 'mouseup';\n        const listenTo = windowChain.map(element => element.window.document);\n        const shadowRoot = dom.getShadowRoot(initialElement);\n        if (shadowRoot) {\n            listenTo.unshift(shadowRoot);\n        }\n        for (const element of listenTo) {\n            this._hooks.add(dom.addDisposableThrottledListener(element, mouseMove, (data) => {\n                if (data.buttons !== initialButtons) {\n                    // Buttons state has changed in the meantime\n                    this.stopMonitoring(true);\n                    return;\n                }\n                this._mouseMoveCallback(data);\n            }, (lastEvent, currentEvent) => this._mouseMoveEventMerger(lastEvent, currentEvent)));\n            this._hooks.add(dom.addDisposableListener(element, mouseUp, (e) => this.stopMonitoring(true)));\n        }\n        if (IframeUtils.hasDifferentOriginAncestor()) {\n            let lastSameOriginAncestor = windowChain[windowChain.length - 1];\n            // We might miss a mouse up if it happens outside the iframe\n            // This one is for Chrome\n            this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document, 'mouseout', (browserEvent) => {\n                let e = new StandardMouseEvent(browserEvent);\n                if (e.target.tagName.toLowerCase() === 'html') {\n                    this.stopMonitoring(true);\n                }\n            }));\n            // This one is for FF\n            this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document, 'mouseover', (browserEvent) => {\n                let e = new StandardMouseEvent(browserEvent);\n                if (e.target.tagName.toLowerCase() === 'html') {\n                    this.stopMonitoring(true);\n                }\n            }));\n            // This one is for IE\n            this._hooks.add(dom.addDisposableListener(lastSameOriginAncestor.window.document.body, 'mouseleave', (browserEvent) => {\n                this.stopMonitoring(true);\n            }));\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../globalMouseMoveMonitor.js';\nimport { Widget } from '../widget.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../common/async.js';\n/**\n * The arrow image size.\n */\nexport const ARROW_IMG_SIZE = 11;\nexport class ScrollbarArrow extends Widget {\n    constructor(opts) {\n        super();\n        this._onActivate = opts.onActivate;\n        this.bgDomNode = document.createElement('div');\n        this.bgDomNode.className = 'arrow-background';\n        this.bgDomNode.style.position = 'absolute';\n        this.bgDomNode.style.width = opts.bgWidth + 'px';\n        this.bgDomNode.style.height = opts.bgHeight + 'px';\n        if (typeof opts.top !== 'undefined') {\n            this.bgDomNode.style.top = '0px';\n        }\n        if (typeof opts.left !== 'undefined') {\n            this.bgDomNode.style.left = '0px';\n        }\n        if (typeof opts.bottom !== 'undefined') {\n            this.bgDomNode.style.bottom = '0px';\n        }\n        if (typeof opts.right !== 'undefined') {\n            this.bgDomNode.style.right = '0px';\n        }\n        this.domNode = document.createElement('div');\n        this.domNode.className = opts.className;\n        this.domNode.classList.add(...opts.icon.classNamesArray);\n        this.domNode.style.position = 'absolute';\n        this.domNode.style.width = ARROW_IMG_SIZE + 'px';\n        this.domNode.style.height = ARROW_IMG_SIZE + 'px';\n        if (typeof opts.top !== 'undefined') {\n            this.domNode.style.top = opts.top + 'px';\n        }\n        if (typeof opts.left !== 'undefined') {\n            this.domNode.style.left = opts.left + 'px';\n        }\n        if (typeof opts.bottom !== 'undefined') {\n            this.domNode.style.bottom = opts.bottom + 'px';\n        }\n        if (typeof opts.right !== 'undefined') {\n            this.domNode.style.right = opts.right + 'px';\n        }\n        this._mouseMoveMonitor = this._register(new GlobalMouseMoveMonitor());\n        this.onmousedown(this.bgDomNode, (e) => this._arrowMouseDown(e));\n        this.onmousedown(this.domNode, (e) => this._arrowMouseDown(e));\n        this._mousedownRepeatTimer = this._register(new IntervalTimer());\n        this._mousedownScheduleRepeatTimer = this._register(new TimeoutTimer());\n    }\n    _arrowMouseDown(e) {\n        const scheduleRepeater = () => {\n            this._mousedownRepeatTimer.cancelAndSet(() => this._onActivate(), 1000 / 24);\n        };\n        this._onActivate();\n        this._mousedownRepeatTimer.cancel();\n        this._mousedownScheduleRepeatTimer.cancelAndSet(scheduleRepeater, 200);\n        this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, (mouseMoveData) => {\n            /* Intentional empty */\n        }, () => {\n            this._mousedownRepeatTimer.cancel();\n            this._mousedownScheduleRepeatTimer.cancel();\n        });\n        e.preventDefault();\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nexport class ScrollbarVisibilityController extends Disposable {\n    constructor(visibility, visibleClassName, invisibleClassName) {\n        super();\n        this._visibility = visibility;\n        this._visibleClassName = visibleClassName;\n        this._invisibleClassName = invisibleClassName;\n        this._domNode = null;\n        this._isVisible = false;\n        this._isNeeded = false;\n        this._rawShouldBeVisible = false;\n        this._shouldBeVisible = false;\n        this._revealTimer = this._register(new TimeoutTimer());\n    }\n    setVisibility(visibility) {\n        if (this._visibility !== visibility) {\n            this._visibility = visibility;\n            this._updateShouldBeVisible();\n        }\n    }\n    // ----------------- Hide / Reveal\n    setShouldBeVisible(rawShouldBeVisible) {\n        this._rawShouldBeVisible = rawShouldBeVisible;\n        this._updateShouldBeVisible();\n    }\n    _applyVisibilitySetting() {\n        if (this._visibility === 2 /* Hidden */) {\n            return false;\n        }\n        if (this._visibility === 3 /* Visible */) {\n            return true;\n        }\n        return this._rawShouldBeVisible;\n    }\n    _updateShouldBeVisible() {\n        const shouldBeVisible = this._applyVisibilitySetting();\n        if (this._shouldBeVisible !== shouldBeVisible) {\n            this._shouldBeVisible = shouldBeVisible;\n            this.ensureVisibility();\n        }\n    }\n    setIsNeeded(isNeeded) {\n        if (this._isNeeded !== isNeeded) {\n            this._isNeeded = isNeeded;\n            this.ensureVisibility();\n        }\n    }\n    setDomNode(domNode) {\n        this._domNode = domNode;\n        this._domNode.setClassName(this._invisibleClassName);\n        // Now that the flags & the dom node are in a consistent state, ensure the Hidden/Visible configuration\n        this.setShouldBeVisible(false);\n    }\n    ensureVisibility() {\n        if (!this._isNeeded) {\n            // Nothing to be rendered\n            this._hide(false);\n            return;\n        }\n        if (this._shouldBeVisible) {\n            this._reveal();\n        }\n        else {\n            this._hide(true);\n        }\n    }\n    _reveal() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        // The CSS animation doesn't play otherwise\n        this._revealTimer.setIfNotSet(() => {\n            if (this._domNode) {\n                this._domNode.setClassName(this._visibleClassName);\n            }\n        }, 0);\n    }\n    _hide(withFadeAway) {\n        this._revealTimer.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        if (this._domNode) {\n            this._domNode.setClassName(this._invisibleClassName + (withFadeAway ? ' fade' : ''));\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../globalMouseMoveMonitor.js';\nimport { ScrollbarArrow } from './scrollbarArrow.js';\nimport { ScrollbarVisibilityController } from './scrollbarVisibilityController.js';\nimport { Widget } from '../widget.js';\nimport * as platform from '../../../common/platform.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst MOUSE_DRAG_RESET_DISTANCE = 140;\nexport class AbstractScrollbar extends Widget {\n    constructor(opts) {\n        super();\n        this._lazyRender = opts.lazyRender;\n        this._host = opts.host;\n        this._scrollable = opts.scrollable;\n        this._scrollByPage = opts.scrollByPage;\n        this._scrollbarState = opts.scrollbarState;\n        this._visibilityController = this._register(new ScrollbarVisibilityController(opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n        this._mouseMoveMonitor = this._register(new GlobalMouseMoveMonitor());\n        this._shouldRender = true;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this._visibilityController.setDomNode(this.domNode);\n        this.domNode.setPosition('absolute');\n        this.onmousedown(this.domNode.domNode, (e) => this._domNodeMouseDown(e));\n    }\n    // ----------------- creation\n    /**\n     * Creates the dom node for an arrow & adds it to the container\n     */\n    _createArrow(opts) {\n        const arrow = this._register(new ScrollbarArrow(opts));\n        this.domNode.domNode.appendChild(arrow.bgDomNode);\n        this.domNode.domNode.appendChild(arrow.domNode);\n    }\n    /**\n     * Creates the slider dom node, adds it to the container & hooks up the events\n     */\n    _createSlider(top, left, width, height) {\n        this.slider = createFastDomNode(document.createElement('div'));\n        this.slider.setClassName('slider');\n        this.slider.setPosition('absolute');\n        this.slider.setTop(top);\n        this.slider.setLeft(left);\n        if (typeof width === 'number') {\n            this.slider.setWidth(width);\n        }\n        if (typeof height === 'number') {\n            this.slider.setHeight(height);\n        }\n        this.slider.setLayerHinting(true);\n        this.slider.setContain('strict');\n        this.domNode.domNode.appendChild(this.slider.domNode);\n        this.onmousedown(this.slider.domNode, (e) => {\n            if (e.leftButton) {\n                e.preventDefault();\n                this._sliderMouseDown(e, () => { });\n            }\n        });\n        this.onclick(this.slider.domNode, e => {\n            if (e.leftButton) {\n                e.stopPropagation();\n            }\n        });\n    }\n    // ----------------- Update state\n    _onElementSize(visibleSize) {\n        if (this._scrollbarState.setVisibleSize(visibleSize)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    _onElementScrollSize(elementScrollSize) {\n        if (this._scrollbarState.setScrollSize(elementScrollSize)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    _onElementScrollPosition(elementScrollPosition) {\n        if (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    // ----------------- rendering\n    beginReveal() {\n        this._visibilityController.setShouldBeVisible(true);\n    }\n    beginHide() {\n        this._visibilityController.setShouldBeVisible(false);\n    }\n    render() {\n        if (!this._shouldRender) {\n            return;\n        }\n        this._shouldRender = false;\n        this._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());\n        this._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());\n    }\n    // ----------------- DOM events\n    _domNodeMouseDown(e) {\n        if (e.target !== this.domNode.domNode) {\n            return;\n        }\n        this._onMouseDown(e);\n    }\n    delegateMouseDown(e) {\n        const domTop = this.domNode.domNode.getClientRects()[0].top;\n        const sliderStart = domTop + this._scrollbarState.getSliderPosition();\n        const sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();\n        const mousePos = this._sliderMousePosition(e);\n        if (sliderStart <= mousePos && mousePos <= sliderStop) {\n            // Act as if it was a mouse down on the slider\n            if (e.leftButton) {\n                e.preventDefault();\n                this._sliderMouseDown(e, () => { });\n            }\n        }\n        else {\n            // Act as if it was a mouse down on the scrollbar\n            this._onMouseDown(e);\n        }\n    }\n    _onMouseDown(e) {\n        let offsetX;\n        let offsetY;\n        if (e.target === this.domNode.domNode && typeof e.browserEvent.offsetX === 'number' && typeof e.browserEvent.offsetY === 'number') {\n            offsetX = e.browserEvent.offsetX;\n            offsetY = e.browserEvent.offsetY;\n        }\n        else {\n            const domNodePosition = dom.getDomNodePagePosition(this.domNode.domNode);\n            offsetX = e.posx - domNodePosition.left;\n            offsetY = e.posy - domNodePosition.top;\n        }\n        const offset = this._mouseDownRelativePosition(offsetX, offsetY);\n        this._setDesiredScrollPositionNow(this._scrollByPage\n            ? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(offset)\n            : this._scrollbarState.getDesiredScrollPositionFromOffset(offset));\n        if (e.leftButton) {\n            e.preventDefault();\n            this._sliderMouseDown(e, () => { });\n        }\n    }\n    _sliderMouseDown(e, onDragFinished) {\n        const initialMousePosition = this._sliderMousePosition(e);\n        const initialMouseOrthogonalPosition = this._sliderOrthogonalMousePosition(e);\n        const initialScrollbarState = this._scrollbarState.clone();\n        this.slider.toggleClassName('active', true);\n        this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, (mouseMoveData) => {\n            const mouseOrthogonalPosition = this._sliderOrthogonalMousePosition(mouseMoveData);\n            const mouseOrthogonalDelta = Math.abs(mouseOrthogonalPosition - initialMouseOrthogonalPosition);\n            if (platform.isWindows && mouseOrthogonalDelta > MOUSE_DRAG_RESET_DISTANCE) {\n                // The mouse has wondered away from the scrollbar => reset dragging\n                this._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());\n                return;\n            }\n            const mousePosition = this._sliderMousePosition(mouseMoveData);\n            const mouseDelta = mousePosition - initialMousePosition;\n            this._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(mouseDelta));\n        }, () => {\n            this.slider.toggleClassName('active', false);\n            this._host.onDragEnd();\n            onDragFinished();\n        });\n        this._host.onDragStart();\n    }\n    _setDesiredScrollPositionNow(_desiredScrollPosition) {\n        const desiredScrollPosition = {};\n        this.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\n        this._scrollable.setScrollPositionNow(desiredScrollPosition);\n    }\n    updateScrollbarSize(scrollbarSize) {\n        this._updateScrollbarSize(scrollbarSize);\n        this._scrollbarState.setScrollbarSize(scrollbarSize);\n        this._shouldRender = true;\n        if (!this._lazyRender) {\n            this.render();\n        }\n    }\n    isNeeded() {\n        return this._scrollbarState.isNeeded();\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The minimal size of the slider (such that it can still be clickable) -- it is artificially enlarged.\n */\nconst MINIMUM_SLIDER_SIZE = 20;\nexport class ScrollbarState {\n    constructor(arrowSize, scrollbarSize, oppositeScrollbarSize, visibleSize, scrollSize, scrollPosition) {\n        this._scrollbarSize = Math.round(scrollbarSize);\n        this._oppositeScrollbarSize = Math.round(oppositeScrollbarSize);\n        this._arrowSize = Math.round(arrowSize);\n        this._visibleSize = visibleSize;\n        this._scrollSize = scrollSize;\n        this._scrollPosition = scrollPosition;\n        this._computedAvailableSize = 0;\n        this._computedIsNeeded = false;\n        this._computedSliderSize = 0;\n        this._computedSliderRatio = 0;\n        this._computedSliderPosition = 0;\n        this._refreshComputedValues();\n    }\n    clone() {\n        return new ScrollbarState(this._arrowSize, this._scrollbarSize, this._oppositeScrollbarSize, this._visibleSize, this._scrollSize, this._scrollPosition);\n    }\n    setVisibleSize(visibleSize) {\n        const iVisibleSize = Math.round(visibleSize);\n        if (this._visibleSize !== iVisibleSize) {\n            this._visibleSize = iVisibleSize;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollSize(scrollSize) {\n        const iScrollSize = Math.round(scrollSize);\n        if (this._scrollSize !== iScrollSize) {\n            this._scrollSize = iScrollSize;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollPosition(scrollPosition) {\n        const iScrollPosition = Math.round(scrollPosition);\n        if (this._scrollPosition !== iScrollPosition) {\n            this._scrollPosition = iScrollPosition;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollbarSize(scrollbarSize) {\n        this._scrollbarSize = Math.round(scrollbarSize);\n    }\n    setOppositeScrollbarSize(oppositeScrollbarSize) {\n        this._oppositeScrollbarSize = Math.round(oppositeScrollbarSize);\n    }\n    static _computeValues(oppositeScrollbarSize, arrowSize, visibleSize, scrollSize, scrollPosition) {\n        const computedAvailableSize = Math.max(0, visibleSize - oppositeScrollbarSize);\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * arrowSize);\n        const computedIsNeeded = (scrollSize > 0 && scrollSize > visibleSize);\n        if (!computedIsNeeded) {\n            // There is no need for a slider\n            return {\n                computedAvailableSize: Math.round(computedAvailableSize),\n                computedIsNeeded: computedIsNeeded,\n                computedSliderSize: Math.round(computedRepresentableSize),\n                computedSliderRatio: 0,\n                computedSliderPosition: 0,\n            };\n        }\n        // We must artificially increase the size of the slider if needed, since the slider would be too small to grab with the mouse otherwise\n        const computedSliderSize = Math.round(Math.max(MINIMUM_SLIDER_SIZE, Math.floor(visibleSize * computedRepresentableSize / scrollSize)));\n        // The slider can move from 0 to `computedRepresentableSize` - `computedSliderSize`\n        // in the same way `scrollPosition` can move from 0 to `scrollSize` - `visibleSize`.\n        const computedSliderRatio = (computedRepresentableSize - computedSliderSize) / (scrollSize - visibleSize);\n        const computedSliderPosition = (scrollPosition * computedSliderRatio);\n        return {\n            computedAvailableSize: Math.round(computedAvailableSize),\n            computedIsNeeded: computedIsNeeded,\n            computedSliderSize: Math.round(computedSliderSize),\n            computedSliderRatio: computedSliderRatio,\n            computedSliderPosition: Math.round(computedSliderPosition),\n        };\n    }\n    _refreshComputedValues() {\n        const r = ScrollbarState._computeValues(this._oppositeScrollbarSize, this._arrowSize, this._visibleSize, this._scrollSize, this._scrollPosition);\n        this._computedAvailableSize = r.computedAvailableSize;\n        this._computedIsNeeded = r.computedIsNeeded;\n        this._computedSliderSize = r.computedSliderSize;\n        this._computedSliderRatio = r.computedSliderRatio;\n        this._computedSliderPosition = r.computedSliderPosition;\n    }\n    getArrowSize() {\n        return this._arrowSize;\n    }\n    getScrollPosition() {\n        return this._scrollPosition;\n    }\n    getRectangleLargeSize() {\n        return this._computedAvailableSize;\n    }\n    getRectangleSmallSize() {\n        return this._scrollbarSize;\n    }\n    isNeeded() {\n        return this._computedIsNeeded;\n    }\n    getSliderSize() {\n        return this._computedSliderSize;\n    }\n    getSliderPosition() {\n        return this._computedSliderPosition;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that `offset` ends up in the center of the slider.\n     * `offset` is based on the same coordinate system as the `sliderPosition`.\n     */\n    getDesiredScrollPositionFromOffset(offset) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const desiredSliderPosition = offset - this._arrowSize - this._computedSliderSize / 2;\n        return Math.round(desiredSliderPosition / this._computedSliderRatio);\n    }\n    /**\n     * Compute a desired `scrollPosition` from if offset is before or after the slider position.\n     * If offset is before slider, treat as a page up (or left).  If after, page down (or right).\n     * `offset` and `_computedSliderPosition` are based on the same coordinate system.\n     * `_visibleSize` corresponds to a \"page\" of lines in the returned coordinate system.\n     */\n    getDesiredScrollPositionFromOffsetPaged(offset) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const correctedOffset = offset - this._arrowSize; // compensate if has arrows\n        let desiredScrollPosition = this._scrollPosition;\n        if (correctedOffset < this._computedSliderPosition) {\n            desiredScrollPosition -= this._visibleSize; // page up/left\n        }\n        else {\n            desiredScrollPosition += this._visibleSize; // page down/right\n        }\n        return desiredScrollPosition;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n     */\n    getDesiredScrollPositionFromDelta(delta) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const desiredSliderPosition = this._computedSliderPosition + delta;\n        return Math.round(desiredSliderPosition / this._computedSliderRatio);\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { AbstractScrollbar } from './abstractScrollbar.js';\nimport { ARROW_IMG_SIZE } from './scrollbarArrow.js';\nimport { ScrollbarState } from './scrollbarState.js';\nimport { Codicon } from '../../../common/codicons.js';\nexport class HorizontalScrollbar extends AbstractScrollbar {\n    constructor(scrollable, options, host) {\n        const scrollDimensions = scrollable.getScrollDimensions();\n        const scrollPosition = scrollable.getCurrentScrollPosition();\n        super({\n            lazyRender: options.lazyRender,\n            host: host,\n            scrollbarState: new ScrollbarState((options.horizontalHasArrows ? options.arrowSize : 0), (options.horizontal === 2 /* Hidden */ ? 0 : options.horizontalScrollbarSize), (options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize), scrollDimensions.width, scrollDimensions.scrollWidth, scrollPosition.scrollLeft),\n            visibility: options.horizontal,\n            extraScrollbarClassName: 'horizontal',\n            scrollable: scrollable,\n            scrollByPage: options.scrollByPage\n        });\n        if (options.horizontalHasArrows) {\n            const arrowDelta = (options.arrowSize - ARROW_IMG_SIZE) / 2;\n            const scrollbarDelta = (options.horizontalScrollbarSize - ARROW_IMG_SIZE) / 2;\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonLeft,\n                top: scrollbarDelta,\n                left: arrowDelta,\n                bottom: undefined,\n                right: undefined,\n                bgWidth: options.arrowSize,\n                bgHeight: options.horizontalScrollbarSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 1, 0)),\n            });\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonRight,\n                top: scrollbarDelta,\n                left: undefined,\n                bottom: undefined,\n                right: arrowDelta,\n                bgWidth: options.arrowSize,\n                bgHeight: options.horizontalScrollbarSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, -1, 0)),\n            });\n        }\n        this._createSlider(Math.floor((options.horizontalScrollbarSize - options.horizontalSliderSize) / 2), 0, undefined, options.horizontalSliderSize);\n    }\n    _updateSlider(sliderSize, sliderPosition) {\n        this.slider.setWidth(sliderSize);\n        this.slider.setLeft(sliderPosition);\n    }\n    _renderDomNode(largeSize, smallSize) {\n        this.domNode.setWidth(largeSize);\n        this.domNode.setHeight(smallSize);\n        this.domNode.setLeft(0);\n        this.domNode.setBottom(0);\n    }\n    onDidScroll(e) {\n        this._shouldRender = this._onElementScrollSize(e.scrollWidth) || this._shouldRender;\n        this._shouldRender = this._onElementScrollPosition(e.scrollLeft) || this._shouldRender;\n        this._shouldRender = this._onElementSize(e.width) || this._shouldRender;\n        return this._shouldRender;\n    }\n    _mouseDownRelativePosition(offsetX, offsetY) {\n        return offsetX;\n    }\n    _sliderMousePosition(e) {\n        return e.posx;\n    }\n    _sliderOrthogonalMousePosition(e) {\n        return e.posy;\n    }\n    _updateScrollbarSize(size) {\n        this.slider.setHeight(size);\n    }\n    writeScrollPosition(target, scrollPosition) {\n        target.scrollLeft = scrollPosition;\n    }\n    updateOptions(options) {\n        this.updateScrollbarSize(options.horizontal === 2 /* Hidden */ ? 0 : options.horizontalScrollbarSize);\n        this._scrollbarState.setOppositeScrollbarSize(options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize);\n        this._visibilityController.setVisibility(options.horizontal);\n        this._scrollByPage = options.scrollByPage;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { AbstractScrollbar } from './abstractScrollbar.js';\nimport { ARROW_IMG_SIZE } from './scrollbarArrow.js';\nimport { ScrollbarState } from './scrollbarState.js';\nimport { Codicon } from '../../../common/codicons.js';\nexport class VerticalScrollbar extends AbstractScrollbar {\n    constructor(scrollable, options, host) {\n        const scrollDimensions = scrollable.getScrollDimensions();\n        const scrollPosition = scrollable.getCurrentScrollPosition();\n        super({\n            lazyRender: options.lazyRender,\n            host: host,\n            scrollbarState: new ScrollbarState((options.verticalHasArrows ? options.arrowSize : 0), (options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize), \n            // give priority to vertical scroll bar over horizontal and let it scroll all the way to the bottom\n            0, scrollDimensions.height, scrollDimensions.scrollHeight, scrollPosition.scrollTop),\n            visibility: options.vertical,\n            extraScrollbarClassName: 'vertical',\n            scrollable: scrollable,\n            scrollByPage: options.scrollByPage\n        });\n        if (options.verticalHasArrows) {\n            const arrowDelta = (options.arrowSize - ARROW_IMG_SIZE) / 2;\n            const scrollbarDelta = (options.verticalScrollbarSize - ARROW_IMG_SIZE) / 2;\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonUp,\n                top: arrowDelta,\n                left: scrollbarDelta,\n                bottom: undefined,\n                right: undefined,\n                bgWidth: options.verticalScrollbarSize,\n                bgHeight: options.arrowSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 0, 1)),\n            });\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonDown,\n                top: undefined,\n                left: scrollbarDelta,\n                bottom: arrowDelta,\n                right: undefined,\n                bgWidth: options.verticalScrollbarSize,\n                bgHeight: options.arrowSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 0, -1)),\n            });\n        }\n        this._createSlider(0, Math.floor((options.verticalScrollbarSize - options.verticalSliderSize) / 2), options.verticalSliderSize, undefined);\n    }\n    _updateSlider(sliderSize, sliderPosition) {\n        this.slider.setHeight(sliderSize);\n        this.slider.setTop(sliderPosition);\n    }\n    _renderDomNode(largeSize, smallSize) {\n        this.domNode.setWidth(smallSize);\n        this.domNode.setHeight(largeSize);\n        this.domNode.setRight(0);\n        this.domNode.setTop(0);\n    }\n    onDidScroll(e) {\n        this._shouldRender = this._onElementScrollSize(e.scrollHeight) || this._shouldRender;\n        this._shouldRender = this._onElementScrollPosition(e.scrollTop) || this._shouldRender;\n        this._shouldRender = this._onElementSize(e.height) || this._shouldRender;\n        return this._shouldRender;\n    }\n    _mouseDownRelativePosition(offsetX, offsetY) {\n        return offsetY;\n    }\n    _sliderMousePosition(e) {\n        return e.posy;\n    }\n    _sliderOrthogonalMousePosition(e) {\n        return e.posx;\n    }\n    _updateScrollbarSize(size) {\n        this.slider.setWidth(size);\n    }\n    writeScrollPosition(target, scrollPosition) {\n        target.scrollTop = scrollPosition;\n    }\n    updateOptions(options) {\n        this.updateScrollbarSize(options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize);\n        // give priority to vertical scroll bar over horizontal and let it scroll all the way to the bottom\n        this._scrollbarState.setOppositeScrollbarSize(0);\n        this._visibilityController.setVisibility(options.vertical);\n        this._scrollByPage = options.scrollByPage;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nimport { Disposable } from './lifecycle.js';\nexport class ScrollState {\n    constructor(_forceIntegerValues, width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\n        this._forceIntegerValues = _forceIntegerValues;\n        this._scrollStateBrand = undefined;\n        if (this._forceIntegerValues) {\n            width = width | 0;\n            scrollWidth = scrollWidth | 0;\n            scrollLeft = scrollLeft | 0;\n            height = height | 0;\n            scrollHeight = scrollHeight | 0;\n            scrollTop = scrollTop | 0;\n        }\n        this.rawScrollLeft = scrollLeft; // before validation\n        this.rawScrollTop = scrollTop; // before validation\n        if (width < 0) {\n            width = 0;\n        }\n        if (scrollLeft + width > scrollWidth) {\n            scrollLeft = scrollWidth - width;\n        }\n        if (scrollLeft < 0) {\n            scrollLeft = 0;\n        }\n        if (height < 0) {\n            height = 0;\n        }\n        if (scrollTop + height > scrollHeight) {\n            scrollTop = scrollHeight - height;\n        }\n        if (scrollTop < 0) {\n            scrollTop = 0;\n        }\n        this.width = width;\n        this.scrollWidth = scrollWidth;\n        this.scrollLeft = scrollLeft;\n        this.height = height;\n        this.scrollHeight = scrollHeight;\n        this.scrollTop = scrollTop;\n    }\n    equals(other) {\n        return (this.rawScrollLeft === other.rawScrollLeft\n            && this.rawScrollTop === other.rawScrollTop\n            && this.width === other.width\n            && this.scrollWidth === other.scrollWidth\n            && this.scrollLeft === other.scrollLeft\n            && this.height === other.height\n            && this.scrollHeight === other.scrollHeight\n            && this.scrollTop === other.scrollTop);\n    }\n    withScrollDimensions(update, useRawScrollPositions) {\n        return new ScrollState(this._forceIntegerValues, (typeof update.width !== 'undefined' ? update.width : this.width), (typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth), useRawScrollPositions ? this.rawScrollLeft : this.scrollLeft, (typeof update.height !== 'undefined' ? update.height : this.height), (typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight), useRawScrollPositions ? this.rawScrollTop : this.scrollTop);\n    }\n    withScrollPosition(update) {\n        return new ScrollState(this._forceIntegerValues, this.width, this.scrollWidth, (typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.rawScrollLeft), this.height, this.scrollHeight, (typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.rawScrollTop));\n    }\n    createScrollEvent(previous, inSmoothScrolling) {\n        const widthChanged = (this.width !== previous.width);\n        const scrollWidthChanged = (this.scrollWidth !== previous.scrollWidth);\n        const scrollLeftChanged = (this.scrollLeft !== previous.scrollLeft);\n        const heightChanged = (this.height !== previous.height);\n        const scrollHeightChanged = (this.scrollHeight !== previous.scrollHeight);\n        const scrollTopChanged = (this.scrollTop !== previous.scrollTop);\n        return {\n            inSmoothScrolling: inSmoothScrolling,\n            oldWidth: previous.width,\n            oldScrollWidth: previous.scrollWidth,\n            oldScrollLeft: previous.scrollLeft,\n            width: this.width,\n            scrollWidth: this.scrollWidth,\n            scrollLeft: this.scrollLeft,\n            oldHeight: previous.height,\n            oldScrollHeight: previous.scrollHeight,\n            oldScrollTop: previous.scrollTop,\n            height: this.height,\n            scrollHeight: this.scrollHeight,\n            scrollTop: this.scrollTop,\n            widthChanged: widthChanged,\n            scrollWidthChanged: scrollWidthChanged,\n            scrollLeftChanged: scrollLeftChanged,\n            heightChanged: heightChanged,\n            scrollHeightChanged: scrollHeightChanged,\n            scrollTopChanged: scrollTopChanged,\n        };\n    }\n}\nexport class Scrollable extends Disposable {\n    constructor(options) {\n        super();\n        this._scrollableBrand = undefined;\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._smoothScrollDuration = options.smoothScrollDuration;\n        this._scheduleAtNextAnimationFrame = options.scheduleAtNextAnimationFrame;\n        this._state = new ScrollState(options.forceIntegerValues, 0, 0, 0, 0, 0, 0);\n        this._smoothScrolling = null;\n    }\n    dispose() {\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        super.dispose();\n    }\n    setSmoothScrollDuration(smoothScrollDuration) {\n        this._smoothScrollDuration = smoothScrollDuration;\n    }\n    validateScrollPosition(scrollPosition) {\n        return this._state.withScrollPosition(scrollPosition);\n    }\n    getScrollDimensions() {\n        return this._state;\n    }\n    setScrollDimensions(dimensions, useRawScrollPositions) {\n        const newState = this._state.withScrollDimensions(dimensions, useRawScrollPositions);\n        this._setState(newState, Boolean(this._smoothScrolling));\n        // Validate outstanding animated scroll position target\n        if (this._smoothScrolling) {\n            this._smoothScrolling.acceptScrollDimensions(this._state);\n        }\n    }\n    /**\n     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\n     * If no scroll animation is occurring, it will return the current scroll position instead.\n     */\n    getFutureScrollPosition() {\n        if (this._smoothScrolling) {\n            return this._smoothScrolling.to;\n        }\n        return this._state;\n    }\n    /**\n     * Returns the current scroll position.\n     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\n     */\n    getCurrentScrollPosition() {\n        return this._state;\n    }\n    setScrollPositionNow(update) {\n        // no smooth scrolling requested\n        const newState = this._state.withScrollPosition(update);\n        // Terminate any outstanding smooth scrolling\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        this._setState(newState, false);\n    }\n    setScrollPositionSmooth(update, reuseAnimation) {\n        if (this._smoothScrollDuration === 0) {\n            // Smooth scrolling not supported.\n            return this.setScrollPositionNow(update);\n        }\n        if (this._smoothScrolling) {\n            // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\n            update = {\n                scrollLeft: (typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft),\n                scrollTop: (typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop)\n            };\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\n                // No need to interrupt or extend the current animation since we're going to the same place\n                return;\n            }\n            let newSmoothScrolling;\n            if (reuseAnimation) {\n                newSmoothScrolling = new SmoothScrollingOperation(this._smoothScrolling.from, validTarget, this._smoothScrolling.startTime, this._smoothScrolling.duration);\n            }\n            else {\n                newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\n            }\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = newSmoothScrolling;\n        }\n        else {\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);\n        }\n        // Begin smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    _performSmoothScrolling() {\n        if (!this._smoothScrolling) {\n            return;\n        }\n        const update = this._smoothScrolling.tick();\n        const newState = this._state.withScrollPosition(update);\n        this._setState(newState, true);\n        if (!this._smoothScrolling) {\n            // Looks like someone canceled the smooth scrolling\n            // from the scroll event handler\n            return;\n        }\n        if (update.isDone) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n            return;\n        }\n        // Continue smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    _setState(newState, inSmoothScrolling) {\n        const oldState = this._state;\n        if (oldState.equals(newState)) {\n            // no change\n            return;\n        }\n        this._state = newState;\n        this._onScroll.fire(this._state.createScrollEvent(oldState, inSmoothScrolling));\n    }\n}\nexport class SmoothScrollingUpdate {\n    constructor(scrollLeft, scrollTop, isDone) {\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.isDone = isDone;\n    }\n}\nfunction createEaseOutCubic(from, to) {\n    const delta = to - from;\n    return function (completion) {\n        return from + delta * easeOutCubic(completion);\n    };\n}\nfunction createComposed(a, b, cut) {\n    return function (completion) {\n        if (completion < cut) {\n            return a(completion / cut);\n        }\n        return b((completion - cut) / (1 - cut));\n    };\n}\nexport class SmoothScrollingOperation {\n    constructor(from, to, startTime, duration) {\n        this.from = from;\n        this.to = to;\n        this.duration = duration;\n        this.startTime = startTime;\n        this.animationFrameDisposable = null;\n        this._initAnimations();\n    }\n    _initAnimations() {\n        this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\n        this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\n    }\n    _initAnimation(from, to, viewportSize) {\n        const delta = Math.abs(from - to);\n        if (delta > 2.5 * viewportSize) {\n            let stop1, stop2;\n            if (from < to) {\n                // scroll to 75% of the viewportSize\n                stop1 = from + 0.75 * viewportSize;\n                stop2 = to - 0.75 * viewportSize;\n            }\n            else {\n                stop1 = from - 0.75 * viewportSize;\n                stop2 = to + 0.75 * viewportSize;\n            }\n            return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\n        }\n        return createEaseOutCubic(from, to);\n    }\n    dispose() {\n        if (this.animationFrameDisposable !== null) {\n            this.animationFrameDisposable.dispose();\n            this.animationFrameDisposable = null;\n        }\n    }\n    acceptScrollDimensions(state) {\n        this.to = state.withScrollPosition(this.to);\n        this._initAnimations();\n    }\n    tick() {\n        return this._tick(Date.now());\n    }\n    _tick(now) {\n        const completion = (now - this.startTime) / this.duration;\n        if (completion < 1) {\n            const newScrollLeft = this.scrollLeft(completion);\n            const newScrollTop = this.scrollTop(completion);\n            return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\n        }\n        return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\n    }\n    combine(from, to, duration) {\n        return SmoothScrollingOperation.start(from, to, duration);\n    }\n    static start(from, to, duration) {\n        // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\n        duration = duration + 10;\n        const startTime = Date.now() - 10;\n        return new SmoothScrollingOperation(from, to, startTime, duration);\n    }\n}\nfunction easeInCubic(t) {\n    return Math.pow(t, 3);\n}\nfunction easeOutCubic(t) {\n    return 1 - easeInCubic(1 - t);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getZoomFactor } from '../../browser.js';\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { HorizontalScrollbar } from './horizontalScrollbar.js';\nimport { VerticalScrollbar } from './verticalScrollbar.js';\nimport { Widget } from '../widget.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Emitter } from '../../../common/event.js';\nimport { dispose } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport './media/scrollbars.css';\nconst HIDE_TIMEOUT = 500;\nconst SCROLL_WHEEL_SENSITIVITY = 50;\nconst SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED = true;\nclass MouseWheelClassifierItem {\n    constructor(timestamp, deltaX, deltaY) {\n        this.timestamp = timestamp;\n        this.deltaX = deltaX;\n        this.deltaY = deltaY;\n        this.score = 0;\n    }\n}\nexport class MouseWheelClassifier {\n    constructor() {\n        this._capacity = 5;\n        this._memory = [];\n        this._front = -1;\n        this._rear = -1;\n    }\n    isPhysicalMouseWheel() {\n        if (this._front === -1 && this._rear === -1) {\n            // no elements\n            return false;\n        }\n        // 0.5 * last + 0.25 * 2nd last + 0.125 * 3rd last + ...\n        let remainingInfluence = 1;\n        let score = 0;\n        let iteration = 1;\n        let index = this._rear;\n        do {\n            const influence = (index === this._front ? remainingInfluence : Math.pow(2, -iteration));\n            remainingInfluence -= influence;\n            score += this._memory[index].score * influence;\n            if (index === this._front) {\n                break;\n            }\n            index = (this._capacity + index - 1) % this._capacity;\n            iteration++;\n        } while (true);\n        return (score <= 0.5);\n    }\n    accept(timestamp, deltaX, deltaY) {\n        const item = new MouseWheelClassifierItem(timestamp, deltaX, deltaY);\n        item.score = this._computeScore(item);\n        if (this._front === -1 && this._rear === -1) {\n            this._memory[0] = item;\n            this._front = 0;\n            this._rear = 0;\n        }\n        else {\n            this._rear = (this._rear + 1) % this._capacity;\n            if (this._rear === this._front) {\n                // Drop oldest\n                this._front = (this._front + 1) % this._capacity;\n            }\n            this._memory[this._rear] = item;\n        }\n    }\n    /**\n     * A score between 0 and 1 for `item`.\n     *  - a score towards 0 indicates that the source appears to be a physical mouse wheel\n     *  - a score towards 1 indicates that the source appears to be a touchpad or magic mouse, etc.\n     */\n    _computeScore(item) {\n        if (Math.abs(item.deltaX) > 0 && Math.abs(item.deltaY) > 0) {\n            // both axes exercised => definitely not a physical mouse wheel\n            return 1;\n        }\n        let score = 0.5;\n        const prev = (this._front === -1 && this._rear === -1 ? null : this._memory[this._rear]);\n        if (prev) {\n            // const deltaT = item.timestamp - prev.timestamp;\n            // if (deltaT < 1000 / 30) {\n            // \t// sooner than X times per second => indicator that this is not a physical mouse wheel\n            // \tscore += 0.25;\n            // }\n            // if (item.deltaX === prev.deltaX && item.deltaY === prev.deltaY) {\n            // \t// equal amplitude => indicator that this is a physical mouse wheel\n            // \tscore -= 0.25;\n            // }\n        }\n        if (!this._isAlmostInt(item.deltaX) || !this._isAlmostInt(item.deltaY)) {\n            // non-integer deltas => indicator that this is not a physical mouse wheel\n            score += 0.25;\n        }\n        return Math.min(Math.max(score, 0), 1);\n    }\n    _isAlmostInt(value) {\n        const delta = Math.abs(Math.round(value) - value);\n        return (delta < 0.01);\n    }\n}\nMouseWheelClassifier.INSTANCE = new MouseWheelClassifier();\nexport class AbstractScrollableElement extends Widget {\n    constructor(element, options, scrollable) {\n        super();\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._onWillScroll = this._register(new Emitter());\n        element.style.overflow = 'hidden';\n        this._options = resolveOptions(options);\n        this._scrollable = scrollable;\n        this._register(this._scrollable.onScroll((e) => {\n            this._onWillScroll.fire(e);\n            this._onDidScroll(e);\n            this._onScroll.fire(e);\n        }));\n        const scrollbarHost = {\n            onMouseWheel: (mouseWheelEvent) => this._onMouseWheel(mouseWheelEvent),\n            onDragStart: () => this._onDragStart(),\n            onDragEnd: () => this._onDragEnd(),\n        };\n        this._verticalScrollbar = this._register(new VerticalScrollbar(this._scrollable, this._options, scrollbarHost));\n        this._horizontalScrollbar = this._register(new HorizontalScrollbar(this._scrollable, this._options, scrollbarHost));\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.style.position = 'relative';\n        this._domNode.style.overflow = 'hidden';\n        this._domNode.appendChild(element);\n        this._domNode.appendChild(this._horizontalScrollbar.domNode.domNode);\n        this._domNode.appendChild(this._verticalScrollbar.domNode.domNode);\n        if (this._options.useShadows) {\n            this._leftShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._leftShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._leftShadowDomNode.domNode);\n            this._topShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._topShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._topShadowDomNode.domNode);\n            this._topLeftShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._topLeftShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._topLeftShadowDomNode.domNode);\n        }\n        else {\n            this._leftShadowDomNode = null;\n            this._topShadowDomNode = null;\n            this._topLeftShadowDomNode = null;\n        }\n        this._listenOnDomNode = this._options.listenOnDomNode || this._domNode;\n        this._mouseWheelToDispose = [];\n        this._setListeningToMouseWheel(this._options.handleMouseWheel);\n        this.onmouseover(this._listenOnDomNode, (e) => this._onMouseOver(e));\n        this.onnonbubblingmouseout(this._listenOnDomNode, (e) => this._onMouseOut(e));\n        this._hideTimeout = this._register(new TimeoutTimer());\n        this._isDragging = false;\n        this._mouseIsOver = false;\n        this._shouldRender = true;\n        this._revealOnScroll = true;\n    }\n    get options() {\n        return this._options;\n    }\n    dispose() {\n        this._mouseWheelToDispose = dispose(this._mouseWheelToDispose);\n        super.dispose();\n    }\n    /**\n     * Get the generated 'scrollable' dom node\n     */\n    getDomNode() {\n        return this._domNode;\n    }\n    getOverviewRulerLayoutInfo() {\n        return {\n            parent: this._domNode,\n            insertBefore: this._verticalScrollbar.domNode.domNode,\n        };\n    }\n    /**\n     * Delegate a mouse down event to the vertical scrollbar.\n     * This is to help with clicking somewhere else and having the scrollbar react.\n     */\n    delegateVerticalScrollbarMouseDown(browserEvent) {\n        this._verticalScrollbar.delegateMouseDown(browserEvent);\n    }\n    getScrollDimensions() {\n        return this._scrollable.getScrollDimensions();\n    }\n    setScrollDimensions(dimensions) {\n        this._scrollable.setScrollDimensions(dimensions, false);\n    }\n    /**\n     * Update the class name of the scrollable element.\n     */\n    updateClassName(newClassName) {\n        this._options.className = newClassName;\n        // Defaults are different on Macs\n        if (platform.isMacintosh) {\n            this._options.className += ' mac';\n        }\n        this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n    }\n    /**\n     * Update configuration options for the scrollbar.\n     */\n    updateOptions(newOptions) {\n        if (typeof newOptions.handleMouseWheel !== 'undefined') {\n            this._options.handleMouseWheel = newOptions.handleMouseWheel;\n            this._setListeningToMouseWheel(this._options.handleMouseWheel);\n        }\n        if (typeof newOptions.mouseWheelScrollSensitivity !== 'undefined') {\n            this._options.mouseWheelScrollSensitivity = newOptions.mouseWheelScrollSensitivity;\n        }\n        if (typeof newOptions.fastScrollSensitivity !== 'undefined') {\n            this._options.fastScrollSensitivity = newOptions.fastScrollSensitivity;\n        }\n        if (typeof newOptions.scrollPredominantAxis !== 'undefined') {\n            this._options.scrollPredominantAxis = newOptions.scrollPredominantAxis;\n        }\n        if (typeof newOptions.horizontal !== 'undefined') {\n            this._options.horizontal = newOptions.horizontal;\n        }\n        if (typeof newOptions.vertical !== 'undefined') {\n            this._options.vertical = newOptions.vertical;\n        }\n        if (typeof newOptions.horizontalScrollbarSize !== 'undefined') {\n            this._options.horizontalScrollbarSize = newOptions.horizontalScrollbarSize;\n        }\n        if (typeof newOptions.verticalScrollbarSize !== 'undefined') {\n            this._options.verticalScrollbarSize = newOptions.verticalScrollbarSize;\n        }\n        if (typeof newOptions.scrollByPage !== 'undefined') {\n            this._options.scrollByPage = newOptions.scrollByPage;\n        }\n        this._horizontalScrollbar.updateOptions(this._options);\n        this._verticalScrollbar.updateOptions(this._options);\n        if (!this._options.lazyRender) {\n            this._render();\n        }\n    }\n    // -------------------- mouse wheel scrolling --------------------\n    _setListeningToMouseWheel(shouldListen) {\n        const isListening = (this._mouseWheelToDispose.length > 0);\n        if (isListening === shouldListen) {\n            // No change\n            return;\n        }\n        // Stop listening (if necessary)\n        this._mouseWheelToDispose = dispose(this._mouseWheelToDispose);\n        // Start listening (if necessary)\n        if (shouldListen) {\n            const onMouseWheel = (browserEvent) => {\n                this._onMouseWheel(new StandardWheelEvent(browserEvent));\n            };\n            this._mouseWheelToDispose.push(dom.addDisposableListener(this._listenOnDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { passive: false }));\n        }\n    }\n    _onMouseWheel(e) {\n        const classifier = MouseWheelClassifier.INSTANCE;\n        if (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED) {\n            const osZoomFactor = window.devicePixelRatio / getZoomFactor();\n            if (platform.isWindows || platform.isLinux) {\n                // On Windows and Linux, the incoming delta events are multiplied with the OS zoom factor.\n                // The OS zoom factor can be reverse engineered by using the device pixel ratio and the configured zoom factor into account.\n                classifier.accept(Date.now(), e.deltaX / osZoomFactor, e.deltaY / osZoomFactor);\n            }\n            else {\n                classifier.accept(Date.now(), e.deltaX, e.deltaY);\n            }\n        }\n        // console.log(`${Date.now()}, ${e.deltaY}, ${e.deltaX}`);\n        let didScroll = false;\n        if (e.deltaY || e.deltaX) {\n            let deltaY = e.deltaY * this._options.mouseWheelScrollSensitivity;\n            let deltaX = e.deltaX * this._options.mouseWheelScrollSensitivity;\n            if (this._options.scrollPredominantAxis) {\n                if (Math.abs(deltaY) >= Math.abs(deltaX)) {\n                    deltaX = 0;\n                }\n                else {\n                    deltaY = 0;\n                }\n            }\n            if (this._options.flipAxes) {\n                [deltaY, deltaX] = [deltaX, deltaY];\n            }\n            // Convert vertical scrolling to horizontal if shift is held, this\n            // is handled at a higher level on Mac\n            const shiftConvert = !platform.isMacintosh && e.browserEvent && e.browserEvent.shiftKey;\n            if ((this._options.scrollYToX || shiftConvert) && !deltaX) {\n                deltaX = deltaY;\n                deltaY = 0;\n            }\n            if (e.browserEvent && e.browserEvent.altKey) {\n                // fastScrolling\n                deltaX = deltaX * this._options.fastScrollSensitivity;\n                deltaY = deltaY * this._options.fastScrollSensitivity;\n            }\n            const futureScrollPosition = this._scrollable.getFutureScrollPosition();\n            let desiredScrollPosition = {};\n            if (deltaY) {\n                const deltaScrollTop = SCROLL_WHEEL_SENSITIVITY * deltaY;\n                // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n                const desiredScrollTop = futureScrollPosition.scrollTop - (deltaScrollTop < 0 ? Math.floor(deltaScrollTop) : Math.ceil(deltaScrollTop));\n                this._verticalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollTop);\n            }\n            if (deltaX) {\n                const deltaScrollLeft = SCROLL_WHEEL_SENSITIVITY * deltaX;\n                // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n                const desiredScrollLeft = futureScrollPosition.scrollLeft - (deltaScrollLeft < 0 ? Math.floor(deltaScrollLeft) : Math.ceil(deltaScrollLeft));\n                this._horizontalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollLeft);\n            }\n            // Check that we are scrolling towards a location which is valid\n            desiredScrollPosition = this._scrollable.validateScrollPosition(desiredScrollPosition);\n            if (futureScrollPosition.scrollLeft !== desiredScrollPosition.scrollLeft || futureScrollPosition.scrollTop !== desiredScrollPosition.scrollTop) {\n                const canPerformSmoothScroll = (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED\n                    && this._options.mouseWheelSmoothScroll\n                    && classifier.isPhysicalMouseWheel());\n                if (canPerformSmoothScroll) {\n                    this._scrollable.setScrollPositionSmooth(desiredScrollPosition);\n                }\n                else {\n                    this._scrollable.setScrollPositionNow(desiredScrollPosition);\n                }\n                didScroll = true;\n            }\n        }\n        let consumeMouseWheel = didScroll;\n        if (!consumeMouseWheel && this._options.alwaysConsumeMouseWheel) {\n            consumeMouseWheel = true;\n        }\n        if (!consumeMouseWheel && this._options.consumeMouseWheelIfScrollbarIsNeeded && (this._verticalScrollbar.isNeeded() || this._horizontalScrollbar.isNeeded())) {\n            consumeMouseWheel = true;\n        }\n        if (consumeMouseWheel) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n    _onDidScroll(e) {\n        this._shouldRender = this._horizontalScrollbar.onDidScroll(e) || this._shouldRender;\n        this._shouldRender = this._verticalScrollbar.onDidScroll(e) || this._shouldRender;\n        if (this._options.useShadows) {\n            this._shouldRender = true;\n        }\n        if (this._revealOnScroll) {\n            this._reveal();\n        }\n        if (!this._options.lazyRender) {\n            this._render();\n        }\n    }\n    /**\n     * Render / mutate the DOM now.\n     * Should be used together with the ctor option `lazyRender`.\n     */\n    renderNow() {\n        if (!this._options.lazyRender) {\n            throw new Error('Please use `lazyRender` together with `renderNow`!');\n        }\n        this._render();\n    }\n    _render() {\n        if (!this._shouldRender) {\n            return;\n        }\n        this._shouldRender = false;\n        this._horizontalScrollbar.render();\n        this._verticalScrollbar.render();\n        if (this._options.useShadows) {\n            const scrollState = this._scrollable.getCurrentScrollPosition();\n            const enableTop = scrollState.scrollTop > 0;\n            const enableLeft = scrollState.scrollLeft > 0;\n            const leftClassName = (enableLeft ? ' left' : '');\n            const topClassName = (enableTop ? ' top' : '');\n            const topLeftClassName = (enableLeft || enableTop ? ' top-left-corner' : '');\n            this._leftShadowDomNode.setClassName(`shadow${leftClassName}`);\n            this._topShadowDomNode.setClassName(`shadow${topClassName}`);\n            this._topLeftShadowDomNode.setClassName(`shadow${topLeftClassName}${topClassName}${leftClassName}`);\n        }\n    }\n    // -------------------- fade in / fade out --------------------\n    _onDragStart() {\n        this._isDragging = true;\n        this._reveal();\n    }\n    _onDragEnd() {\n        this._isDragging = false;\n        this._hide();\n    }\n    _onMouseOut(e) {\n        this._mouseIsOver = false;\n        this._hide();\n    }\n    _onMouseOver(e) {\n        this._mouseIsOver = true;\n        this._reveal();\n    }\n    _reveal() {\n        this._verticalScrollbar.beginReveal();\n        this._horizontalScrollbar.beginReveal();\n        this._scheduleHide();\n    }\n    _hide() {\n        if (!this._mouseIsOver && !this._isDragging) {\n            this._verticalScrollbar.beginHide();\n            this._horizontalScrollbar.beginHide();\n        }\n    }\n    _scheduleHide() {\n        if (!this._mouseIsOver && !this._isDragging) {\n            this._hideTimeout.cancelAndSet(() => this._hide(), HIDE_TIMEOUT);\n        }\n    }\n}\nexport class ScrollableElement extends AbstractScrollableElement {\n    constructor(element, options) {\n        options = options || {};\n        options.mouseWheelSmoothScroll = false;\n        const scrollable = new Scrollable({\n            forceIntegerValues: true,\n            smoothScrollDuration: 0,\n            scheduleAtNextAnimationFrame: (callback) => dom.scheduleAtNextAnimationFrame(callback)\n        });\n        super(element, options, scrollable);\n        this._register(scrollable);\n    }\n    setScrollPosition(update) {\n        this._scrollable.setScrollPositionNow(update);\n    }\n}\nexport class SmoothScrollableElement extends AbstractScrollableElement {\n    constructor(element, options, scrollable) {\n        super(element, options, scrollable);\n    }\n    setScrollPosition(update) {\n        if (update.reuseAnimation) {\n            this._scrollable.setScrollPositionSmooth(update, update.reuseAnimation);\n        }\n        else {\n            this._scrollable.setScrollPositionNow(update);\n        }\n    }\n    getScrollPosition() {\n        return this._scrollable.getCurrentScrollPosition();\n    }\n}\nexport class DomScrollableElement extends AbstractScrollableElement {\n    constructor(element, options) {\n        options = options || {};\n        options.mouseWheelSmoothScroll = false;\n        const scrollable = new Scrollable({\n            forceIntegerValues: false,\n            smoothScrollDuration: 0,\n            scheduleAtNextAnimationFrame: (callback) => dom.scheduleAtNextAnimationFrame(callback)\n        });\n        super(element, options, scrollable);\n        this._register(scrollable);\n        this._element = element;\n        this.onScroll((e) => {\n            if (e.scrollTopChanged) {\n                this._element.scrollTop = e.scrollTop;\n            }\n            if (e.scrollLeftChanged) {\n                this._element.scrollLeft = e.scrollLeft;\n            }\n        });\n        this.scanDomNode();\n    }\n    setScrollPosition(update) {\n        this._scrollable.setScrollPositionNow(update);\n    }\n    getScrollPosition() {\n        return this._scrollable.getCurrentScrollPosition();\n    }\n    scanDomNode() {\n        // width, scrollLeft, scrollWidth, height, scrollTop, scrollHeight\n        this.setScrollDimensions({\n            width: this._element.clientWidth,\n            scrollWidth: this._element.scrollWidth,\n            height: this._element.clientHeight,\n            scrollHeight: this._element.scrollHeight\n        });\n        this.setScrollPosition({\n            scrollLeft: this._element.scrollLeft,\n            scrollTop: this._element.scrollTop,\n        });\n    }\n}\nfunction resolveOptions(opts) {\n    const result = {\n        lazyRender: (typeof opts.lazyRender !== 'undefined' ? opts.lazyRender : false),\n        className: (typeof opts.className !== 'undefined' ? opts.className : ''),\n        useShadows: (typeof opts.useShadows !== 'undefined' ? opts.useShadows : true),\n        handleMouseWheel: (typeof opts.handleMouseWheel !== 'undefined' ? opts.handleMouseWheel : true),\n        flipAxes: (typeof opts.flipAxes !== 'undefined' ? opts.flipAxes : false),\n        consumeMouseWheelIfScrollbarIsNeeded: (typeof opts.consumeMouseWheelIfScrollbarIsNeeded !== 'undefined' ? opts.consumeMouseWheelIfScrollbarIsNeeded : false),\n        alwaysConsumeMouseWheel: (typeof opts.alwaysConsumeMouseWheel !== 'undefined' ? opts.alwaysConsumeMouseWheel : false),\n        scrollYToX: (typeof opts.scrollYToX !== 'undefined' ? opts.scrollYToX : false),\n        mouseWheelScrollSensitivity: (typeof opts.mouseWheelScrollSensitivity !== 'undefined' ? opts.mouseWheelScrollSensitivity : 1),\n        fastScrollSensitivity: (typeof opts.fastScrollSensitivity !== 'undefined' ? opts.fastScrollSensitivity : 5),\n        scrollPredominantAxis: (typeof opts.scrollPredominantAxis !== 'undefined' ? opts.scrollPredominantAxis : true),\n        mouseWheelSmoothScroll: (typeof opts.mouseWheelSmoothScroll !== 'undefined' ? opts.mouseWheelSmoothScroll : true),\n        arrowSize: (typeof opts.arrowSize !== 'undefined' ? opts.arrowSize : 11),\n        listenOnDomNode: (typeof opts.listenOnDomNode !== 'undefined' ? opts.listenOnDomNode : null),\n        horizontal: (typeof opts.horizontal !== 'undefined' ? opts.horizontal : 1 /* Auto */),\n        horizontalScrollbarSize: (typeof opts.horizontalScrollbarSize !== 'undefined' ? opts.horizontalScrollbarSize : 10),\n        horizontalSliderSize: (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : 0),\n        horizontalHasArrows: (typeof opts.horizontalHasArrows !== 'undefined' ? opts.horizontalHasArrows : false),\n        vertical: (typeof opts.vertical !== 'undefined' ? opts.vertical : 1 /* Auto */),\n        verticalScrollbarSize: (typeof opts.verticalScrollbarSize !== 'undefined' ? opts.verticalScrollbarSize : 10),\n        verticalHasArrows: (typeof opts.verticalHasArrows !== 'undefined' ? opts.verticalHasArrows : false),\n        verticalSliderSize: (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : 0),\n        scrollByPage: (typeof opts.scrollByPage !== 'undefined' ? opts.scrollByPage : false)\n    };\n    result.horizontalSliderSize = (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : result.horizontalScrollbarSize);\n    result.verticalSliderSize = (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : result.verticalScrollbarSize);\n    // Defaults are different on Macs\n    if (platform.isMacintosh) {\n        result.className += ' mac';\n    }\n    return result;\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ArrayNavigator {\n    constructor(items, start = 0, end = items.length, index = start - 1) {\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    current() {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    }\n    next() {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    }\n    previous() {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    }\n    first() {\n        this.index = this.start;\n        return this.current();\n    }\n    last() {\n        this.index = this.end - 1;\n        return this.current();\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayNavigator } from './navigator.js';\nexport class HistoryNavigator {\n    constructor(history = [], limit = 10) {\n        this._initialize(history);\n        this._limit = limit;\n        this._onChange();\n    }\n    getHistory() {\n        return this._elements;\n    }\n    add(t) {\n        this._history.delete(t);\n        this._history.add(t);\n        this._onChange();\n    }\n    next() {\n        if (this._currentPosition() !== this._elements.length - 1) {\n            return this._navigator.next();\n        }\n        return null;\n    }\n    previous() {\n        if (this._currentPosition() !== 0) {\n            return this._navigator.previous();\n        }\n        return null;\n    }\n    current() {\n        return this._navigator.current();\n    }\n    first() {\n        return this._navigator.first();\n    }\n    last() {\n        return this._navigator.last();\n    }\n    has(t) {\n        return this._history.has(t);\n    }\n    _onChange() {\n        this._reduceToLimit();\n        const elements = this._elements;\n        this._navigator = new ArrayNavigator(elements, 0, elements.length, elements.length);\n    }\n    _reduceToLimit() {\n        const data = this._elements;\n        if (data.length > this._limit) {\n            this._initialize(data.slice(data.length - this._limit));\n        }\n    }\n    _currentPosition() {\n        const currentElement = this._navigator.current();\n        if (!currentElement) {\n            return -1;\n        }\n        return this._elements.indexOf(currentElement);\n    }\n    _initialize(history) {\n        this._history = new Set();\n        for (const entry of history) {\n            this._history.add(entry);\n        }\n    }\n    get _elements() {\n        const elements = [];\n        this._history.forEach(e => elements.push(e));\n        return elements;\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { renderFormattedText, renderText } from '../../formattedTextRenderer.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport * as aria from '../aria/aria.js';\nimport { ScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { Widget } from '../widget.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { HistoryNavigator } from '../../../common/history.js';\nimport { mixin } from '../../../common/objects.js';\nimport './inputBox.css';\nimport * as nls from '../../../../nls.js';\nconst $ = dom.$;\nconst defaultOpts = {\n    inputBackground: Color.fromHex('#3C3C3C'),\n    inputForeground: Color.fromHex('#CCCCCC'),\n    inputValidationInfoBorder: Color.fromHex('#55AAFF'),\n    inputValidationInfoBackground: Color.fromHex('#063B49'),\n    inputValidationWarningBorder: Color.fromHex('#B89500'),\n    inputValidationWarningBackground: Color.fromHex('#352A05'),\n    inputValidationErrorBorder: Color.fromHex('#BE1100'),\n    inputValidationErrorBackground: Color.fromHex('#5A1D1D')\n};\nexport class InputBox extends Widget {\n    constructor(container, contextViewProvider, options) {\n        var _a;\n        super();\n        this.state = 'idle';\n        this.maxHeight = Number.POSITIVE_INFINITY;\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._onDidHeightChange = this._register(new Emitter());\n        this.onDidHeightChange = this._onDidHeightChange.event;\n        this.contextViewProvider = contextViewProvider;\n        this.options = options || Object.create(null);\n        mixin(this.options, defaultOpts, false);\n        this.message = null;\n        this.placeholder = this.options.placeholder || '';\n        this.tooltip = (_a = this.options.tooltip) !== null && _a !== void 0 ? _a : (this.placeholder || '');\n        this.ariaLabel = this.options.ariaLabel || '';\n        this.inputBackground = this.options.inputBackground;\n        this.inputForeground = this.options.inputForeground;\n        this.inputBorder = this.options.inputBorder;\n        this.inputValidationInfoBorder = this.options.inputValidationInfoBorder;\n        this.inputValidationInfoBackground = this.options.inputValidationInfoBackground;\n        this.inputValidationInfoForeground = this.options.inputValidationInfoForeground;\n        this.inputValidationWarningBorder = this.options.inputValidationWarningBorder;\n        this.inputValidationWarningBackground = this.options.inputValidationWarningBackground;\n        this.inputValidationWarningForeground = this.options.inputValidationWarningForeground;\n        this.inputValidationErrorBorder = this.options.inputValidationErrorBorder;\n        this.inputValidationErrorBackground = this.options.inputValidationErrorBackground;\n        this.inputValidationErrorForeground = this.options.inputValidationErrorForeground;\n        if (this.options.validationOptions) {\n            this.validation = this.options.validationOptions.validation;\n        }\n        this.element = dom.append(container, $('.monaco-inputbox.idle'));\n        let tagName = this.options.flexibleHeight ? 'textarea' : 'input';\n        let wrapper = dom.append(this.element, $('.ibwrapper'));\n        this.input = dom.append(wrapper, $(tagName + '.input.empty'));\n        this.input.setAttribute('autocorrect', 'off');\n        this.input.setAttribute('autocapitalize', 'off');\n        this.input.setAttribute('spellcheck', 'false');\n        this.onfocus(this.input, () => this.element.classList.add('synthetic-focus'));\n        this.onblur(this.input, () => this.element.classList.remove('synthetic-focus'));\n        if (this.options.flexibleHeight) {\n            this.maxHeight = typeof this.options.flexibleMaxHeight === 'number' ? this.options.flexibleMaxHeight : Number.POSITIVE_INFINITY;\n            this.mirror = dom.append(wrapper, $('div.mirror'));\n            this.mirror.innerText = '\\u00a0';\n            this.scrollableElement = new ScrollableElement(this.element, { vertical: 1 /* Auto */ });\n            if (this.options.flexibleWidth) {\n                this.input.setAttribute('wrap', 'off');\n                this.mirror.style.whiteSpace = 'pre';\n                this.mirror.style.wordWrap = 'initial';\n            }\n            dom.append(container, this.scrollableElement.getDomNode());\n            this._register(this.scrollableElement);\n            // from ScrollableElement to DOM\n            this._register(this.scrollableElement.onScroll(e => this.input.scrollTop = e.scrollTop));\n            const onSelectionChange = this._register(new DomEmitter(document, 'selectionchange'));\n            const onAnchoredSelectionChange = Event.filter(onSelectionChange.event, () => {\n                const selection = document.getSelection();\n                return (selection === null || selection === void 0 ? void 0 : selection.anchorNode) === wrapper;\n            });\n            // from DOM to ScrollableElement\n            this._register(onAnchoredSelectionChange(this.updateScrollDimensions, this));\n            this._register(this.onDidHeightChange(this.updateScrollDimensions, this));\n        }\n        else {\n            this.input.type = this.options.type || 'text';\n            this.input.setAttribute('wrap', 'off');\n        }\n        if (this.ariaLabel) {\n            this.input.setAttribute('aria-label', this.ariaLabel);\n        }\n        if (this.placeholder && !this.options.showPlaceholderOnFocus) {\n            this.setPlaceHolder(this.placeholder);\n        }\n        if (this.tooltip) {\n            this.setTooltip(this.tooltip);\n        }\n        this.oninput(this.input, () => this.onValueChange());\n        this.onblur(this.input, () => this.onBlur());\n        this.onfocus(this.input, () => this.onFocus());\n        this.ignoreGesture(this.input);\n        setTimeout(() => this.updateMirror(), 0);\n        // Support actions\n        if (this.options.actions) {\n            this.actionbar = this._register(new ActionBar(this.element));\n            this.actionbar.push(this.options.actions, { icon: true, label: false });\n        }\n        this.applyStyles();\n    }\n    onBlur() {\n        this._hideMessage();\n        if (this.options.showPlaceholderOnFocus) {\n            this.input.setAttribute('placeholder', '');\n        }\n    }\n    onFocus() {\n        this._showMessage();\n        if (this.options.showPlaceholderOnFocus) {\n            this.input.setAttribute('placeholder', this.placeholder || '');\n        }\n    }\n    setPlaceHolder(placeHolder) {\n        this.placeholder = placeHolder;\n        this.input.setAttribute('placeholder', placeHolder);\n    }\n    setTooltip(tooltip) {\n        this.tooltip = tooltip;\n        this.input.title = tooltip;\n    }\n    setAriaLabel(label) {\n        this.ariaLabel = label;\n        if (label) {\n            this.input.setAttribute('aria-label', this.ariaLabel);\n        }\n        else {\n            this.input.removeAttribute('aria-label');\n        }\n    }\n    getAriaLabel() {\n        return this.ariaLabel;\n    }\n    get inputElement() {\n        return this.input;\n    }\n    get value() {\n        return this.input.value;\n    }\n    set value(newValue) {\n        if (this.input.value !== newValue) {\n            this.input.value = newValue;\n            this.onValueChange();\n        }\n    }\n    get height() {\n        return typeof this.cachedHeight === 'number' ? this.cachedHeight : dom.getTotalHeight(this.element);\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    hasFocus() {\n        return document.activeElement === this.input;\n    }\n    select(range = null) {\n        this.input.select();\n        if (range) {\n            this.input.setSelectionRange(range.start, range.end);\n            if (range.end === this.input.value.length) {\n                this.input.scrollLeft = this.input.scrollWidth;\n            }\n        }\n    }\n    isSelectionAtEnd() {\n        return this.input.selectionEnd === this.input.value.length && this.input.selectionStart === this.input.selectionEnd;\n    }\n    enable() {\n        this.input.removeAttribute('disabled');\n    }\n    disable() {\n        this.blur();\n        this.input.disabled = true;\n        this._hideMessage();\n    }\n    get width() {\n        return dom.getTotalWidth(this.input);\n    }\n    set width(width) {\n        if (this.options.flexibleHeight && this.options.flexibleWidth) {\n            // textarea with horizontal scrolling\n            let horizontalPadding = 0;\n            if (this.mirror) {\n                const paddingLeft = parseFloat(this.mirror.style.paddingLeft || '') || 0;\n                const paddingRight = parseFloat(this.mirror.style.paddingRight || '') || 0;\n                horizontalPadding = paddingLeft + paddingRight;\n            }\n            this.input.style.width = (width - horizontalPadding) + 'px';\n        }\n        else {\n            this.input.style.width = width + 'px';\n        }\n        if (this.mirror) {\n            this.mirror.style.width = width + 'px';\n        }\n    }\n    set paddingRight(paddingRight) {\n        // Set width to avoid hint text overlapping buttons\n        this.input.style.width = `calc(100% - ${paddingRight}px)`;\n        if (this.mirror) {\n            this.mirror.style.paddingRight = paddingRight + 'px';\n        }\n    }\n    updateScrollDimensions() {\n        if (typeof this.cachedContentHeight !== 'number' || typeof this.cachedHeight !== 'number' || !this.scrollableElement) {\n            return;\n        }\n        const scrollHeight = this.cachedContentHeight;\n        const height = this.cachedHeight;\n        const scrollTop = this.input.scrollTop;\n        this.scrollableElement.setScrollDimensions({ scrollHeight, height });\n        this.scrollableElement.setScrollPosition({ scrollTop });\n    }\n    showMessage(message, force) {\n        this.message = message;\n        this.element.classList.remove('idle');\n        this.element.classList.remove('info');\n        this.element.classList.remove('warning');\n        this.element.classList.remove('error');\n        this.element.classList.add(this.classForType(message.type));\n        const styles = this.stylesForType(this.message.type);\n        this.element.style.border = styles.border ? `1px solid ${styles.border}` : '';\n        if (this.hasFocus() || force) {\n            this._showMessage();\n        }\n    }\n    hideMessage() {\n        this.message = null;\n        this.element.classList.remove('info');\n        this.element.classList.remove('warning');\n        this.element.classList.remove('error');\n        this.element.classList.add('idle');\n        this._hideMessage();\n        this.applyStyles();\n    }\n    validate() {\n        let errorMsg = null;\n        if (this.validation) {\n            errorMsg = this.validation(this.value);\n            if (errorMsg) {\n                this.inputElement.setAttribute('aria-invalid', 'true');\n                this.showMessage(errorMsg);\n            }\n            else if (this.inputElement.hasAttribute('aria-invalid')) {\n                this.inputElement.removeAttribute('aria-invalid');\n                this.hideMessage();\n            }\n        }\n        return errorMsg === null || errorMsg === void 0 ? void 0 : errorMsg.type;\n    }\n    stylesForType(type) {\n        switch (type) {\n            case 1 /* INFO */: return { border: this.inputValidationInfoBorder, background: this.inputValidationInfoBackground, foreground: this.inputValidationInfoForeground };\n            case 2 /* WARNING */: return { border: this.inputValidationWarningBorder, background: this.inputValidationWarningBackground, foreground: this.inputValidationWarningForeground };\n            default: return { border: this.inputValidationErrorBorder, background: this.inputValidationErrorBackground, foreground: this.inputValidationErrorForeground };\n        }\n    }\n    classForType(type) {\n        switch (type) {\n            case 1 /* INFO */: return 'info';\n            case 2 /* WARNING */: return 'warning';\n            default: return 'error';\n        }\n    }\n    _showMessage() {\n        if (!this.contextViewProvider || !this.message) {\n            return;\n        }\n        let div;\n        let layout = () => div.style.width = dom.getTotalWidth(this.element) + 'px';\n        this.contextViewProvider.showContextView({\n            getAnchor: () => this.element,\n            anchorAlignment: 1 /* RIGHT */,\n            render: (container) => {\n                if (!this.message) {\n                    return null;\n                }\n                div = dom.append(container, $('.monaco-inputbox-container'));\n                layout();\n                const renderOptions = {\n                    inline: true,\n                    className: 'monaco-inputbox-message'\n                };\n                const spanElement = (this.message.formatContent\n                    ? renderFormattedText(this.message.content, renderOptions)\n                    : renderText(this.message.content, renderOptions));\n                spanElement.classList.add(this.classForType(this.message.type));\n                const styles = this.stylesForType(this.message.type);\n                spanElement.style.backgroundColor = styles.background ? styles.background.toString() : '';\n                spanElement.style.color = styles.foreground ? styles.foreground.toString() : '';\n                spanElement.style.border = styles.border ? `1px solid ${styles.border}` : '';\n                dom.append(div, spanElement);\n                return null;\n            },\n            onHide: () => {\n                this.state = 'closed';\n            },\n            layout: layout\n        });\n        // ARIA Support\n        let alertText;\n        if (this.message.type === 3 /* ERROR */) {\n            alertText = nls.localize('alertErrorMessage', \"Error: {0}\", this.message.content);\n        }\n        else if (this.message.type === 2 /* WARNING */) {\n            alertText = nls.localize('alertWarningMessage', \"Warning: {0}\", this.message.content);\n        }\n        else {\n            alertText = nls.localize('alertInfoMessage', \"Info: {0}\", this.message.content);\n        }\n        aria.alert(alertText);\n        this.state = 'open';\n    }\n    _hideMessage() {\n        if (!this.contextViewProvider) {\n            return;\n        }\n        if (this.state === 'open') {\n            this.contextViewProvider.hideContextView();\n        }\n        this.state = 'idle';\n    }\n    onValueChange() {\n        this._onDidChange.fire(this.value);\n        this.validate();\n        this.updateMirror();\n        this.input.classList.toggle('empty', !this.value);\n        if (this.state === 'open' && this.contextViewProvider) {\n            this.contextViewProvider.layout();\n        }\n    }\n    updateMirror() {\n        if (!this.mirror) {\n            return;\n        }\n        const value = this.value;\n        const lastCharCode = value.charCodeAt(value.length - 1);\n        const suffix = lastCharCode === 10 ? ' ' : '';\n        const mirrorTextContent = (value + suffix)\n            .replace(/\\u000c/g, ''); // Don't measure with the form feed character, which messes up sizing\n        if (mirrorTextContent) {\n            this.mirror.textContent = value + suffix;\n        }\n        else {\n            this.mirror.innerText = '\\u00a0';\n        }\n        this.layout();\n    }\n    style(styles) {\n        this.inputBackground = styles.inputBackground;\n        this.inputForeground = styles.inputForeground;\n        this.inputBorder = styles.inputBorder;\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\n        this.applyStyles();\n    }\n    applyStyles() {\n        const background = this.inputBackground ? this.inputBackground.toString() : '';\n        const foreground = this.inputForeground ? this.inputForeground.toString() : '';\n        const border = this.inputBorder ? this.inputBorder.toString() : '';\n        this.element.style.backgroundColor = background;\n        this.element.style.color = foreground;\n        this.input.style.backgroundColor = 'inherit';\n        this.input.style.color = foreground;\n        this.element.style.borderWidth = border ? '1px' : '';\n        this.element.style.borderStyle = border ? 'solid' : '';\n        this.element.style.borderColor = border;\n    }\n    layout() {\n        if (!this.mirror) {\n            return;\n        }\n        const previousHeight = this.cachedContentHeight;\n        this.cachedContentHeight = dom.getTotalHeight(this.mirror);\n        if (previousHeight !== this.cachedContentHeight) {\n            this.cachedHeight = Math.min(this.cachedContentHeight, this.maxHeight);\n            this.input.style.height = this.cachedHeight + 'px';\n            this._onDidHeightChange.fire(this.cachedContentHeight);\n        }\n    }\n    insertAtCursor(text) {\n        const inputElement = this.inputElement;\n        const start = inputElement.selectionStart;\n        const end = inputElement.selectionEnd;\n        const content = inputElement.value;\n        if (start !== null && end !== null) {\n            this.value = content.substr(0, start) + text + content.substr(end);\n            inputElement.setSelectionRange(start + 1, start + 1);\n            this.layout();\n        }\n    }\n    dispose() {\n        this._hideMessage();\n        this.message = null;\n        if (this.actionbar) {\n            this.actionbar.dispose();\n        }\n        super.dispose();\n    }\n}\nexport class HistoryInputBox extends InputBox {\n    constructor(container, contextViewProvider, options) {\n        const NLS_PLACEHOLDER_HISTORY_HINT = nls.localize({ key: 'history.inputbox.hint', comment: ['Text will be prefixed with \\u21C5 plus a single space, then used as a hint where input field keeps history'] }, \"for history\");\n        const NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX = ` or \\u21C5 ${NLS_PLACEHOLDER_HISTORY_HINT}`;\n        const NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS = ` (\\u21C5 ${NLS_PLACEHOLDER_HISTORY_HINT})`;\n        super(container, contextViewProvider, options);\n        this.history = new HistoryNavigator(options.history, 100);\n        // Function to append the history suffix to the placeholder if necessary\n        const addSuffix = () => {\n            if (options.showHistoryHint && options.showHistoryHint() && !this.placeholder.endsWith(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX) && !this.placeholder.endsWith(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS) && this.history.getHistory().length) {\n                const suffix = this.placeholder.endsWith(')') ? NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX : NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS;\n                const suffixedPlaceholder = this.placeholder + suffix;\n                if (options.showPlaceholderOnFocus && document.activeElement !== this.input) {\n                    this.placeholder = suffixedPlaceholder;\n                }\n                else {\n                    this.setPlaceHolder(suffixedPlaceholder);\n                }\n            }\n        };\n        // Spot the change to the textarea class attribute which occurs when it changes between non-empty and empty,\n        // and add the history suffix to the placeholder if not yet present\n        this.observer = new MutationObserver((mutationList, observer) => {\n            mutationList.forEach((mutation) => {\n                if (!mutation.target.textContent) {\n                    addSuffix();\n                }\n            });\n        });\n        this.observer.observe(this.input, { attributeFilter: ['class'] });\n        this.onfocus(this.input, () => addSuffix());\n        this.onblur(this.input, () => {\n            const resetPlaceholder = (historyHint) => {\n                if (!this.placeholder.endsWith(historyHint)) {\n                    return false;\n                }\n                else {\n                    const revertedPlaceholder = this.placeholder.slice(0, this.placeholder.length - historyHint.length);\n                    if (options.showPlaceholderOnFocus) {\n                        this.placeholder = revertedPlaceholder;\n                    }\n                    else {\n                        this.setPlaceHolder(revertedPlaceholder);\n                    }\n                    return true;\n                }\n            };\n            if (!resetPlaceholder(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS)) {\n                resetPlaceholder(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX);\n            }\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this.observer) {\n            this.observer.disconnect();\n            this.observer = undefined;\n        }\n    }\n    addToHistory() {\n        if (this.value && this.value !== this.getCurrentValue()) {\n            this.history.add(this.value);\n        }\n    }\n    showNextValue() {\n        if (!this.history.has(this.value)) {\n            this.addToHistory();\n        }\n        let next = this.getNextValue();\n        if (next) {\n            next = next === this.value ? this.getNextValue() : next;\n        }\n        if (next) {\n            this.value = next;\n            aria.status(this.value);\n        }\n    }\n    showPreviousValue() {\n        if (!this.history.has(this.value)) {\n            this.addToHistory();\n        }\n        let previous = this.getPreviousValue();\n        if (previous) {\n            previous = previous === this.value ? this.getPreviousValue() : previous;\n        }\n        if (previous) {\n            this.value = previous;\n            aria.status(this.value);\n        }\n    }\n    getCurrentValue() {\n        let currentValue = this.history.current();\n        if (!currentValue) {\n            currentValue = this.history.last();\n            this.history.next();\n        }\n        return currentValue;\n    }\n    getPreviousValue() {\n        return this.history.previous() || this.history.first();\n    }\n    getNextValue() {\n        return this.history.next() || this.history.last();\n    }\n}\n"],
  "mappings": "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",
  "names": ["Iterable", "_empty", "concat", "from", "equals", "_a", "self", "_a", "_a", "map", "Node", "Event", "once", "map", "filter", "equals", "buffer", "resolve", "stack", "count", "_a", "event", "CancellationToken", "resolve", "v", "resolve", "timeout", "task", "_a", "token", "timeout", "resolve", "Promises", "_a", "_util", "CSSIcon", "_a", "ColorScheme", "ThemeColor", "ThemeIcon", "isEqual", "_a", "__awaiter", "resolve", "MenuItemAction", "_a", "isPathSeparator", "_format", "sep", "tail", "start", "_a", "OS", "Extensions", "LogLevel", "EditorExtensionsRegistry", "Extensions", "EditorContextKeys", "Severity", "__awaiter", "resolve", "StorageState", "_a", "WillSaveStateReason", "_a", "sep", "obj", "equals", "KeyCodeUtils", "range", "range", "__awaiter", "resolve", "_a", "_registry", "foreground", "CompletionItemKinds", "InlineCompletionTriggerKind", "SignatureHelpTriggerKind", "DocumentHighlightKind", "SymbolKinds", "Command", "InlayHintKind", "TokenizationRegistry", "OverviewRulerLane", "MinimapPosition", "InjectedTextCursorStops", "equals", "range", "IndentAction", "toReversedString", "config", "path", "__decorate", "__param", "LanguageConfigurationService", "range", "once", "range", "text", "r", "lastIndex", "isAndroid", "isChrome", "isFirefox", "isSafari", "userAgent", "isFirefox", "isChrome", "isSafari", "isAndroid", "isSafari", "isFirefox", "isFirefox", "isSafari", "Schemas", "_a", "addStandardDisposableListener", "callback", "timeout", "Namespace", "factor", "relative", "Color", "Format", "CSS", "format", "Extensions", "Extensions", "sorter", "_a", "factor", "range", "range", "__decorate", "EventType", "__decorate", "OrthogonalEdge", "EventType", "_a", "event", "Extensions", "IconContribution", "sorter", "i", "schemaRegistry", "delayer", "Mimes", "range", "Token", "Token", "prepareBracketForRegExp", "append", "range", "_a", "_a", "range", "languageId", "modeBrackets", "foreground", "range", "isPathSeparator", "sep", "pos", "basename", "dirname", "relativePath", "sep", "isEqualOrParent", "extname", "DataUri", "basename", "HorizontalGuidesState", "lineNumber", "indent", "_a", "spacesDiff", "range", "cmp", "SENTINEL", "leftest", "resetSentinel", "leftRotate", "rightRotate", "isBasicASCII", "SENTINEL", "range", "buffer", "startOffset", "startColumn", "startSplitPosInBuffer", "endSplitPosInBuffer", "lineStarts", "nodeStartOffset", "leftest", "containsRTL", "containsUnusualLineTerminators", "isBasicASCII", "range", "range", "TokenizationRegistry", "delta", "tokens", "_a", "range", "range", "firstNonWhitespaceIndex", "__decorate", "__param", "LIMIT_FIND_COUNT", "TextModel", "range", "injectedTextInEditedRangeQueue", "i", "_a", "isFirefox", "_a", "EventType", "__awaiter", "resolve", "_a", "$", "_a", "range", "foreground"]
}
